
/* WebCL Validator JSON header
{
    "version" : "1.0",
    "kernels" :
        {
            "ViterbiOneStep" :
                {
                    "maxProbNew" :
                        {
                            "index" : 0,
                            "type" : "float *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_maxProbNew_size"
                        },
                    "_wcl_maxProbNew_size" :
                        {
                            "index" : 1,
                            "type" : "ulong"
                        },
                    "path" :
                        {
                            "index" : 2,
                            "type" : "int *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_path_size"
                        },
                    "_wcl_path_size" :
                        {
                            "index" : 3,
                            "type" : "ulong"
                        },
                    "maxProbOld" :
                        {
                            "index" : 4,
                            "type" : "float *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_maxProbOld_size"
                        },
                    "_wcl_maxProbOld_size" :
                        {
                            "index" : 5,
                            "type" : "ulong"
                        },
                    "mtState" :
                        {
                            "index" : 6,
                            "type" : "float *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_mtState_size"
                        },
                    "_wcl_mtState_size" :
                        {
                            "index" : 7,
                            "type" : "ulong"
                        },
                    "mtEmit" :
                        {
                            "index" : 8,
                            "type" : "float *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_mtEmit_size"
                        },
                    "_wcl_mtEmit_size" :
                        {
                            "index" : 9,
                            "type" : "ulong"
                        },
                    "maxValue" :
                        {
                            "index" : 10,
                            "type" : "float *",
                            "address-space" : "local",
                            "size-parameter" : "_wcl_maxValue_size"
                        },
                    "_wcl_maxValue_size" :
                        {
                            "index" : 11,
                            "type" : "ulong"
                        },
                    "maxInd" :
                        {
                            "index" : 12,
                            "type" : "int *",
                            "address-space" : "local",
                            "size-parameter" : "_wcl_maxInd_size"
                        },
                    "_wcl_maxInd_size" :
                        {
                            "index" : 13,
                            "type" : "ulong"
                        },
                    "nState" :
                        {
                            "index" : 14,
                            "type" : "int"
                        },
                    "obs" :
                        {
                            "index" : 15,
                            "type" : "int"
                        },
                    "iObs" :
                        {
                            "index" : 16,
                            "type" : "int"
                        }
                },
            "ViterbiPath" :
                {
                    "vProb" :
                        {
                            "index" : 0,
                            "type" : "float *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_vProb_size"
                        },
                    "_wcl_vProb_size" :
                        {
                            "index" : 1,
                            "type" : "ulong"
                        },
                    "vPath" :
                        {
                            "index" : 2,
                            "type" : "int *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_vPath_size"
                        },
                    "_wcl_vPath_size" :
                        {
                            "index" : 3,
                            "type" : "ulong"
                        },
                    "maxProbNew" :
                        {
                            "index" : 4,
                            "type" : "float *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_maxProbNew_size"
                        },
                    "_wcl_maxProbNew_size" :
                        {
                            "index" : 5,
                            "type" : "ulong"
                        },
                    "path" :
                        {
                            "index" : 6,
                            "type" : "int *",
                            "address-space" : "global",
                            "size-parameter" : "_wcl_path_size"
                        },
                    "_wcl_path_size" :
                        {
                            "index" : 7,
                            "type" : "ulong"
                        },
                    "nState" :
                        {
                            "index" : 8,
                            "type" : "int"
                        },
                    "nObs" :
                        {
                            "index" : 9,
                            "type" : "int"
                        }
                }
        }
}
*/

// WebCL Validator: validation stage.
#define _WCL_ADDRESS_SPACE_private_MIN (((8 + (CHAR_BIT - 1)) / CHAR_BIT))
#define _WCL_ADDRESS_SPACE_private_ALIGNMENT (8/CHAR_BIT)
#define _WCL_ADDRESS_SPACE_global_MIN (((32 + (CHAR_BIT - 1)) / CHAR_BIT))
#define _WCL_ADDRESS_SPACE_global_ALIGNMENT (32/CHAR_BIT)
#define _WCL_ADDRESS_SPACE_local_MIN (((32 + (CHAR_BIT - 1)) / CHAR_BIT))
#define _WCL_ADDRESS_SPACE_local_ALIGNMENT (32/CHAR_BIT)
#define _WCL_ADDRESS_SPACE_constant_MIN (((8 + (CHAR_BIT - 1)) / CHAR_BIT))
#define _WCL_ADDRESS_SPACE_constant_ALIGNMENT (8/CHAR_BIT)
typedef struct {
    int _wcl_idx;
    float _wcl_m1;
    float _wcl_m2;
    float _wcl_m3;
    float _wcl_value;
} __attribute__ ((aligned (_WCL_ADDRESS_SPACE_private_ALIGNMENT))) _WclPrivates;

typedef struct {
    __global float *ViterbiOneStep__maxProbNew_min;
    __global float *ViterbiOneStep__maxProbNew_max;
    __global int *ViterbiOneStep__path_min;
    __global int *ViterbiOneStep__path_max;
    __global float *ViterbiOneStep__maxProbOld_min;
    __global float *ViterbiOneStep__maxProbOld_max;
    __global float *ViterbiOneStep__mtState_min;
    __global float *ViterbiOneStep__mtState_max;
    __global float *ViterbiOneStep__mtEmit_min;
    __global float *ViterbiOneStep__mtEmit_max;
    __global float *ViterbiPath__vProb_min;
    __global float *ViterbiPath__vProb_max;
    __global int *ViterbiPath__vPath_min;
    __global int *ViterbiPath__vPath_max;
    __global float *ViterbiPath__maxProbNew_min;
    __global float *ViterbiPath__maxProbNew_max;
    __global int *ViterbiPath__path_min;
    __global int *ViterbiPath__path_max;
} _WclGlobalLimits;

typedef struct {
    __local float *ViterbiOneStep__maxValue_min;
    __local float *ViterbiOneStep__maxValue_max;
    __local int *ViterbiOneStep__maxInd_min;
    __local int *ViterbiOneStep__maxInd_max;
} _WclLocalLimits;

typedef struct {
    _WclGlobalLimits gl;
    __global uint *gn;
    _WclLocalLimits ll;
    __local uint *ln;
    _WclPrivates pa;
    __private uint *pn;
} _WclProgramAllocations;

__constant uint _wcl_constant_null[_WCL_ADDRESS_SPACE_constant_MIN] = { 0 };

// => General code that doesn't depend on input.

#define _WCL_MEMCPY(dst, src) for(ulong i = 0; i < sizeof((src))/sizeof((src)[0]); i++) { (dst)[i] = (src)[i]; }

#define _WCL_LAST(type, ptr) (((type)(ptr)) - 1)
#define _WCL_FILLCHAR ((uchar)0xCC)

// POCL crashes at run time if the parameters are local character
// pointers.
typedef uint _WclInitType;

// NOTE: this expects that null pointer is type of uint*
#define _WCL_SET_NULL(type, req_bytes, min, max, null) ( ((((type)max)-((type)min))*sizeof(uint) >= req_bytes) ? ((type)min) : (null) )

#ifdef cl_khr_initialize_memory
#pragma OPENCL EXTENSION cl_khr_initialize_memory : enable
#define _WCL_LOCAL_RANGE_INIT(begin, end)
#else

#define _WCL_LOCAL_RANGE_INIT(begin, end) do {               \
    __local uchar *start = (__local uchar *)begin;           \
    __local uchar *stop = (__local uchar *)end;              \
    const size_t z_items = get_local_size(2);                \
    const size_t yz_items = get_local_size(1) * z_items;     \
    const size_t xyz_items = get_local_size(0) * yz_items;   \
    const size_t item_index =                                \
        (get_local_id(0) * yz_items) +                       \
        (get_local_id(1) * z_items) +                        \
        get_local_id(2);                                     \
    size_t item_count = stop - start;                        \
    size_t items_per_kernel = item_count / xyz_items;        \
    size_t items_offset = items_per_kernel * item_index;     \
    size_t reminders = item_count % xyz_items;               \
    if (item_index < reminders) {                            \
        start[xyz_items*items_per_kernel + item_index] = _WCL_FILLCHAR; \
    }                                                                   \
    for (size_t i = 0; i < items_per_kernel; i++) {                     \
        start[items_offset+i] = _WCL_FILLCHAR;                          \
    }                                                                   \
} while (0)                                                             \

#endif // cl_khr_initialize_memory

// <= General code that doesn't depend on input.

bool _wcl_addr_check_global_9__u_uglobal__float__Ptr(__global float *addr, unsigned size, __global float * min0, __global float * max0, __global float * min1, __global float * max1, __global float * min2, __global float * max2, __global float * min3, __global float * max3, __global float * min4, __global float * max4, __global float * min5, __global float * max5, __global float * min6, __global float * max6, __global float * min7, __global float * max7, __global float * min8, __global float * max8)
{
      return 0
        || ( ((addr) >= (min0)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max0)) )
        || ( ((addr) >= (min1)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max1)) )
        || ( ((addr) >= (min2)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max2)) )
        || ( ((addr) >= (min3)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max3)) )
        || ( ((addr) >= (min4)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max4)) )
        || ( ((addr) >= (min5)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max5)) )
        || ( ((addr) >= (min6)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max6)) )
        || ( ((addr) >= (min7)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max7)) )
        || ( ((addr) >= (min8)) && ((addr + size - 1) <= _WCL_LAST(__global float *, max8)) );
}
__global float *_wcl_addr_clamp_global_9__u_uglobal__float__Ptr(__global float *addr, unsigned size, __global float * min0, __global float * max0, __global float * min1, __global float * max1, __global float * min2, __global float * max2, __global float * min3, __global float * max3, __global float * min4, __global float * max4, __global float * min5, __global float * max5, __global float * min6, __global float * max6, __global float * min7, __global float * max7, __global float * min8, __global float * max8, __global float * asnull)
{
     return _wcl_addr_check_global_9__u_uglobal__float__Ptr(addr, size, min0, max0, min1, max1, min2, max2, min3, max3, min4, max4, min5, max5, min6, max6, min7, max7, min8, max8) ? addr : asnull;
}

bool _wcl_addr_check_global_9__u_uglobal__int__Ptr(__global int *addr, unsigned size, __global int * min0, __global int * max0, __global int * min1, __global int * max1, __global int * min2, __global int * max2, __global int * min3, __global int * max3, __global int * min4, __global int * max4, __global int * min5, __global int * max5, __global int * min6, __global int * max6, __global int * min7, __global int * max7, __global int * min8, __global int * max8)
{
      return 0
        || ( ((addr) >= (min0)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max0)) )
        || ( ((addr) >= (min1)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max1)) )
        || ( ((addr) >= (min2)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max2)) )
        || ( ((addr) >= (min3)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max3)) )
        || ( ((addr) >= (min4)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max4)) )
        || ( ((addr) >= (min5)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max5)) )
        || ( ((addr) >= (min6)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max6)) )
        || ( ((addr) >= (min7)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max7)) )
        || ( ((addr) >= (min8)) && ((addr + size - 1) <= _WCL_LAST(__global int *, max8)) );
}
__global int *_wcl_addr_clamp_global_9__u_uglobal__int__Ptr(__global int *addr, unsigned size, __global int * min0, __global int * max0, __global int * min1, __global int * max1, __global int * min2, __global int * max2, __global int * min3, __global int * max3, __global int * min4, __global int * max4, __global int * min5, __global int * max5, __global int * min6, __global int * max6, __global int * min7, __global int * max7, __global int * min8, __global int * max8, __global int * asnull)
{
     return _wcl_addr_check_global_9__u_uglobal__int__Ptr(addr, size, min0, max0, min1, max1, min2, max2, min3, max3, min4, max4, min5, max5, min6, max6, min7, max7, min8, max8) ? addr : asnull;
}

bool _wcl_addr_check_local_2__u_ulocal__float__Ptr(__local float *addr, unsigned size, __local float * min0, __local float * max0, __local float * min1, __local float * max1)
{
      return 0
        || ( ((addr) >= (min0)) && ((addr + size - 1) <= _WCL_LAST(__local float *, max0)) )
        || ( ((addr) >= (min1)) && ((addr + size - 1) <= _WCL_LAST(__local float *, max1)) );
}
__local float *_wcl_addr_clamp_local_2__u_ulocal__float__Ptr(__local float *addr, unsigned size, __local float * min0, __local float * max0, __local float * min1, __local float * max1, __local float * asnull)
{
     return _wcl_addr_check_local_2__u_ulocal__float__Ptr(addr, size, min0, max0, min1, max1) ? addr : asnull;
}

bool _wcl_addr_check_local_2__u_ulocal__int__Ptr(__local int *addr, unsigned size, __local int * min0, __local int * max0, __local int * min1, __local int * max1)
{
      return 0
        || ( ((addr) >= (min0)) && ((addr + size - 1) <= _WCL_LAST(__local int *, max0)) )
        || ( ((addr) >= (min1)) && ((addr + size - 1) <= _WCL_LAST(__local int *, max1)) );
}
__local int *_wcl_addr_clamp_local_2__u_ulocal__int__Ptr(__local int *addr, unsigned size, __local int * min0, __local int * max0, __local int * min1, __local int * max1, __local int * asnull)
{
     return _wcl_addr_check_local_2__u_ulocal__int__Ptr(addr, size, min0, max0, min1, max1) ? addr : asnull;
}


// WebCL Validator: matching stage 2.
// WebCL Validator: matching stage 1.
/*
 * Copyright 1993-2010 NVIDIA Corporation.  All rights reserved.
 *
 * Please refer to the NVIDIA end user license agreement (EULA) associated
 * with this source code for terms and conditions that govern your use of
 * this software. Any use, reproduction, disclosure, or distribution of
 * this software and related documentation outside the terms of the EULA
 * is strictly prohibited.
 *
 */

// Find the max in local memory array. 
// On return, the max value is in maxValue[0], the index of max element is in maxInd[0]
//*****************************************************************************
void maxOneBlock(_WclProgramAllocations *_wcl_allocs, __local float *maxValue,
                 __local int *maxInd)
{
    uint localId = get_local_id(0);
    uint localSize = get_local_size(0);
    int idx;
    float m1, m2, m3;

    for (uint s = localSize/2; s > 32; s >>= 1)
    {
        if (localId < s)
        {
            _wcl_allocs->pa._wcl_m1 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
            _wcl_allocs->pa._wcl_m2 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId+s), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
            _wcl_allocs->pa._wcl_m3 = (_wcl_allocs->pa._wcl_m1 >= _wcl_allocs->pa._wcl_m2) ? _wcl_allocs->pa._wcl_m1 : _wcl_allocs->pa._wcl_m2;
            _wcl_allocs->pa._wcl_idx = (_wcl_allocs->pa._wcl_m1 >= _wcl_allocs->pa._wcl_m2) ? localId : localId + s;
            (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = _wcl_allocs->pa._wcl_m3;
            (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(_wcl_allocs->pa._wcl_idx), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }

    // unroll the final warp to reduce loop and sync overheads
    if (localId < 32)
    {
        _wcl_allocs->pa._wcl_m1 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m2 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId+32), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m3 = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? _wcl_allocs->pa._wcl_m1 : _wcl_allocs->pa._wcl_m2;
        _wcl_allocs->pa._wcl_idx = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? localId : localId + 32;
        (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = _wcl_allocs->pa._wcl_m3;
        (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(_wcl_allocs->pa._wcl_idx), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));


        _wcl_allocs->pa._wcl_m1 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m2 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId+16), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m3 = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? _wcl_allocs->pa._wcl_m1 : _wcl_allocs->pa._wcl_m2;
        _wcl_allocs->pa._wcl_idx = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? localId : localId + 16;
        (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = _wcl_allocs->pa._wcl_m3;
        (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(_wcl_allocs->pa._wcl_idx), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));

        _wcl_allocs->pa._wcl_m1 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m2 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId+8), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m3 = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? _wcl_allocs->pa._wcl_m1 : _wcl_allocs->pa._wcl_m2;
        _wcl_allocs->pa._wcl_idx = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? localId : localId + 8;
        (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = _wcl_allocs->pa._wcl_m3;
        (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(_wcl_allocs->pa._wcl_idx), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));

        _wcl_allocs->pa._wcl_m1 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m2 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId+4), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m3 = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? _wcl_allocs->pa._wcl_m1 : _wcl_allocs->pa._wcl_m2;
        _wcl_allocs->pa._wcl_idx = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? localId : localId + 4;
        (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = _wcl_allocs->pa._wcl_m3;
        (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(_wcl_allocs->pa._wcl_idx), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));

        _wcl_allocs->pa._wcl_m1 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m2 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId+2), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m3 = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? _wcl_allocs->pa._wcl_m1 : _wcl_allocs->pa._wcl_m2;
        _wcl_allocs->pa._wcl_idx = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? localId : localId + 2;
        (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = _wcl_allocs->pa._wcl_m3;
        (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(_wcl_allocs->pa._wcl_idx), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));

        _wcl_allocs->pa._wcl_m1 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m2 = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId+1), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln)));
        _wcl_allocs->pa._wcl_m3 = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? _wcl_allocs->pa._wcl_m1 : _wcl_allocs->pa._wcl_m2;
        _wcl_allocs->pa._wcl_idx = (_wcl_allocs->pa._wcl_m1 > _wcl_allocs->pa._wcl_m2) ? localId : localId + 1;
        (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = _wcl_allocs->pa._wcl_m3;
        (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(_wcl_allocs->pa._wcl_idx), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));
    }
}


__kernel void ViterbiOneStep(__global float *maxProbNew, ulong _wcl_maxProbNew_size,
                             __global int *path, ulong _wcl_path_size,
                             __global float *maxProbOld, ulong _wcl_maxProbOld_size,
                             __global float *mtState, ulong _wcl_mtState_size,
                             __global float *mtEmit, ulong _wcl_mtEmit_size,
                             __local float *maxValue, ulong _wcl_maxValue_size,
                             __local int *maxInd, ulong _wcl_maxInd_size,
                             int nState,
                             int obs,
                             int iObs)
{
    __local uint _wcl_local_null[_WCL_ADDRESS_SPACE_local_MIN];

    _WclProgramAllocations _wcl_allocations_allocation = {
        { &maxProbNew[0], &maxProbNew[_wcl_maxProbNew_size],&path[0], &path[_wcl_path_size],&maxProbOld[0], &maxProbOld[_wcl_maxProbOld_size],&mtState[0], &mtState[_wcl_mtState_size],&mtEmit[0], &mtEmit[_wcl_mtEmit_size],0, 0,0, 0,0, 0,0, 0 },
        0,
        { &maxValue[0], &maxValue[_wcl_maxValue_size],&maxInd[0], &maxInd[_wcl_maxInd_size] },
        _wcl_local_null,
        { },
        0

    };
    _WclProgramAllocations *_wcl_allocs = &_wcl_allocations_allocation;
    _wcl_allocs->gn = _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, _wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__path_min, _wcl_allocs->gl.ViterbiOneStep__path_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, _wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__mtState_min, _wcl_allocs->gl.ViterbiOneStep__mtState_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, _wcl_allocs->gl.ViterbiOneStep__mtEmit_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__vProb_min, _wcl_allocs->gl.ViterbiPath__vProb_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__vPath_min, _wcl_allocs->gl.ViterbiPath__vPath_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__maxProbNew_min, _wcl_allocs->gl.ViterbiPath__maxProbNew_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__path_min, _wcl_allocs->gl.ViterbiPath__path_max, (__global uint*)0)))))))));
    if (_wcl_allocs->gn == (__global uint*)0) return; // not enough space to meet the minimum access. Would be great if we could give info about the problem for the user. 
    _wcl_allocs->pn = _WCL_SET_NULL(__private uint*, _WCL_ADDRESS_SPACE_private_MIN, &_wcl_allocs->pa, (&_wcl_allocs->pa + 1), (__private uint*)0);
    if (_wcl_allocs->pn == (__private uint*)0) return; // not enough space to meet the minimum access. Would be great if we could give info about the problem for the user. 

    // => Local memory zeroing.
    _WCL_LOCAL_RANGE_INIT(_wcl_allocs->ll.ViterbiOneStep__maxValue_min, _wcl_allocs->ll.ViterbiOneStep__maxValue_max);
    _WCL_LOCAL_RANGE_INIT(_wcl_allocs->ll.ViterbiOneStep__maxInd_min, _wcl_allocs->ll.ViterbiOneStep__maxInd_max);
    _WCL_LOCAL_RANGE_INIT(_wcl_local_null, _wcl_local_null + _WCL_ADDRESS_SPACE_local_MIN);
    barrier(CLK_LOCAL_MEM_FENCE);
    // <= Local memory zeroing.

    uint groupId = get_group_id(0) + get_group_id(1)*get_num_groups(0);
    uint localId = get_local_id(0);
    uint localSize = get_local_size(0);

    uint iState = groupId;

    // loop through all previous states, calculating the max
    float mValue = -1.0f;
    int mInd = -1;
    float value;
    for (int i = localId; i < nState; i += localSize)
    {
  _wcl_allocs->pa._wcl_value = (*(_wcl_addr_clamp_global_9__u_uglobal__float__Ptr((maxProbOld)+(i), 1, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiPath__path_min, (__global float *)_wcl_allocs->gl.ViterbiPath__path_max, (__global float *)_wcl_allocs->gn))) + (*(_wcl_addr_clamp_global_9__u_uglobal__float__Ptr((mtState)+(iState*nState + i), 1, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiPath__path_min, (__global float *)_wcl_allocs->gl.ViterbiPath__path_max, (__global float *)_wcl_allocs->gn)));
  if (_wcl_allocs->pa._wcl_value > mValue)
  {
   mValue = _wcl_allocs->pa._wcl_value;
   mInd = i;
  }
    }
    (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(localId), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) = mValue;
    (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(localId), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln))) = mInd;
    barrier(CLK_LOCAL_MEM_FENCE);

    maxOneBlock(_wcl_allocs, maxValue, maxInd);

    // copy results from local to global memory
    if (localId == 0)
    {
        (*(_wcl_addr_clamp_global_9__u_uglobal__float__Ptr((maxProbNew)+(iState), 1, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiPath__path_min, (__global float *)_wcl_allocs->gl.ViterbiPath__path_max, (__global float *)_wcl_allocs->gn))) = (*(_wcl_addr_clamp_local_2__u_ulocal__float__Ptr((maxValue)+(0), 1, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local float *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local float *)_wcl_allocs->ln))) + (*(_wcl_addr_clamp_global_9__u_uglobal__float__Ptr((mtEmit)+(obs*nState + iState), 1, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiPath__path_min, (__global float *)_wcl_allocs->gl.ViterbiPath__path_max, (__global float *)_wcl_allocs->gn)));
        (*(_wcl_addr_clamp_global_9__u_uglobal__int__Ptr((path)+((iObs-1)*nState + iState), 1, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiPath__path_min, (__global int *)_wcl_allocs->gl.ViterbiPath__path_max, (__global int *)_wcl_allocs->gn))) = (*(_wcl_addr_clamp_local_2__u_ulocal__int__Ptr((maxInd)+(0), 1, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxValue_max, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_min, (__local int *)_wcl_allocs->ll.ViterbiOneStep__maxInd_max, (__local int *)_wcl_allocs->ln)));
    }
}


__kernel void ViterbiPath(__global float *vProb, ulong _wcl_vProb_size,
                          __global int *vPath, ulong _wcl_vPath_size,
                          __global float *maxProbNew, ulong _wcl_maxProbNew_size,
                          __global int *path, ulong _wcl_path_size,
                          int nState,
                          int nObs)
{
    __local uint _wcl_local_null[_WCL_ADDRESS_SPACE_local_MIN];

    _WclProgramAllocations _wcl_allocations_allocation = {
        { 0, 0,0, 0,0, 0,0, 0,0, 0,&vProb[0], &vProb[_wcl_vProb_size],&vPath[0], &vPath[_wcl_vPath_size],&maxProbNew[0], &maxProbNew[_wcl_maxProbNew_size],&path[0], &path[_wcl_path_size] },
        0,
        { 0, 0,0, 0 },
        _wcl_local_null,
        { },
        0

    };
    _WclProgramAllocations *_wcl_allocs = &_wcl_allocations_allocation;
    _wcl_allocs->gn = _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, _wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__path_min, _wcl_allocs->gl.ViterbiOneStep__path_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, _wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__mtState_min, _wcl_allocs->gl.ViterbiOneStep__mtState_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, _wcl_allocs->gl.ViterbiOneStep__mtEmit_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__vProb_min, _wcl_allocs->gl.ViterbiPath__vProb_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__vPath_min, _wcl_allocs->gl.ViterbiPath__vPath_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__maxProbNew_min, _wcl_allocs->gl.ViterbiPath__maxProbNew_max, _WCL_SET_NULL(__global uint*, _WCL_ADDRESS_SPACE_global_MIN,_wcl_allocs->gl.ViterbiPath__path_min, _wcl_allocs->gl.ViterbiPath__path_max, (__global uint*)0)))))))));
    if (_wcl_allocs->gn == (__global uint*)0) return; // not enough space to meet the minimum access. Would be great if we could give info about the problem for the user. 
    _wcl_allocs->pn = _WCL_SET_NULL(__private uint*, _WCL_ADDRESS_SPACE_private_MIN, &_wcl_allocs->pa, (&_wcl_allocs->pa + 1), (__private uint*)0);
    if (_wcl_allocs->pn == (__private uint*)0) return; // not enough space to meet the minimum access. Would be great if we could give info about the problem for the user. 

    // => Local memory zeroing.
    _WCL_LOCAL_RANGE_INIT(_wcl_allocs->ll.ViterbiOneStep__maxValue_min, _wcl_allocs->ll.ViterbiOneStep__maxValue_max);
    _WCL_LOCAL_RANGE_INIT(_wcl_allocs->ll.ViterbiOneStep__maxInd_min, _wcl_allocs->ll.ViterbiOneStep__maxInd_max);
    _WCL_LOCAL_RANGE_INIT(_wcl_local_null, _wcl_local_null + _WCL_ADDRESS_SPACE_local_MIN);
    barrier(CLK_LOCAL_MEM_FENCE);
    // <= Local memory zeroing.

    // find the final most probable state
    if (get_global_id(0) == 0)
    {
        float maxProb = 0.0;
        int maxState = -1;
        for (int i = 0; i < nState; i++)
        {
            if ((*(_wcl_addr_clamp_global_9__u_uglobal__float__Ptr((maxProbNew)+(i), 1, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiPath__path_min, (__global float *)_wcl_allocs->gl.ViterbiPath__path_max, (__global float *)_wcl_allocs->gn))) > maxProb)
            {
                maxProb = (*(_wcl_addr_clamp_global_9__u_uglobal__float__Ptr((maxProbNew)+(i), 1, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiPath__path_min, (__global float *)_wcl_allocs->gl.ViterbiPath__path_max, (__global float *)_wcl_allocs->gn)));
                maxState = i;
            }
        }
        (*(_wcl_addr_clamp_global_9__u_uglobal__float__Ptr((vProb), 1, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global float *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global float *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global float *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global float *)_wcl_allocs->gl.ViterbiPath__path_min, (__global float *)_wcl_allocs->gl.ViterbiPath__path_max, (__global float *)_wcl_allocs->gn))) = maxProb;

        // backtrace to find the Viterbi path
        (*(_wcl_addr_clamp_global_9__u_uglobal__int__Ptr((vPath)+(nObs-1), 1, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiPath__path_min, (__global int *)_wcl_allocs->gl.ViterbiPath__path_max, (__global int *)_wcl_allocs->gn))) = maxState;
        mem_fence(CLK_GLOBAL_MEM_FENCE);
        for (int t = nObs-2; t >= 0; t--)
        {
            (*(_wcl_addr_clamp_global_9__u_uglobal__int__Ptr((vPath)+(t), 1, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiPath__path_min, (__global int *)_wcl_allocs->gl.ViterbiPath__path_max, (__global int *)_wcl_allocs->gn))) = (*(_wcl_addr_clamp_global_9__u_uglobal__int__Ptr((path)+(t*nState + (*(_wcl_addr_clamp_global_9__u_uglobal__int__Ptr((vPath)+(t+1), 1, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiPath__path_min, (__global int *)_wcl_allocs->gl.ViterbiPath__path_max, (__global int *)_wcl_allocs->gn)))), 1, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__path_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__maxProbOld_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtState_max, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_min, (__global int *)_wcl_allocs->gl.ViterbiOneStep__mtEmit_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vProb_max, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_min, (__global int *)_wcl_allocs->gl.ViterbiPath__vPath_max, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_min, (__global int *)_wcl_allocs->gl.ViterbiPath__maxProbNew_max, (__global int *)_wcl_allocs->gl.ViterbiPath__path_min, (__global int *)_wcl_allocs->gl.ViterbiPath__path_max, (__global int *)_wcl_allocs->gn)));
            mem_fence(CLK_GLOBAL_MEM_FENCE);
        }
    }
}
