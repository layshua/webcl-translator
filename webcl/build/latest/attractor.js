// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function(filename) { return Module['read'](filename, true) };
  Module['load'] = function(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module.exports = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function() { throw 'no read() available (jsc?)' };
  }
  Module['readBinary'] = function(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (typeof console !== 'undefined') {
    Module['print'] = function(x) {
      console.log(x);
    };
    Module['printErr'] = function(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  if (ENVIRONMENT_IS_WEB) {
    this['Module'] = Module;
  } else {
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      return '(((' +target + ')+' + (quantum-1) + ')&' + -quantum + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          if (Types.types[field]) {
            alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
          } else {
            alignSize = type.alignSize || QUANTUM_SIZE;
          }
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xFF;
      if (buffer.length == 0) {
        if ((code & 0x80) == 0x00) {        // 0xxxxxxx
          return String.fromCharCode(code);
        }
        buffer.push(code);
        if ((code & 0xE0) == 0xC0) {        // 110xxxxx
          needed = 1;
        } else if ((code & 0xF0) == 0xE0) { // 1110xxxx
          needed = 2;
        } else {                            // 11110xxx
          needed = 3;
        }
        return '';
      }
      if (needed) {
        buffer.push(code);
        needed--;
        if (needed > 0) return '';
      }
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var c4 = buffer[3];
      var ret;
      if (buffer.length == 2) {
        ret = String.fromCharCode(((c1 & 0x1F) << 6)  | (c2 & 0x3F));
      } else if (buffer.length == 3) {
        ret = String.fromCharCode(((c1 & 0x0F) << 12) | ((c2 & 0x3F) << 6)  | (c3 & 0x3F));
      } else {
        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        var codePoint = ((c1 & 0x07) << 18) | ((c2 & 0x3F) << 12) |
                        ((c3 & 0x3F) << 6)  | (c4 & 0x3F);
        ret = String.fromCharCode(
          Math.floor((codePoint - 0x10000) / 0x400) + 0xD800,
          (codePoint - 0x10000) % 0x400 + 0xDC00);
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+7)&-8); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+7)&-8); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+7)&-8); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+(4294967296)))) : ((+((low>>>0)))+((+((high|0)))*(+(4294967296))))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      value = intArrayFromString(value);
      type = 'array';
    }
    if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= (+(1)) ? (tempDouble > (+(0)) ? ((Math.min((+(Math.floor((tempDouble)/(+(4294967296))))), (+(4294967295))))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+(4294967296)))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF16ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF16LE form. The copy will require at most (str.length*2+1)*2 bytes of space in the HEAP.
function stringToUTF16(str, outPtr) {
  for(var i = 0; i < str.length; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[(((outPtr)+(i*2))>>1)]=codeUnit
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[(((outPtr)+(str.length*2))>>1)]=0
}
Module['stringToUTF16'] = stringToUTF16;
// Given a pointer 'ptr' to a null-terminated UTF32LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.
function UTF32ToString(ptr) {
  var i = 0;
  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;
// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr', 
// null-terminated and encoded in UTF32LE form. The copy will require at most (str.length+1)*4 bytes of space in the HEAP,
// but can use less, since str.length does not return the number of characters in the string, but the number of UTF-16 code units in the string.
function stringToUTF32(str, outPtr) {
  var iChar = 0;
  for(var iCodeUnit = 0; iCodeUnit < str.length; ++iCodeUnit) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    var codeUnit = str.charCodeAt(iCodeUnit); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++iCodeUnit);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[(((outPtr)+(iChar*4))>>2)]=codeUnit
    ++iChar;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[(((outPtr)+(iChar*4))>>2)]=0
}
Module['stringToUTF32'] = stringToUTF32;
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return (x+4095)&-4096;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 1073741824;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=str.charCodeAt(i)
  }
  if (!dontAddNull) HEAP8[(((buffer)+(str.length))|0)]=0
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyTracking = {};
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
var memoryInitializer = null;
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 17816;
var _stdout;
var _stdout = _stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin;
var _stdin = _stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr;
var _stderr = _stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a162() } });
var ___fsmu8;
var ___dso_handle;
var __ZTVN10__cxxabiv120__si_class_type_infoE;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,224,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZTVN10__cxxabiv117__class_type_infoE;
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,240,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var __ZN7gltools15ShaderContainerD1Ev;
var __ZN19LorenzAttractorDemoC1Ev;
var __ZN27LorenzAttractorOpenCLSolverC1Ev;
var __ZNSt13runtime_errorC1ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE;
var __ZNSt13runtime_errorC1EPKc;
var __ZNSt13runtime_errorD1Ev;
var __ZNSt12length_errorD1Ev;
var __ZNSt14overflow_errorD1Ev;
var __ZNSt3__16localeC1Ev;
var __ZNSt3__16localeC1ERKS0_;
var __ZNSt3__16localeD1Ev;
var __ZNSt8bad_castC1Ev;
var __ZNSt8bad_castD1Ev;
/* memory initializer */ allocate([65,76,32,45,45,62,32,84,101,109,112,111,114,97,114,121,32,108,105,109,105,116,32,109,97,105,110,76,111,111,112,0,0,0,0,0,0,0,36,64,0,0,0,0,0,0,89,64,0,0,0,0,0,136,195,64,0,0,0,0,132,215,151,65,0,128,224,55,121,195,65,67,23,110,5,181,181,184,147,70,245,249,63,233,3,79,56,77,50,29,48,249,72,119,130,90,60,191,115,127,221,79,21,117,74,117,108,0,0,0,0,0,74,117,110,0,0,0,0,0,65,112,114,0,0,0,0,0,107,101,114,110,101,108,83,116,101,112,0,0,0,0,0,0,77,97,114,0,0,0,0,0,70,101,98,0,0,0,0,0,110,80,97,114,116,105,99,108,101,115,0,0,0,0,0,0,74,97,110,0,0,0,0,0,68,101,99,101,109,98,101,114,0,0,0,0,0,0,0,0,78,111,118,101,109,98,101,114,0,0,0,0,0,0,0,0,79,99,116,111,98,101,114,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,0,0,100,101,109,111,32,109,117,115,116,32,98,101,32,99,114,101,97,116,101,32,98,101,102,111,114,101,32,115,111,108,118,101,114,0,0,0,0,0,0,0,83,101,112,116,101,109,98,101,114,0,0,0,0,0,0,0,110,80,97,114,116,105,99,108,101,115,0,0,0,0,0,0,65,117,103,117,115,116,0,0,74,117,108,121,0,0,0,0,74,117,110,101,0,0,0,0,79,112,101,110,67,76,32,98,117,105,108,100,32,102,97,105,108,101,100,58,0,0,0,0,77,97,121,0,0,0,0,0,65,112,114,105,108,0,0,0,71,76,83,76,32,112,114,111,103,114,97,109,32,98,117,105,108,100,32,102,97,105,108,101,100,0,0,0,0,0,0,0,77,97,114,99,104,0,0,0,70,101,98,114,117,97,114,121,0,0,0,0,0,0,0,0,119,105,110,100,111,119,72,101,105,103,104,116,0,0,0,0,74,97,110,117,97,114,121,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,70,80,83,58,32,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,98,97,115,105,99,95,115,116,114,105,110,103,0,0,0,0,117,110,97,98,108,101,32,116,111,32,111,112,101,110,32,107,101,114,110,101,108,32,102,105,108,101,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,118,101,114,116,101,120,84,101,120,67,111,111,114,100,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,117,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,100,101,109,111,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,69,82,82,79,82,58,32,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,0,0,0,0,107,101,114,110,101,108,70,105,108,101,110,97,109,101,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,118,101,114,116,101,120,67,111,108,111,114,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,79,112,101,110,67,76,32,101,114,114,111,114,44,32,0,0,115,105,109,117,108,97,116,105,111,110,69,110,100,70,114,97,109,101,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,95,95,110,101,120,116,95,112,114,105,109,101,32,111,118,101,114,102,108,111,119,0,0,0,69,82,82,79,82,58,32,117,110,107,110,111,119,110,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,110,111,32,79,112,101,110,67,76,32,100,101,118,105,99,101,115,32,102,111,117,110,100,0,80,77,0,0,0,0,0,0,118,101,114,116,101,120,80,111,115,0,0,0,0,0,0,0,65,77,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,101,120,112,111,114,116,83,116,97,114,116,70,114,97,109,101,0,0,0,0,0,0,0,0,69,82,82,79,82,58,32,102,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,97,112,112,108,105,99,97,116,105,111,110,0,0,0,0,0,67,76,95,71,76,95,105,110,116,101,114,111,112,0,0,0,99,108,71,101,116,80,108,97,116,102,111,114,109,73,68,115,0,0,0,0,0,0,0,0,76,111,114,101,110,122,65,116,116,114,97,99,116,111,114,68,101,109,111,46,99,112,112,0,99,108,67,114,101,97,116,101,67,111,110,116,101,120,116,70,114,111,109,84,121,112,101,0,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,32,115,104,97,100,101,114,32,0,0,0,0,0,0,0,99,108,67,114,101,97,116,101,80,114,111,103,114,97,109,87,105,116,104,83,111,117,114,99,101,0,0,0,0,0,0,0,99,108,66,117,105,108,100,80,114,111,103,114,97,109,0,0,99,108,67,114,101,97,116,101,75,101,114,110,101,108,0,0,99,108,67,114,101,97,116,101,67,111,109,109,97,110,100,81,117,101,117,101,0,0,0,0,119,105,110,100,111,119,84,105,116,108,101,0,0,0,0,0,117,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,115,111,108,118,101,114,0,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,99,108,67,114,101,97,116,101,70,114,111,109,71,76,66,117,102,102,101,114,0,0,0,0,99,108,67,114,101,97,116,101,66,117,102,102,101,114,0,0,87,101,98,67,76,32,76,111,114,101,110,122,32,68,101,109,111,0,0,0,0,0,0,0,118,101,114,116,101,120,83,104,97,100,101,114,70,105,108,101,110,97,109,101,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,99,108,69,110,113,117,101,117,101,65,99,113,117,105,114,101,71,76,79,98,106,101,99,116,115,0,0,0,0,0,0,0,110,111,32,79,112,101,110,67,76,32,112,108,97,116,102,111,114,109,115,32,102,111,117,110,100,0,0,0,0,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,99,108,69,110,113,117,101,117,101,78,68,82,97,110,103,101,75,101,114,110,101,108,0,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,99,108,69,110,113,117,101,117,101,82,101,108,101,97,115,101,71,76,79,98,106,101,99,116,115,0,0,0,0,0,0,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,0,0,0,117,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,71,76,83,76,32,112,114,111,103,114,97,109,0,0,0,99,108,70,105,110,105,115,104,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,83,104,97,100,101,114,32,99,111,109,112,105,108,101,32,108,111,103,58,32,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,99,108,69,110,113,117,101,117,101,82,101,97,100,66,117,102,102,101,114,0,0,0,0,0,99,108,71,101,116,67,111,110,116,101,120,116,73,110,102,111,0,0,0,0,0,0,0,0,37,72,58,37,77,58,37,83,0,0,0,0,0,0,0,0,117,110,97,98,108,101,32,116,111,32,111,112,101,110,32,115,104,97,100,101,114,32,102,105,108,101,32,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,37,109,47,37,100,47,37,121,0,0,0,0,0,0,0,0,119,105,110,100,111,119,72,101,105,103,104,116,0,0,0,0,83,111,108,118,101,114,46,99,112,112,0,0,0,0,0,0,119,105,110,100,111,119,84,105,116,108,101,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,76,111,114,101,110,122,65,116,116,114,97,99,116,111,114,79,112,101,110,67,76,83,111,108,118,101,114,46,99,112,112,0,116,114,117,101,0,0,0,0,103,101,111,109,101,116,114,121,83,104,97,100,101,114,70,105,108,101,110,97,109,101,0,0,117,110,97,98,108,101,32,116,111,32,99,114,101,97,116,101,32,115,104,97,100,101,114,32,111,98,106,101,99,116,0,0,58,32,0,0,0,0,0,0,114,0,0,0,0,0,0,0,44,32,108,105,110,101,32,0,37,115,32,105,110,32,37,115,44,32,108,105,110,101,32,37,100,10,0,0,0,0,0,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,108,105,102,101,116,105,109,101,0,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,99,111,108,111,114,0,0,0,119,105,110,100,111,119,87,105,100,116,104,0,0,0,0,0,99,108,71,101,116,80,114,111,103,114,97,109,66,117,105,108,100,73,110,102,111,0,0,0,116,97,115,107,0,0,0,0,112,111,115,0,0,0,0,0,77,86,80,0,0,0,0,0,119,105,110,100,111,119,87,105,100,116,104,0,0,0,0,0,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,101,100,0,0,0,0,0,0,0,0,101,109,112,116,121,0,0,0,116,105,109,101,0,0,0,0,67,0,0,0,0,0,0,0,102,105,108,116,101,114,105,110,103,0,0,0,0,0,0,0,99,108,83,101,116,75,101,114,110,101,108,65,114,103,0,0,119,105,110,100,111,119,72,101,105,103,104,116,0,0,0,0,118,101,99,116,111,114,0,0,32,0,0,0,0,0,0,0,67,76,95,71,76,95,105,110,116,101,114,111,112,0,0,0,108,105,102,101,116,105,109,101,0,0,0,0,0,0,0,0,119,105,110,100,111,119,87,105,100,116,104,0,0,0,0,0,37,46,48,76,102,0,0,0,107,101,114,110,101,108,47,108,111,114,101,110,122,46,99,108,0,0,0,0,0,0,0,0,99,111,108,111,114,0,0,0,118,98,111,67,111,108,111,114,0,0,0,0,0,0,0,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,107,101,114,110,101,108,70,105,108,101,110,97,109,101,0,0,102,114,97,103,109,101,110,116,83,104,97,100,101,114,70,105,108,101,110,97,109,101,0,0,112,111,115,0,0,0,0,0,118,98,111,80,111,115,0,0,83,97,116,0,0,0,0,0,70,114,105,0,0,0,0,0,103,108,116,111,111,108,115,46,99,112,112,0,0,0,0,0,84,104,117,0,0,0,0,0,37,76,102,0,0,0,0,0,105,111,115,116,114,101,97,109,0,0,0,0,0,0,0,0,87,101,100,0,0,0,0,0,84,117,101,0,0,0,0,0,115,104,97,100,101,114,47,108,111,114,101,110,122,46,102,114,97,103,0,0,0,0,0,0,77,111,110,0,0,0,0,0,83,117,110,0,0,0,0,0,118,98,111,67,111,108,111,114,0,0,0,0,0,0,0,0,83,97,116,117,114,100,97,121,0,0,0,0,0,0,0,0,70,114,105,100,97,121,0,0,67,76,95,71,76,95,105,110,116,101,114,111,112,0,0,0,84,104,117,114,115,100,97,121,0,0,0,0,0,0,0,0,87,101,100,110,101,115,100,97,121,0,0,0,0,0,0,0,84,117,101,115,100,97,121,0,32,105,110,32,0,0,0,0,77,111,110,100,97,121,0,0,83,117,110,100,97,121,0,0,102,114,97,103,109,101,110,116,83,104,97,100,101,114,70,105,108,101,110,97,109,101,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,118,98,111,80,111,115,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,99,111,108,111,114,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,68,101,109,111,46,99,112,112,0,0,0,0,0,0,0,0,115,104,97,100,101,114,47,108,111,114,101,110,122,46,118,101,114,116,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,110,80,97,114,116,105,99,108,101,115,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,112,111,115,0,0,0,0,0,68,101,99,0,0,0,0,0,78,111,118,0,0,0,0,0,79,99,116,0,0,0,0,0,83,101,112,0,0,0,0,0,65,117,103,0,0,0,0,0,118,101,114,116,101,120,83,104,97,100,101,114,70,105,108,101,110,97,109,101,0,0,0,0,65,112,112,108,105,99,97,116,105,111,110,46,99,112,112,0,117,110,97,98,108,101,32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,71,76,70,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,0,0,0,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,72,58,37,77,58,37,83,37,72,58,37,77,0,0,0,37,73,58,37,77,58,37,83,32,37,112,0,0,0,0,0,37,89,45,37,109,45,37,100,37,109,47,37,100,47,37,121,37,72,58,37,77,58,37,83,37,0,0,0,0,0,0,0,37,112,0,0,0,0,0,0,0,0,0,0,104,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255,16,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255,56,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,104,47,0,0,0,0,0,0,0,0,0,0,200,255,255,255,200,255,255,255,104,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,136,47,0,0,0,0,0,0,0,0,0,0,56,0,0,0,248,255,255,255,136,47,0,0,0,0,0,0,0,0,0,0,192,255,255,255,192,255,255,255,136,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,0,0,0,148,255,255,255,148,255,255,255,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,48,48,0,0,0,0,0,0,0,0,0,0,252,255,255,255,252,255,255,255,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,72,48,0,0,0,0,0,0,0,0,0,0,252,255,255,255,252,255,255,255,72,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,96,48,0,0,0,0,0,0,0,0,0,0,248,255,255,255,248,255,255,255,96,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,120,48,0,0,0,0,0,0,0,0,0,0,248,255,255,255,248,255,255,255,120,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,83,116,56,98,97,100,95,99,97,115,116,0,0,0,0,0,83,116,49,52,111,118,101,114,102,108,111,119,95,101,114,114,111,114,0,0,0,0,0,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,0,0,0,0,0,0,83,116,49,50,108,101,110,103,116,104,95,101,114,114,111,114,0,0,0,0,0,0,0,0,83,116,49,49,108,111,103,105,99,95,101,114,114,111,114,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,0,0,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,0,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,0,0,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,0,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,57,98,97,115,105,99,95,111,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,0,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99].concat([78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,0,0,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,0,0,0,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,0,0,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,50,99,108,53,69,114,114,111,114,69,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,54,83,111,108,118,101,114,0,52,68,101,109,111,0,0,0,50,55,76,111,114,101,110,122,65,116,116,114,97,99,116,111,114,79,112,101,110,67,76,83,111,108,118,101,114,0,0,0,49,57,76,111,114,101,110,122,65,116,116,114,97,99,116,111,114,68,101,109,111,0,0,0,49,49,65,112,112,108,105,99,97,116,105,111,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,232,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,240,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,248,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,24,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,24,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,152,49,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,152,49,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,248,46,0,0,2,0,0,0,200,43,0,0,2,0,0,0,88,47,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,248,46,0,0,2,0,0,0,200,43,0,0,2,0,0,0,96,47,0,0,0,8,0,0,0,0,0,0,0,0,0,0,248,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,40,48,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,40,48,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,112,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,136,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,160,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,184,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,176,48,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,176,48,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,176,48,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,176,48,0,0,2,0,0,0,0,0,0,0,0,0,0,0,16,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,144,49,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,144,49,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,2,0,0,0,120,48,0,0,2,0,0,0,72,48,0,0,2,8,0,0,0,0,0,0,0,0,0,0,120,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,80,44,0,0,3,244,255,255,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,96,44,0,0,3,244,255,255,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,80,44,0,0,3,244,255,255,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,96,44,0,0,3,244,255,255,0,0,0,0,0,0,0,0,208,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,136,49,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,136,49,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,136,49,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,248,46,0,0,2,0,0,0,136,49,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,72,48,0,0,0,0,0,0,0,0,0,0,200,255,255,255,200,255,255,255,72,48,0,0,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,72,48,0,0,0,0,0,0,0,0,0,0,200,255,255,255,200,255,255,255,72,48,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,224,47,0,0,0,0,0,0,0,0,0,0,56,0,0,0,248,255,255,255,224,47,0,0,0,0,0,0,0,0,0,0,192,255,255,255,192,255,255,255,224,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,120,48,0,0,0,0,0,0,0,0,0,0,192,255,255,255,192,255,255,255,120,48,0,0,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,120,48,0,0,0,0,0,0,0,0,0,0,148,255,255,255,148,255,255,255,120,48,0,0,0,0,0,0,0,0,0,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,0,0,0,0,0,0,0,1,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,121,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,143,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,169,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,187,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,209,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,7,0,0,0,11,0,0,0,13,0,0,0,17,0,0,0,19,0,0,0,23,0,0,0,29,0,0,0,31,0,0,0,37,0,0,0,41,0,0,0,43,0,0,0,47,0,0,0,53,0,0,0,59,0,0,0,61,0,0,0,67,0,0,0,71,0,0,0,73,0,0,0,79,0,0,0,83,0,0,0,89,0,0,0,97,0,0,0,101,0,0,0,103,0,0,0,107,0,0,0,109,0,0,0,113,0,0,0,127,0,0,0,131,0,0,0,137,0,0,0,139,0,0,0,149,0,0,0,151,0,0,0,157,0,0,0,163,0,0,0,167,0,0,0,173,0,0,0,179,0,0,0,181,0,0,0,191,0,0,0,193,0,0,0,197,0,0,0,199,0,0,0,211,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  function ___gxx_personality_v0() {
    }
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var VFS=undefined;
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              result = process['stdin']['read']();
              if (!result) {
                if (process['stdin']['_readableState'] && process['stdin']['_readableState']['ended']) {
                  return null;  // EOF
                }
                return undefined;  // no data available
              }
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={CONTENT_OWNING:1,CONTENT_FLEXIBLE:2,CONTENT_FIXED:3,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 0777, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr,
            lookup: MEMFS.node_ops.lookup,
            mknod: MEMFS.node_ops.mknod,
            mknod: MEMFS.node_ops.mknod,
            rename: MEMFS.node_ops.rename,
            unlink: MEMFS.node_ops.unlink,
            rmdir: MEMFS.node_ops.rmdir,
            readdir: MEMFS.node_ops.readdir,
            symlink: MEMFS.node_ops.symlink
          };
          node.stream_ops = {
            llseek: MEMFS.stream_ops.llseek
          };
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr
          };
          node.stream_ops = {
            llseek: MEMFS.stream_ops.llseek,
            read: MEMFS.stream_ops.read,
            write: MEMFS.stream_ops.write,
            allocate: MEMFS.stream_ops.allocate,
            mmap: MEMFS.stream_ops.mmap
          };
          node.contents = [];
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        } else if (FS.isLink(node.mode)) {
          node.node_ops = {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr,
            readlink: MEMFS.node_ops.readlink
          };
          node.stream_ops = {};
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = {
            getattr: MEMFS.node_ops.getattr,
            setattr: MEMFS.node_ops.setattr
          };
          node.stream_ops = FS.chrdev_stream_ops;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },ensureFlexible:function (node) {
        if (node.contentMode !== MEMFS.CONTENT_FLEXIBLE) {
          var contents = node.contents;
          node.contents = Array.prototype.slice.call(contents);
          node.contentMode = MEMFS.CONTENT_FLEXIBLE;
        }
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.ensureFlexible(node);
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0777 | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          var node = stream.node;
          node.timestamp = Date.now();
          var contents = node.contents;
          if (length && contents.length === 0 && position === 0 && buffer.subarray) {
            // just replace it with the new data
            assert(buffer.length);
            if (canOwn && buffer.buffer === HEAP8.buffer && offset === 0) {
              node.contents = buffer; // this is a subarray of the heap, and we can own it
              node.contentMode = MEMFS.CONTENT_OWNING;
            } else {
              node.contents = new Uint8Array(buffer.subarray(offset, offset+length));
              node.contentMode = MEMFS.CONTENT_FIXED;
            }
            return length;
          }
          MEMFS.ensureFlexible(node);
          var contents = node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.ensureFlexible(stream.node);
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var IDBFS={dbs:{},indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },reconcile:function (src, dst, callback) {
        var total = 0;
        var create = {};
        for (var key in src.files) {
          if (!src.files.hasOwnProperty(key)) continue;
          var e = src.files[key];
          var e2 = dst.files[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create[key] = e;
            total++;
          }
        }
        var remove = {};
        for (var key in dst.files) {
          if (!dst.files.hasOwnProperty(key)) continue;
          var e = dst.files[key];
          var e2 = src.files[key];
          if (!e2) {
            remove[key] = e;
            total++;
          }
        }
        if (!total) {
          // early out
          return callback(null);
        }
        var completed = 0;
        var done = function(err) {
          if (err) return callback(err);
          if (++completed >= total) {
            return callback(null);
          }
        };
        // create a single transaction to handle and IDB reads / writes we'll need to do
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        transaction.onerror = function() { callback(this.error); };
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
        for (var path in create) {
          if (!create.hasOwnProperty(path)) continue;
          var entry = create[path];
          if (dst.type === 'local') {
            // save file to local
            try {
              if (FS.isDir(entry.mode)) {
                FS.mkdir(path, entry.mode);
              } else if (FS.isFile(entry.mode)) {
                var stream = FS.open(path, 'w+', 0666);
                FS.write(stream, entry.contents, 0, entry.contents.length, 0, true /* canOwn */);
                FS.close(stream);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // save file to IDB
            var req = store.put(entry, path);
            req.onsuccess = function() { done(null); };
            req.onerror = function() { done(this.error); };
          }
        }
        for (var path in remove) {
          if (!remove.hasOwnProperty(path)) continue;
          var entry = remove[path];
          if (dst.type === 'local') {
            // delete file from local
            try {
              if (FS.isDir(entry.mode)) {
                // TODO recursive delete?
                FS.rmdir(path);
              } else if (FS.isFile(entry.mode)) {
                FS.unlink(path);
              }
              done(null);
            } catch (e) {
              return done(e);
            }
          } else {
            // delete file from IDB
            var req = store.delete(path);
            req.onsuccess = function() { done(null); };
            req.onerror = function() { done(this.error); };
          }
        }
      },getLocalSet:function (mount, callback) {
        var files = {};
        var isRealDir = function(p) {
          return p !== '.' && p !== '..';
        };
        var toAbsolute = function(root) {
          return function(p) {
            return PATH.join(root, p);
          }
        };
        var check = FS.readdir(mount.mountpoint)
          .filter(isRealDir)
          .map(toAbsolute(mount.mountpoint));
        while (check.length) {
          var path = check.pop();
          var stat, node;
          try {
            var lookup = FS.lookupPath(path);
            node = lookup.node;
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path)
              .filter(isRealDir)
              .map(toAbsolute(path)));
            files[path] = { mode: stat.mode, timestamp: stat.mtime };
          } else if (FS.isFile(stat.mode)) {
            files[path] = { contents: node.contents, mode: stat.mode, timestamp: stat.mtime };
          } else {
            return callback(new Error('node type not supported'));
          }
        }
        return callback(null, { type: 'local', files: files });
      },getDB:function (name, callback) {
        // look it up in the cache
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        req.onupgradeneeded = function() {
          db = req.result;
          db.createObjectStore(IDBFS.DB_STORE_NAME);
        };
        req.onsuccess = function() {
          db = req.result;
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function() {
          callback(this.error);
        };
      },getRemoteSet:function (mount, callback) {
        var files = {};
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function() { callback(this.error); };
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          store.openCursor().onsuccess = function(event) {
            var cursor = event.target.result;
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, files: files });
            }
            files[cursor.key] = cursor.value;
            cursor.continue();
          };
        });
      }};
  var NODEFS={mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, stream.flags);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode)) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.position = position;
          return position;
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,mounts:[],devices:[null],streams:[null],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:function ErrnoError(errno) {
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
          this.message = ERRNO_MESSAGES[errno];
        },handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + new Error().stack;
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            return path ? PATH.join(node.mount.mountpoint, path) : node.mount.mountpoint;
          }
          path = path ? PATH.join(node.name, path) : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        var node = {
          id: FS.nextInode++,
          name: name,
          mode: mode,
          node_ops: {},
          stream_ops: {},
          rdev: rdev,
          parent: null,
          mount: null
        };
        if (!parent) {
          parent = node;  // root node sets parent to itself
        }
        node.parent = parent;
        node.mount = parent.mount;
        // compatibility
        var readMode = 292 | 73;
        var writeMode = 146;
        // NOTE we must use Object.defineProperties instead of individual calls to
        // Object.defineProperty in order to make closure compiler happy
        Object.defineProperties(node, {
          read: {
            get: function() { return (node.mode & readMode) === readMode; },
            set: function(val) { val ? node.mode |= readMode : node.mode &= ~readMode; }
          },
          write: {
            get: function() { return (node.mode & writeMode) === writeMode; },
            set: function(val) { val ? node.mode |= writeMode : node.mode &= ~writeMode; }
          },
          isFolder: {
            get: function() { return FS.isDir(node.mode); },
          },
          isDevice: {
            get: function() { return FS.isChrdev(node.mode); },
          },
        });
        FS.hashAddNode(node);
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        // compatibility
        Object.defineProperties(stream, {
          object: {
            get: function() { return stream.node; },
            set: function(val) { stream.node = val; }
          },
          isRead: {
            get: function() { return (stream.flags & 2097155) !== 1; }
          },
          isWrite: {
            get: function() { return (stream.flags & 2097155) !== 0; }
          },
          isAppend: {
            get: function() { return (stream.flags & 1024); }
          }
        });
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
        var completed = 0;
        var total = FS.mounts.length;
        var done = function(err) {
          if (err) {
            return callback(err);
          }
          if (++completed >= total) {
            callback(null);
          }
        };
        // sync all mounts
        for (var i = 0; i < FS.mounts.length; i++) {
          var mount = FS.mounts[i];
          if (!mount.type.syncfs) {
            done(null);
            continue;
          }
          mount.type.syncfs(mount, populate, done);
        }
      },mount:function (type, opts, mountpoint) {
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
          mountpoint = lookup.path;  // use the absolute path
        }
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        // add to our cached list of mounts
        FS.mounts.push(mount);
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 0666;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 0777;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 0666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        path = PATH.normalize(path);
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 0666 : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        try {
          var lookup = FS.lookupPath(path, {
            follow: !(flags & 131072)
          });
          node = lookup.node;
        } catch (e) {
          // ignore
        }
        // perhaps we need to create the node
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.errnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = '';
          var utf8 = new Runtime.UTF8Processor();
          for (var i = 0; i < length; i++) {
            ret += utf8.processCChar(buf[i]);
          }
        } else if (opts.encoding === 'binary') {
          ret = buf;
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var utf8 = new Runtime.UTF8Processor();
          var buf = new Uint8Array(utf8.processJSString(data));
          FS.write(stream, buf, 0, buf.length, 0);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0);
        } else {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = FS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = FS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },staticInit:function () {
        FS.nameTable = new Array(4096);
        FS.root = FS.createNode(null, '/', 16384 | 0777, 0);
        FS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(path, mode | 146);
          var stream = FS.open(path, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(path, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join(parent, name)) : parent;
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path, ext) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var f = PATH.splitPath(path)[2];
        if (ext && f.substr(-1 * ext.length) === ext) {
          f = f.substr(0, f.length - ext.length);
        }
        return f;
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.filter(function(p, index) {
          if (typeof p !== 'string') {
            throw new TypeError('Arguments to path.join must be strings');
          }
          return p;
        }).join('/'));
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule) {
        var ctx;
        try {
          if (useWebGL) {
            ctx = canvas.getContext('experimental-webgl', {
              alpha: false
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x, y;
          if (event.type == 'touchstart' ||
              event.type == 'touchend' ||
              event.type == 'touchmove') {
            var t = event.touches.item(0);
            if (t) {
              x = t.pageX - (window.scrollX + rect.left);
              y = t.pageY - (window.scrollY + rect.top);
            } else {
              return;
            }
          } else {
            x = event.pageX - (window.scrollX + rect.left);
            y = event.pageY - (window.scrollY + rect.top);
          }
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};function _glfwCloseWindow() {
      if (GLFW.closeFunc) {
        Runtime.dynCall('v', GLFW.closeFunc, []);
      }
      Module.ctx = Browser.destroyContext(Module['canvas'], true, true);
    }
  var GLFW={keyFunc:null,charFunc:null,mouseButtonFunc:null,mousePosFunc:null,mouseWheelFunc:null,resizeFunc:null,closeFunc:null,refreshFunc:null,params:null,initTime:null,wheelPos:0,buttons:0,keys:0,initWindowWidth:640,initWindowHeight:480,windowX:0,windowY:0,windowWidth:0,windowHeight:0,DOMToGLFWKeyCode:function (keycode) {
        switch (keycode) {
          case 0x09: return 295 ; //DOM_VK_TAB -> GLFW_KEY_TAB
          case 0x1B: return 255 ; //DOM_VK_ESCAPE -> GLFW_KEY_ESC
          case 0x6A: return 313 ; //DOM_VK_MULTIPLY -> GLFW_KEY_KP_MULTIPLY
          case 0x6B: return 315 ; //DOM_VK_ADD -> GLFW_KEY_KP_ADD
          case 0x6D: return 314 ; //DOM_VK_SUBTRACT -> GLFW_KEY_KP_SUBTRACT
          case 0x6E: return 316 ; //DOM_VK_DECIMAL -> GLFW_KEY_KP_DECIMAL
          case 0x6F: return 312 ; //DOM_VK_DIVIDE -> GLFW_KEY_KP_DIVIDE
          case 0x70: return 258 ; //DOM_VK_F1 -> GLFW_KEY_F1
          case 0x71: return 259 ; //DOM_VK_F2 -> GLFW_KEY_F2
          case 0x72: return 260 ; //DOM_VK_F3 -> GLFW_KEY_F3
          case 0x73: return 261 ; //DOM_VK_F4 -> GLFW_KEY_F4
          case 0x74: return 262 ; //DOM_VK_F5 -> GLFW_KEY_F5
          case 0x75: return 263 ; //DOM_VK_F6 -> GLFW_KEY_F6
          case 0x76: return 264 ; //DOM_VK_F7 -> GLFW_KEY_F7
          case 0x77: return 265 ; //DOM_VK_F8 -> GLFW_KEY_F8
          case 0x78: return 266 ; //DOM_VK_F9 -> GLFW_KEY_F9
          case 0x79: return 267 ; //DOM_VK_F10 -> GLFW_KEY_F10
          case 0x7a: return 268 ; //DOM_VK_F11 -> GLFW_KEY_F11
          case 0x7b: return 269 ; //DOM_VK_F12 -> GLFW_KEY_F12
          case 0x25: return 285 ; //DOM_VK_LEFT -> GLFW_KEY_LEFT
          case 0x26: return 283 ; //DOM_VK_UP -> GLFW_KEY_UP
          case 0x27: return 286 ; //DOM_VK_RIGHT -> GLFW_KEY_RIGHT
          case 0x28: return 284 ; //DOM_VK_DOWN -> GLFW_KEY_DOWN
          case 0x21: return 298 ; //DOM_VK_PAGE_UP -> GLFW_KEY_PAGEUP
          case 0x22: return 299 ; //DOM_VK_PAGE_DOWN -> GLFW_KEY_PAGEDOWN
          case 0x24: return 300 ; //DOM_VK_HOME -> GLFW_KEY_HOME
          case 0x23: return 301 ; //DOM_VK_END -> GLFW_KEY_END
          case 0x2d: return 296 ; //DOM_VK_INSERT -> GLFW_KEY_INSERT
          case 16  : return 287 ; //DOM_VK_SHIFT -> GLFW_KEY_LSHIFT
          case 0x05: return 287 ; //DOM_VK_LEFT_SHIFT -> GLFW_KEY_LSHIFT
          case 0x06: return 288 ; //DOM_VK_RIGHT_SHIFT -> GLFW_KEY_RSHIFT
          case 17  : return 289 ; //DOM_VK_CONTROL -> GLFW_KEY_LCTRL
          case 0x03: return 289 ; //DOM_VK_LEFT_CONTROL -> GLFW_KEY_LCTRL
          case 0x04: return 290 ; //DOM_VK_RIGHT_CONTROL -> GLFW_KEY_RCTRL
          case 18  : return 291 ; //DOM_VK_ALT -> GLFW_KEY_LALT
          case 0x02: return 291 ; //DOM_VK_LEFT_ALT -> GLFW_KEY_LALT
          case 0x01: return 292 ; //DOM_VK_RIGHT_ALT -> GLFW_KEY_RALT
          case 96  : return 302 ; //GLFW_KEY_KP_0
          case 97  : return 303 ; //GLFW_KEY_KP_1
          case 98  : return 304 ; //GLFW_KEY_KP_2
          case 99  : return 305 ; //GLFW_KEY_KP_3
          case 100 : return 306 ; //GLFW_KEY_KP_4
          case 101 : return 307 ; //GLFW_KEY_KP_5
          case 102 : return 308 ; //GLFW_KEY_KP_6
          case 103 : return 309 ; //GLFW_KEY_KP_7
          case 104 : return 310 ; //GLFW_KEY_KP_8
          case 105 : return 311 ; //GLFW_KEY_KP_9
          default  : return keycode;
        };
      },getUnicodeChar:function (value) {
        var output = '';
        if (value > 0xFFFF) {
          value -= 0x10000;
          output += String.fromCharCode(value >>> 10 & 0x3FF | 0xD800);
          value = 0xDC00 | value & 0x3FF;
        }
        output += String.fromCharCode(value);
        return output;
      },onKeyPress:function (event) {
        //charCode is only available whith onKeyPress event
        var char = GLFW.getUnicodeChar(event.charCode);
        if (event.charCode) {
          var char = GLFW.getUnicodeChar(event.charCode);
          if (char !== null && GLFW.charFunc) {
            event.preventDefault();
            Runtime.dynCall('vii', GLFW.charFunc, [event.charCode, 1]);
          }
        }
      },onKeyChanged:function (event, status) {
        var key = GLFW.DOMToGLFWKeyCode(event.keyCode);
        if (key && GLFW.keyFunc) {
          GLFW.keys[key] = status;
          event.preventDefault();
          Runtime.dynCall('vii', GLFW.keyFunc, [key, status]);
        }
      },onKeydown:function (event) {
        GLFW.onKeyChanged(event, 1);//GLFW_PRESS
      },onKeyup:function (event) {
        GLFW.onKeyChanged(event, 0);//GLFW_RELEASE
      },onMousemove:function (event) {
        /* Send motion event only if the motion changed, prevents
         * spamming our app with uncessary callback call. It does happen in
         * Chrome on Windows.
         */
        var lastX = Browser.mouseX;
        var lastY = Browser.mouseY;
        Browser.calculateMouseEvent(event);
        var newX = Browser.mouseX;
        var newY = Browser.mouseY;
        if (event.target == Module["canvas"] && GLFW.mousePosFunc) {
          event.preventDefault();
          Runtime.dynCall('vii', GLFW.mousePosFunc, [lastX, lastY]);
        }
      },onMouseButtonChanged:function (event, status) {
        if (GLFW.mouseButtonFunc == null) {
          return;
        }
        Browser.calculateMouseEvent(event);
        if (event.target != Module["canvas"]) {
          return;
        }
        if (status == 1) {//GLFW_PRESS
          try {
            event.target.setCapture();
          } catch (e) {}
        }
        event.preventDefault();
        //DOM and glfw have the same button codes
        Runtime.dynCall('vii', GLFW.mouseButtonFunc, [event['button'], status]);
      },onMouseButtonDown:function (event) {
        GLFW.buttons |= (1 << event['button']);
        GLFW.onMouseButtonChanged(event, 1);//GLFW_PRESS
      },onMouseButtonUp:function (event) {
        GLFW.buttons &= ~(1 << event['button']);
        GLFW.onMouseButtonChanged(event, 0);//GLFW_RELEASE
      },onMouseWheel:function (event) {
        if (event.detail > 0) {
          GLFW.wheelPos++;
        }
        if (event.detail < 0) {
          GLFW.wheelPos--;
        }
        if (GLFW.mouseWheelFunc && event.target == Module["canvas"]) {
          Runtime.dynCall('vi', GLFW.mouseWheelFunc, [GLFW.wheelPos]);
          event.preventDefault();
        }
      },onFullScreenEventChange:function (event) {
        var width;
        var height;
        if (document["fullScreen"] || document["mozFullScreen"] || document["webkitIsFullScreen"]) {
          width = screen["width"];
          height = screen["height"];
        }
        else {
          width = GLFW.windowWidth;
          height = GLFW.windowHeight;
          // TODO set position
          document.removeEventListener('fullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('mozfullscreenchange', GLFW.onFullScreenEventChange, true);
          document.removeEventListener('webkitfullscreenchange', GLFW.onFullScreenEventChange, true);
        }
        Browser.setCanvasSize(width, height);
        if (GLFW.resizeFunc) {
          Runtime.dynCall('vii', GLFW.resizeFunc, [width, height]);
        }
      },requestFullScreen:function () {
        var RFS = Module["canvas"]['requestFullscreen'] ||
                  Module["canvas"]['requestFullScreen'] ||
                  Module["canvas"]['mozRequestFullScreen'] ||
                  Module["canvas"]['webkitRequestFullScreen'] ||
                  (function() {});
        RFS.apply(Module["canvas"], []);
      },cancelFullScreen:function () {
        var CFS = document['exitFullscreen'] ||
                  document['cancelFullScreen'] ||
                  document['mozCancelFullScreen'] ||
                  document['webkitCancelFullScreen'] ||
            (function() {});
        CFS.apply(document, []);
      }};function _glfwInit() {
      GLFW.initTime = Date.now() / 1000;
      window.addEventListener("keydown", GLFW.onKeydown, true);
      window.addEventListener("keypress", GLFW.onKeyPress, true);
      window.addEventListener("keyup", GLFW.onKeyup, true);
      window.addEventListener("mousemove", GLFW.onMousemove, true);
      window.addEventListener("mousedown", GLFW.onMouseButtonDown, true);
      window.addEventListener("mouseup", GLFW.onMouseButtonUp, true);
      window.addEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
      window.addEventListener('mousewheel', GLFW.onMouseWheel, true);
      __ATEXIT__.push({ func: function() {
        window.removeEventListener("keydown", GLFW.onKeydown, true);
        window.removeEventListener("keypress", GLFW.onKeyPress, true);
        window.removeEventListener("keyup", GLFW.onKeyup, true);
        window.removeEventListener("mousemove", GLFW.onMousemove, true);
        window.removeEventListener("mousedown", GLFW.onMouseButtonDown, true);
        window.removeEventListener("mouseup", GLFW.onMouseButtonUp, true);
        window.removeEventListener('DOMMouseScroll', GLFW.onMouseWheel, true);
        window.removeEventListener('mousewheel', GLFW.onMouseWheel, true);
        Module["canvas"].width = Module["canvas"].height = 1;
      }});
      //TODO: Init with correct values
      GLFW.params = new Array();
      GLFW.params[0x00030001] = true; //GLFW_MOUSE_CURSOR
      GLFW.params[0x00030002] = false; //GLFW_STICKY_KEYS
      GLFW.params[0x00030003] = true; //GLFW_STICKY_MOUSE_BUTTONS
      GLFW.params[0x00030004] = false; //GLFW_SYSTEM_KEYS
      GLFW.params[0x00030005] = false; //GLFW_KEY_REPEAT
      GLFW.params[0x00030006] = true; //GLFW_AUTO_POLL_EVENTS
      GLFW.params[0x00020001] = true; //GLFW_OPENED
      GLFW.params[0x00020002] = true; //GLFW_ACTIVE
      GLFW.params[0x00020003] = false; //GLFW_ICONIFIED
      GLFW.params[0x00020004] = true; //GLFW_ACCELERATED
      GLFW.params[0x00020005] = 0; //GLFW_RED_BITS
      GLFW.params[0x00020006] = 0; //GLFW_GREEN_BITS
      GLFW.params[0x00020007] = 0; //GLFW_BLUE_BITS
      GLFW.params[0x00020008] = 0; //GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = 0; //GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = 0; //GLFW_STENCIL_BITS
      GLFW.params[0x0002000B] = 0; //GLFW_REFRESH_RATE
      GLFW.params[0x0002000C] = 0; //GLFW_ACCUM_RED_BITS
      GLFW.params[0x0002000D] = 0; //GLFW_ACCUM_GREEN_BITS
      GLFW.params[0x0002000E] = 0; //GLFW_ACCUM_BLUE_BITS
      GLFW.params[0x0002000F] = 0; //GLFW_ACCUM_ALPHA_BITS
      GLFW.params[0x00020010] = 0; //GLFW_AUX_BUFFERS
      GLFW.params[0x00020011] = 0; //GLFW_STEREO
      GLFW.params[0x00020012] = 0; //GLFW_WINDOW_NO_RESIZE
      GLFW.params[0x00020013] = 0; //GLFW_FSAA_SAMPLES
      GLFW.params[0x00020014] = 0; //GLFW_OPENGL_VERSION_MAJOR
      GLFW.params[0x00020015] = 0; //GLFW_OPENGL_VERSION_MINOR
      GLFW.params[0x00020016] = 0; //GLFW_OPENGL_FORWARD_COMPAT
      GLFW.params[0x00020017] = 0; //GLFW_OPENGL_DEBUG_CONTEXT
      GLFW.params[0x00020018] = 0; //GLFW_OPENGL_PROFILE
      GLFW.keys = new Array();
      return 1; //GL_TRUE
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module.print('exit(' + status + ') called');
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }
  function _glfwOpenWindow(width, height, redbits, greenbits, bluebits, alphabits, depthbits, stencilbits, mode) {
      if (width == 0 && height > 0) {
        width = 4 * height / 3;
      }
      if (width > 0 && height == 0) {
        height = 3 * width / 4;
      }
      GLFW.params[0x00020005] = redbits; //GLFW_RED_BITS
      GLFW.params[0x00020006] = greenbits; //GLFW_GREEN_BITS
      GLFW.params[0x00020007] = bluebits; //GLFW_BLUE_BITS
      GLFW.params[0x00020008] = alphabits; //GLFW_ALPHA_BITS
      GLFW.params[0x00020009] = depthbits; //GLFW_DEPTH_BITS
      GLFW.params[0x0002000A] = stencilbits; //GLFW_STENCIL_BITS
      if (mode == 0x00010001) {//GLFW_WINDOW
        Browser.setCanvasSize(GLFW.initWindowWidth = width,
                              GLFW.initWindowHeight = height);
        GLFW.params[0x00030003] = true; //GLFW_STICKY_MOUSE_BUTTONS
      }
      else if (mode == 0x00010002) {//GLFW_FULLSCREEN
        GLFW.requestFullScreen();
        GLFW.params[0x00030003] = false; //GLFW_STICKY_MOUSE_BUTTONS
      }
      else{
        throw "Invalid glfwOpenWindow mode.";
      }
      Module.ctx = Browser.createContext(Module['canvas'], true, true);
      return 1; //GL_TRUE
    }
  function _glfwSetWindowTitle(title) {
      document.title = Pointer_stringify(title);
    }
  function _glfwSetKeyCallback(cbfun) {
      GLFW.keyFunc = cbfun;
    }
  var GL={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],currArrayBuffer:0,currElementArrayBuffer:0,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],uniformTable:{},packAlignment:4,unpackAlignment:4,init:function () {
        Browser.moduleContextCreatedCallbacks.push(GL.initExtensions);
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:16,miniTempBuffer:null,miniTempBufferViews:[0],MAX_TEMP_BUFFER_SIZE:2097152,tempBufferIndexLookup:null,tempVertexBuffers:null,tempIndexBuffers:null,tempQuadIndexBuffer:null,generateTempBuffers:function (quads) {
        GL.tempBufferIndexLookup = new Uint8Array(GL.MAX_TEMP_BUFFER_SIZE+1);
        GL.tempVertexBuffers = [];
        GL.tempIndexBuffers = [];
        var last = -1, curr = -1;
        var size = 1;
        for (var i = 0; i <= GL.MAX_TEMP_BUFFER_SIZE; i++) {
          if (i > size) {
            size <<= 1;
          }
          if (size != last) {
            curr++;
            GL.tempVertexBuffers[curr] = Module.ctx.createBuffer();
            Module.ctx.bindBuffer(Module.ctx.ARRAY_BUFFER, GL.tempVertexBuffers[curr]);
            Module.ctx.bufferData(Module.ctx.ARRAY_BUFFER, size, Module.ctx.DYNAMIC_DRAW);
            Module.ctx.bindBuffer(Module.ctx.ARRAY_BUFFER, null);
            GL.tempIndexBuffers[curr] = Module.ctx.createBuffer();
            Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.tempIndexBuffers[curr]);
            Module.ctx.bufferData(Module.ctx.ELEMENT_ARRAY_BUFFER, size, Module.ctx.DYNAMIC_DRAW);
            Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, null);
            last = size;
          }
          GL.tempBufferIndexLookup[i] = curr;
        }
        if (quads) {
          // GL_QUAD indexes can be precalculated
          GL.tempQuadIndexBuffer = Module.ctx.createBuffer();
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, GL.tempQuadIndexBuffer);
          var numIndexes = GL.MAX_TEMP_BUFFER_SIZE >> 1;
          var quadIndexes = new Uint16Array(numIndexes);
          var i = 0, v = 0;
          while (1) {
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+1;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+2;
            if (i >= numIndexes) break;
            quadIndexes[i++] = v+3;
            if (i >= numIndexes) break;
            v += 4;
          }
          Module.ctx.bufferData(Module.ctx.ELEMENT_ARRAY_BUFFER, quadIndexes, Module.ctx.STATIC_DRAW);
          Module.ctx.bindBuffer(Module.ctx.ELEMENT_ARRAY_BUFFER, null);
        }
      },findToken:function (source, token) {
        function isIdentChar(ch) {
          if (ch >= 48 && ch <= 57) // 0-9
            return true;
          if (ch >= 65 && ch <= 90) // A-Z
            return true;
          if (ch >= 97 && ch <= 122) // a-z
            return true;
          return false;
        }
        var i = -1;
        do {
          i = source.indexOf(token, i + 1);
          if (i < 0) {
            break;
          }
          if (i > 0 && isIdentChar(source[i - 1])) {
            continue;
          }
          i += token.length;
          if (i < source.length - 1 && isIdentChar(source[i + 1])) {
            continue;
          }
          return true;
        } while (true);
        return false;
      },getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        // Let's see if we need to enable the standard derivatives extension
        type = Module.ctx.getShaderParameter(GL.shaders[shader], 0x8B4F /* GL_SHADER_TYPE */);
        if (type == 0x8B30 /* GL_FRAGMENT_SHADER */) {
          if (GL.findToken(source, "dFdx") ||
              GL.findToken(source, "dFdy") ||
              GL.findToken(source, "fwidth")) {
            source = "#extension GL_OES_standard_derivatives : enable\n" + source;
            var extension = Module.ctx.getExtension("OES_standard_derivatives");
          }
        }
        return source;
      },computeImageSize:function (width, height, sizePerPixel, alignment) {
        function roundedToNextMultipleOf(x, y) {
          return Math.floor((x + y - 1) / y) * y
        }
        var plainRowSize = width * sizePerPixel;
        var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
        return (height <= 0) ? 0 :
                 ((height - 1) * alignedRowSize + plainRowSize);
      },getTexPixelData:function (type, format, width, height, pixels, internalFormat) {
        var sizePerPixel;
        switch (type) {
          case 0x1401 /* GL_UNSIGNED_BYTE */:
            switch (format) {
              case 0x1906 /* GL_ALPHA */:
              case 0x1909 /* GL_LUMINANCE */:
                sizePerPixel = 1;
                break;
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4;
                break;
              case 0x190A /* GL_LUMINANCE_ALPHA */:
                sizePerPixel = 2;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1403 /* GL_UNSIGNED_SHORT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 2;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x1405 /* GL_UNSIGNED_INT */:
            if (format == 0x1902 /* GL_DEPTH_COMPONENT */) {
              sizePerPixel = 4;
            } else {
              throw 'Invalid format (' + format + ')';
            }
            break;
          case 0x84FA /* UNSIGNED_INT_24_8_WEBGL */:
            sizePerPixel = 4;
            break;
          case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
          case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
          case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
            sizePerPixel = 2;
            break;
          case 0x1406 /* GL_FLOAT */:
            assert(GL.floatExt, 'Must have OES_texture_float to use float textures');
            switch (format) {
              case 0x1907 /* GL_RGB */:
                sizePerPixel = 3*4;
                break;
              case 0x1908 /* GL_RGBA */:
                sizePerPixel = 4*4;
                break;
              default:
                throw 'Invalid format (' + format + ')';
            }
            internalFormat = Module.ctx.RGBA;
            break;
          default:
            throw 'Invalid type (' + type + ')';
        }
        var bytes = GL.computeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
        if (type == 0x1401 /* GL_UNSIGNED_BYTE */) {
          pixels = HEAPU8.subarray((pixels),(pixels+bytes));
        } else if (type == 0x1406 /* GL_FLOAT */) {
          pixels = HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else if (type == 0x1405 /* GL_UNSIGNED_INT */ || type == 0x84FA /* UNSIGNED_INT_24_8_WEBGL */) {
          pixels = HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        } else {
          pixels = HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        }
        return {
          pixels: pixels,
          internalFormat: internalFormat
        }
      },initExtensions:function () {
        if (GL.initExtensions.done) return;
        GL.initExtensions.done = true;
        if (!Module.useWebGL) return; // an app might link both gl and 2d backends
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
        GL.maxVertexAttribs = Module.ctx.getParameter(Module.ctx.MAX_VERTEX_ATTRIBS);
        GL.compressionExt = Module.ctx.getExtension('WEBGL_compressed_texture_s3tc') ||
                            Module.ctx.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                            Module.ctx.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
        GL.anisotropicExt = Module.ctx.getExtension('EXT_texture_filter_anisotropic') ||
                            Module.ctx.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                            Module.ctx.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
        GL.floatExt = Module.ctx.getExtension('OES_texture_float');
        GL.elementIndexUintExt = Module.ctx.getExtension('OES_element_index_uint');
        GL.standardDerivativesExt = Module.ctx.getExtension('OES_standard_derivatives');
        GL.depthTextureExt = Module.ctx.getExtension("WEBGL_depth_texture") ||
                             Module.ctx.getExtension("MOZ_WEBGL_depth_texture") ||
                             Module.ctx.getExtension("WEBKIT_WEBGL_depth_texture");
        GL.vaoExt = Module.ctx.getExtension('OES_vertex_array_object');                           
      }};function _glViewport(x0, x1, x2, x3) { Module.ctx.viewport(x0, x1, x2, x3) }
  function _glfwTerminate() {}
  function _glfwSwapBuffers() {}
  function _glfwPollEvents() {}
  function _glfwGetTime() {
      return (Date.now()/1000) - GLFW.initTime;
    }
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  function _rand() {
      return Math.floor(Math.random()*0x80000000);
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Clear type.
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)];
      if (destructor) {
        Runtime.dynCall('vi', destructor, [ptr]);
        HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
  Module["_strlen"] = _strlen;
  var _ceilf=Math.ceil;
  var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC); 
  Module["_llvm_ctlz_i32"] = _llvm_ctlz_i32;
  Module["_memcmp"] = _memcmp;
  var _llvm_memset_p0i8_i64=_memset;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  var SOCKFS={mount:function (mount) {
        return FS.createNode(null, '/', 16384 | 0777, 0);
      },createSocket:function (family, type, protocol) {
        var streaming = type == 1;
        if (protocol) {
          assert(streaming == (protocol == 6)); // if SOCK_STREAM, must be tcp
        }
        // create our internal socket structure
        var sock = {
          family: family,
          type: type,
          protocol: protocol,
          server: null,
          peers: {},
          pending: [],
          recv_queue: [],
          sock_ops: SOCKFS.websocket_sock_ops
        };
        // create the filesystem node to store the socket structure
        var name = SOCKFS.nextname();
        var node = FS.createNode(SOCKFS.root, name, 49152, 0);
        node.sock = sock;
        // and the wrapping stream that enables library functions such
        // as read and write to indirectly interact with the socket
        var stream = FS.createStream({
          path: name,
          node: node,
          flags: FS.modeStringToFlags('r+'),
          seekable: false,
          stream_ops: SOCKFS.stream_ops
        });
        // map the new stream to the socket structure (sockets have a 1:1
        // relationship with a stream)
        sock.stream = stream;
        return sock;
      },getSocket:function (fd) {
        var stream = FS.getStream(fd);
        if (!stream || !FS.isSocket(stream.node.mode)) {
          return null;
        }
        return stream.node.sock;
      },stream_ops:{poll:function (stream) {
          var sock = stream.node.sock;
          return sock.sock_ops.poll(sock);
        },ioctl:function (stream, request, varargs) {
          var sock = stream.node.sock;
          return sock.sock_ops.ioctl(sock, request, varargs);
        },read:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          var msg = sock.sock_ops.recvmsg(sock, length);
          if (!msg) {
            // socket is closed
            return 0;
          }
          buffer.set(msg.buffer, offset);
          return msg.buffer.length;
        },write:function (stream, buffer, offset, length, position /* ignored */) {
          var sock = stream.node.sock;
          return sock.sock_ops.sendmsg(sock, buffer, offset, length);
        },close:function (stream) {
          var sock = stream.node.sock;
          sock.sock_ops.close(sock);
        }},nextname:function () {
        if (!SOCKFS.nextname.current) {
          SOCKFS.nextname.current = 0;
        }
        return 'socket[' + (SOCKFS.nextname.current++) + ']';
      },websocket_sock_ops:{createPeer:function (sock, addr, port) {
          var ws;
          if (typeof addr === 'object') {
            ws = addr;
            addr = null;
            port = null;
          }
          if (ws) {
            // for sockets that've already connected (e.g. we're the server)
            // we can inspect the _socket property for the address
            if (ws._socket) {
              addr = ws._socket.remoteAddress;
              port = ws._socket.remotePort;
            }
            // if we're just now initializing a connection to the remote,
            // inspect the url property
            else {
              var result = /ws[s]?:\/\/([^:]+):(\d+)/.exec(ws.url);
              if (!result) {
                throw new Error('WebSocket URL must be in the format ws(s)://address:port');
              }
              addr = result[1];
              port = parseInt(result[2], 10);
            }
          } else {
            // create the actual websocket object and connect
            try {
              var url = 'ws://' + addr + ':' + port;
              // the node ws library API is slightly different than the browser's
              var opts = ENVIRONMENT_IS_NODE ? {} : ['binary'];
              ws = new WebSocket(url, opts);
              ws.binaryType = 'arraybuffer';
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EHOSTUNREACH);
            }
          }
          var peer = {
            addr: addr,
            port: port,
            socket: ws,
            dgram_send_queue: []
          };
          SOCKFS.websocket_sock_ops.addPeer(sock, peer);
          SOCKFS.websocket_sock_ops.handlePeerEvents(sock, peer);
          // if this is a bound dgram socket, send the port number first to allow
          // us to override the ephemeral port reported to us by remotePort on the
          // remote end.
          if (sock.type === 2 && typeof sock.sport !== 'undefined') {
            peer.dgram_send_queue.push(new Uint8Array([
                255, 255, 255, 255,
                'p'.charCodeAt(0), 'o'.charCodeAt(0), 'r'.charCodeAt(0), 't'.charCodeAt(0),
                ((sock.sport & 0xff00) >> 8) , (sock.sport & 0xff)
            ]));
          }
          return peer;
        },getPeer:function (sock, addr, port) {
          return sock.peers[addr + ':' + port];
        },addPeer:function (sock, peer) {
          sock.peers[peer.addr + ':' + peer.port] = peer;
        },removePeer:function (sock, peer) {
          delete sock.peers[peer.addr + ':' + peer.port];
        },handlePeerEvents:function (sock, peer) {
          var first = true;
          var handleOpen = function () {
            try {
              var queued = peer.dgram_send_queue.shift();
              while (queued) {
                peer.socket.send(queued);
                queued = peer.dgram_send_queue.shift();
              }
            } catch (e) {
              // not much we can do here in the way of proper error handling as we've already
              // lied and said this data was sent. shut it down.
              peer.socket.close();
            }
          };
          var handleMessage = function(data) {
            assert(typeof data !== 'string' && data.byteLength !== undefined);  // must receive an ArrayBuffer
            data = new Uint8Array(data);  // make a typed array view on the array buffer
            // if this is the port message, override the peer's port with it
            var wasfirst = first;
            first = false;
            if (wasfirst &&
                data.length === 10 &&
                data[0] === 255 && data[1] === 255 && data[2] === 255 && data[3] === 255 &&
                data[4] === 'p'.charCodeAt(0) && data[5] === 'o'.charCodeAt(0) && data[6] === 'r'.charCodeAt(0) && data[7] === 't'.charCodeAt(0)) {
              // update the peer's port and it's key in the peer map
              var newport = ((data[8] << 8) | data[9]);
              SOCKFS.websocket_sock_ops.removePeer(sock, peer);
              peer.port = newport;
              SOCKFS.websocket_sock_ops.addPeer(sock, peer);
              return;
            }
            sock.recv_queue.push({ addr: peer.addr, port: peer.port, data: data });
          };
          if (ENVIRONMENT_IS_NODE) {
            peer.socket.on('open', handleOpen);
            peer.socket.on('message', function(data, flags) {
              if (!flags.binary) {
                return;
              }
              handleMessage((new Uint8Array(data)).buffer);  // copy from node Buffer -> ArrayBuffer
            });
            peer.socket.on('error', function() {
              // don't throw
            });
          } else {
            peer.socket.onopen = handleOpen;
            peer.socket.onmessage = function(event) {
              handleMessage(event.data);
            };
          }
        },poll:function (sock) {
          if (sock.type === 1 && sock.server) {
            // listen sockets should only say they're available for reading
            // if there are pending clients.
            return sock.pending.length ? (64 | 1) : 0;
          }
          var mask = 0;
          var dest = sock.type === 1 ?  // we only care about the socket state for connection-based sockets
            SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport) :
            null;
          if (sock.recv_queue.length ||
              !dest ||  // connection-less sockets are always ready to read
              (dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {  // let recv return 0 once closed
            mask |= (64 | 1);
          }
          if (!dest ||  // connection-less sockets are always ready to write
              (dest && dest.socket.readyState === dest.socket.OPEN)) {
            mask |= 4;
          }
          if ((dest && dest.socket.readyState === dest.socket.CLOSING) ||
              (dest && dest.socket.readyState === dest.socket.CLOSED)) {
            mask |= 16;
          }
          return mask;
        },ioctl:function (sock, request, arg) {
          switch (request) {
            case 21531:
              var bytes = 0;
              if (sock.recv_queue.length) {
                bytes = sock.recv_queue[0].data.length;
              }
              HEAP32[((arg)>>2)]=bytes;
              return 0;
            default:
              return ERRNO_CODES.EINVAL;
          }
        },close:function (sock) {
          // if we've spawned a listen server, close it
          if (sock.server) {
            try {
              sock.server.close();
            } catch (e) {
            }
            sock.server = null;
          }
          // close any peer connections
          var peers = Object.keys(sock.peers);
          for (var i = 0; i < peers.length; i++) {
            var peer = sock.peers[peers[i]];
            try {
              peer.socket.close();
            } catch (e) {
            }
            SOCKFS.websocket_sock_ops.removePeer(sock, peer);
          }
          return 0;
        },bind:function (sock, addr, port) {
          if (typeof sock.saddr !== 'undefined' || typeof sock.sport !== 'undefined') {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already bound
          }
          sock.saddr = addr;
          sock.sport = port || _mkport();
          // in order to emulate dgram sockets, we need to launch a listen server when
          // binding on a connection-less socket
          // note: this is only required on the server side
          if (sock.type === 2) {
            // close the existing server if it exists
            if (sock.server) {
              sock.server.close();
              sock.server = null;
            }
            // swallow error operation not supported error that occurs when binding in the
            // browser where this isn't supported
            try {
              sock.sock_ops.listen(sock, 0);
            } catch (e) {
              if (!(e instanceof FS.ErrnoError)) throw e;
              if (e.errno !== ERRNO_CODES.EOPNOTSUPP) throw e;
            }
          }
        },connect:function (sock, addr, port) {
          if (sock.server) {
            throw new FS.ErrnoError(ERRNO_CODS.EOPNOTSUPP);
          }
          // TODO autobind
          // if (!sock.addr && sock.type == 2) {
          // }
          // early out if we're already connected / in the middle of connecting
          if (typeof sock.daddr !== 'undefined' && typeof sock.dport !== 'undefined') {
            var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
            if (dest) {
              if (dest.socket.readyState === dest.socket.CONNECTING) {
                throw new FS.ErrnoError(ERRNO_CODES.EALREADY);
              } else {
                throw new FS.ErrnoError(ERRNO_CODES.EISCONN);
              }
            }
          }
          // add the socket to our peer list and set our
          // destination address / port to match
          var peer = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
          sock.daddr = peer.addr;
          sock.dport = peer.port;
          // always "fail" in non-blocking mode
          throw new FS.ErrnoError(ERRNO_CODES.EINPROGRESS);
        },listen:function (sock, backlog) {
          if (!ENVIRONMENT_IS_NODE) {
            throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
          }
          if (sock.server) {
             throw new FS.ErrnoError(ERRNO_CODES.EINVAL);  // already listening
          }
          var WebSocketServer = require('ws').Server;
          var host = sock.saddr;
          sock.server = new WebSocketServer({
            host: host,
            port: sock.sport
            // TODO support backlog
          });
          sock.server.on('connection', function(ws) {
            if (sock.type === 1) {
              var newsock = SOCKFS.createSocket(sock.family, sock.type, sock.protocol);
              // create a peer on the new socket
              var peer = SOCKFS.websocket_sock_ops.createPeer(newsock, ws);
              newsock.daddr = peer.addr;
              newsock.dport = peer.port;
              // push to queue for accept to pick up
              sock.pending.push(newsock);
            } else {
              // create a peer on the listen socket so calling sendto
              // with the listen socket and an address will resolve
              // to the correct client
              SOCKFS.websocket_sock_ops.createPeer(sock, ws);
            }
          });
          sock.server.on('closed', function() {
            sock.server = null;
          });
          sock.server.on('error', function() {
            // don't throw
          });
        },accept:function (listensock) {
          if (!listensock.server) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          var newsock = listensock.pending.shift();
          newsock.stream.flags = listensock.stream.flags;
          return newsock;
        },getname:function (sock, peer) {
          var addr, port;
          if (peer) {
            if (sock.daddr === undefined || sock.dport === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            }
            addr = sock.daddr;
            port = sock.dport;
          } else {
            // TODO saddr and sport will be set for bind()'d UDP sockets, but what
            // should we be returning for TCP sockets that've been connect()'d?
            addr = sock.saddr || 0;
            port = sock.sport || 0;
          }
          return { addr: addr, port: port };
        },sendmsg:function (sock, buffer, offset, length, addr, port) {
          if (sock.type === 2) {
            // connection-less sockets will honor the message address,
            // and otherwise fall back to the bound destination address
            if (addr === undefined || port === undefined) {
              addr = sock.daddr;
              port = sock.dport;
            }
            // if there was no address to fall back to, error out
            if (addr === undefined || port === undefined) {
              throw new FS.ErrnoError(ERRNO_CODES.EDESTADDRREQ);
            }
          } else {
            // connection-based sockets will only use the bound
            addr = sock.daddr;
            port = sock.dport;
          }
          // find the peer for the destination address
          var dest = SOCKFS.websocket_sock_ops.getPeer(sock, addr, port);
          // early out if not connected with a connection-based socket
          if (sock.type === 1) {
            if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
            } else if (dest.socket.readyState === dest.socket.CONNECTING) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // create a copy of the incoming data to send, as the WebSocket API
          // doesn't work entirely with an ArrayBufferView, it'll just send
          // the entire underlying buffer
          var data;
          if (buffer instanceof Array || buffer instanceof ArrayBuffer) {
            data = buffer.slice(offset, offset + length);
          } else {  // ArrayBufferView
            data = buffer.buffer.slice(buffer.byteOffset + offset, buffer.byteOffset + offset + length);
          }
          // if we're emulating a connection-less dgram socket and don't have
          // a cached connection, queue the buffer to send upon connect and
          // lie, saying the data was sent now.
          if (sock.type === 2) {
            if (!dest || dest.socket.readyState !== dest.socket.OPEN) {
              // if we're not connected, open a new connection
              if (!dest || dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                dest = SOCKFS.websocket_sock_ops.createPeer(sock, addr, port);
              }
              dest.dgram_send_queue.push(data);
              return length;
            }
          }
          try {
            // send the actual data
            dest.socket.send(data);
            return length;
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
        },recvmsg:function (sock, length) {
          // http://pubs.opengroup.org/onlinepubs/7908799/xns/recvmsg.html
          if (sock.type === 1 && sock.server) {
            // tcp servers should not be recv()'ing on the listen socket
            throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
          }
          var queued = sock.recv_queue.shift();
          if (!queued) {
            if (sock.type === 1) {
              var dest = SOCKFS.websocket_sock_ops.getPeer(sock, sock.daddr, sock.dport);
              if (!dest) {
                // if we have a destination address but are not connected, error out
                throw new FS.ErrnoError(ERRNO_CODES.ENOTCONN);
              }
              else if (dest.socket.readyState === dest.socket.CLOSING || dest.socket.readyState === dest.socket.CLOSED) {
                // return null if the socket has closed
                return null;
              }
              else {
                // else, our socket is in a valid state but truly has nothing available
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
            } else {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
          }
          // queued.data will be an ArrayBuffer if it's unadulterated, but if it's
          // requeued TCP data it'll be an ArrayBufferView
          var queuedLength = queued.data.byteLength || queued.data.length;
          var queuedOffset = queued.data.byteOffset || 0;
          var queuedBuffer = queued.data.buffer || queued.data;
          var bytesRead = Math.min(length, queuedLength);
          var res = {
            buffer: new Uint8Array(queuedBuffer, queuedOffset, bytesRead),
            addr: queued.addr,
            port: queued.port
          };
          // push back any unread data for TCP connections
          if (sock.type === 1 && bytesRead < queuedLength) {
            var bytesRemaining = queuedLength - bytesRead;
            queued.data = new Uint8Array(queuedBuffer, queuedOffset + bytesRead, bytesRemaining);
            sock.recv_queue.unshift(queued);
          }
          return res;
        }}};function _send(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _write(fd, buf, len);
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }
  function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          var flagPadSign = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              case 32:
                flagPadSign = true;
                break;
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (currArg >= 0) {
                if (flagAlwaysSigned) {
                  prefix = '+' + prefix;
                } else if (flagPadSign) {
                  prefix = ' ' + prefix;
                }
              }
              // Move sign to prefix so we zero-pad after the sign
              if (argText.charAt(0) == '-') {
                prefix = '-' + prefix;
                argText = argText.substr(1);
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (currArg >= 0) {
                  if (flagAlwaysSigned) {
                    argText = '+' + argText;
                  } else if (flagPadSign) {
                    argText = ' ' + argText;
                  }
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr;;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;;
    }
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;
  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = Module.ctx.createShader(shaderType);
      return id;
    }
  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      Module.ctx.shaderSource(GL.shaders[shader], source);
    }
  function _glCompileShader(shader) {
      Module.ctx.compileShader(GL.shaders[shader]);
    }
  function _glGetShaderiv(shader, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=Module.ctx.getShaderInfoLog(GL.shaders[shader]).length + 1;
      } else {
        HEAP32[((p)>>2)]=Module.ctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }
  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {
      var log = Module.ctx.getShaderInfoLog(GL.shaders[shader]);
      // Work around a bug in Chromium which causes getShaderInfoLog to return null
      if (!log) {
        log = "";
      }
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }
  function _glDeleteShader(shader) {
      Module.ctx.deleteShader(GL.shaders[shader]);
      GL.shaders[shader] = null;
    }
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        FS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  function _recv(fd, buf, len, flags) {
      var sock = SOCKFS.getSocket(fd);
      if (!sock) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      // TODO honor flags
      return _read(fd, buf, len);
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return FS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return FS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStream(stream);
      stream.eof = false;
      return 0;
    }var _fseeko=_fseek;
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      stream = FS.getStream(stream);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (FS.isChrdev(stream.node.mode)) {
        ___setErrNo(ERRNO_CODES.ESPIPE);
        return -1;
      } else {
        return stream.position;
      }
    }var _ftello=_ftell;
  function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = FS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 512;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 64;
        flags |= 1024;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = Module.ctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }
  function _glBindAttribLocation(program, index, name) {
      name = Pointer_stringify(name);
      Module.ctx.bindAttribLocation(GL.programs[program], index, name);
    }
  function _glAttachShader(program, shader) {
      Module.ctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }
  function _glLinkProgram(program) {
      Module.ctx.linkProgram(GL.programs[program]);
      GL.uniformTable[program] = {}; // uniforms no longer keep the same names after linking
    }
  function _glGetProgramiv(program, pname, p) {
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        HEAP32[((p)>>2)]=Module.ctx.getProgramInfoLog(GL.programs[program]).length + 1;
      } else {
        HEAP32[((p)>>2)]=Module.ctx.getProgramParameter(GL.programs[program], pname);
      }
    }
  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {
      var log = Module.ctx.getProgramInfoLog(GL.programs[program]);
      // Work around a bug in Chromium which causes getProgramInfoLog to return null
      if (!log) {
        log = "";
      }
      log = log.substr(0, maxLength - 1);
      writeStringToMemory(log, infoLog);
      if (length) {
        HEAP32[((length)>>2)]=log.length
      }
    }
  function _glDeleteProgram(program) {
      var program = GL.programs[program];
      Module.ctx.deleteProgram(program);
      program.name = 0;
      GL.programs[program] = null;
      GL.uniformTable[program] = null;
    }
  function _glUseProgram(program) {
      Module.ctx.useProgram(program ? GL.programs[program] : null);
    }
  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = GL.getNewId(GL.buffers);
        var buffer = Module.ctx.createBuffer();
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }
  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
      if (target == Module.ctx.ARRAY_BUFFER) {
        GL.currArrayBuffer = buffer;
      } else if (target == Module.ctx.ELEMENT_ARRAY_BUFFER) {
        GL.currElementArrayBuffer = buffer;
      }
      Module.ctx.bindBuffer(target, bufferObj);
    }
  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      Module.ctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
    }
  function _glGenVertexArrays(n , arrays) {
      assert(GL.vaoExt, 'Must have OES_vertex_array_object to use vao');
      for (var i = 0; i < n ; i++) {
        var id = GL.getNewId(GL.vaos);
        var vao = GL.vaoExt.createVertexArrayOES();
        vao.name = id;
        GL.vaos[id] = vao;
        HEAP32[(((arrays)+(i*4))>>2)]=id;
      }
    }
  function _glBindVertexArray(vao) {
      assert(GL.vaoExt, 'Must have OES_vertex_array_object to use vao');    
      GL.vaoExt.bindVertexArrayOES(GL.vaos[vao]);
    }
  function _glEnableVertexAttribArray(index) {
      Module.ctx.enableVertexAttribArray(index);
    }
  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      Module.ctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }
  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
      var ptable = GL.uniformTable[program];
      if (!ptable) ptable = GL.uniformTable[program] = {};
      var id = ptable[name];
      if (id) return id;
      var loc = Module.ctx.getUniformLocation(GL.programs[program], name);
      if (!loc) return -1;
      id = GL.getNewId(GL.uniforms);
      GL.uniforms[id] = loc;
      ptable[name] = id;
      return id;
    }
  function _glUniform1f(location, v0) {
      location = GL.uniforms[location];
      Module.ctx.uniform1f(location, v0);
    }
  function _glBindFramebuffer(target, framebuffer) {
      Module.ctx.bindFramebuffer(target, framebuffer ? GL.framebuffers[framebuffer] : null);
    }
  function _glActiveTexture(x0) { Module.ctx.activeTexture(x0) }
  function _glBindTexture(target, texture) {
      Module.ctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }
  function _glEnable(x0) { Module.ctx.enable(x0) }
  function _glBlendFuncSeparate(x0, x1, x2, x3) { Module.ctx.blendFuncSeparate(x0, x1, x2, x3) }
  function _glClear(x0) { Module.ctx.clear(x0) }
  function _glUniform1i(location, v0) {
      location = GL.uniforms[location];
      Module.ctx.uniform1i(location, v0);
    }
  function _glUniformMatrix4fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (count == 1) {
        // avoid allocation for the common case of uploading one uniform matrix
        view = GL.miniTempBufferViews[15];
        for (var i = 0; i < 16; i++) {
          view[i] = HEAPF32[(((value)+(i*4))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*64)>>2);
      }
      Module.ctx.uniformMatrix4fv(location, transpose, view);
    }
  function _glDrawArrays(mode, first, count) {
      Module.ctx.drawArrays(mode, first, count);
    }
  function _glFinish() { Module.ctx.finish() }
  function _glBufferSubData(target, offset, size, data) {
      Module.ctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));
    }
  var _tanf=Math.tan;
  var _sqrtf=Math.sqrt;
  var _sinf=Math.sin;
  var _cosf=Math.cos;
  function _llvm_eh_typeid_for(type) {
      return type;
    }
  var CL={cl_digits:[1,2,3,4,5,6,7,8,9,0],cl_kernels_sig:{},cl_pn_type:0,cl_objects:{},cl_objects_retains:{},cl_elapsed_time:0,cl_objects_counter:0,init:function () {
        if (typeof(webcl) === "undefined") {
          webcl = window.WebCL;
          if (typeof(webcl) === "undefined") {
            console.error("This browser has not WebCL implementation !!! \n");
            console.error("Use WebKit Samsung or Firefox Nokia plugin\n");     
          }
        }
        // Add webcl constant for double
        // webcl.FLOAT64 = 0x10DF;
      },udid:function (obj) {    
        var _id;
        if (obj !== undefined) {
          if ( obj.hasOwnProperty('udid') ) {
           _id = obj.udid;
           if (_id !== undefined) {
             return _id;
           }
          }
        }
        var _uuid = [];
        _uuid[0] = CL.cl_digits[0 | Math.random()*CL.cl_digits.length-1]; // First digit of udid can't be 0
        for (var i = 1; i < 6; i++) _uuid[i] = CL.cl_digits[0 | Math.random()*CL.cl_digits.length];
        _id = _uuid.join('');
        if (_id in CL.cl_objects) {
          console.error("/!\\ **********************");
          console.error("/!\\ UDID not unique !!!!!!");
          console.error("/!\\ **********************");        
        }
        // /!\ Call udid when you add inside cl_objects if you pass object in parameter
        if (obj !== undefined) {
          Object.defineProperty(obj, "udid", { value : _id,writable : false });
          CL.cl_objects[_id]=obj;
          CL.cl_objects_counter++;
          //console.info("Counter++ HashMap Object : " + CL.cl_objects_counter + " - Udid : " + _id);
        }
        return _id;      
      },parseKernel:function (kernel_string) {
        // Experimental parse of Kernel
        // Search kernel function like __kernel ... NAME ( p1 , p2 , p3)  
        // Step 1 : Search __kernel
        // Step 2 : Search kernel name (before the open brace)
        // Step 3 : Search brace '(' and ')'
        // Step 4 : Split all inside the brace by ',' after removing all space
        // Step 5 : For each parameter search Adress Space and Data Type
        //
        // --------------------------------------------------------------------
        var _kernel_struct = {};
        kernel_string = kernel_string.replace(/\n/g, " ");
        kernel_string = kernel_string.replace(/\r/g, " ");
        kernel_string = kernel_string.replace(/\t/g, " ");
        // Search kernel function __kernel 
        var _kernel_start = kernel_string.indexOf("__kernel");
        while (_kernel_start >= 0) {
          kernel_string = kernel_string.substr(_kernel_start,kernel_string.length-_kernel_start);
          var _brace_start = kernel_string.indexOf("(");
          var _brace_end = kernel_string.indexOf(")");  
          var _kernels_name = "";
          // Search kernel Name
          for (var i = _brace_start - 1; i >= 0 ; i--) {
            var _chara = kernel_string.charAt(i);
            if (_chara == ' ' && _kernels_name.length > 0) {
              break;
            } else if (_chara != ' ') {
              _kernels_name = _chara + _kernels_name;
            }
          }
          var _kernelsubstring = kernel_string.substr(_brace_start + 1,_brace_end - _brace_start - 1);
          _kernelsubstring = _kernelsubstring.replace(/\ /g, "");
          var _kernel_parameter = _kernelsubstring.split(",");
          kernel_string = kernel_string.substr(_brace_end);
          var _kernel_parameter_length = _kernel_parameter.length;
          var _parameter = new Array(_kernel_parameter_length);
          for (var i = 0; i < _kernel_parameter_length; i ++) {
            var _value = 0;
            var _string = _kernel_parameter[i]
            // Adress space
            // __global, __local, __constant, __private. 
            if (_string.indexOf("__local") >= 0 ) {
              _value = webcl.LOCAL;
            } 
            // Data Type
            // float, uchar, unsigned char, uint, unsigned int, int. 
            else if (_string.indexOf("float") >= 0 ) {
              _value = webcl.FLOAT;
            // } else if (_string.indexOf("double") >= 0 ) {
            //  _value = webcl.FLOAT64;
            } else if ( (_string.indexOf("uchar") >= 0 ) || (_string.indexOf("unsigned char") >= 0 ) ) {
              _value = webcl.UNSIGNED_INT8;
            } else if ( _string.indexOf("char") >= 0 ) {
              _value = webcl.SIGNED_INT8;
            } else if ( (_string.indexOf("ushort") >= 0 ) || (_string.indexOf("unsigned short") >= 0 ) ) {
              _value = webcl.UNSIGNED_INT16;
            } else if ( _string.indexOf("short") >= 0 ) {
              _value = webcl.SIGNED_INT16;                     
            } else if ( (_string.indexOf("uint") >= 0 ) || (_string.indexOf("unsigned int") >= 0 ) ) {
              _value = webcl.UNSIGNED_INT32;            
            } else if ( _string.indexOf("int") >= 0 ) {
              _value = webcl.SIGNED_INT32;
            } else {
              console.error("Unknow parameter type use float by default ...");   
              _value = webcl.FLOAT;
            }
            _parameter[i] = _value;
          }
          _kernel_struct[_kernels_name] = _parameter;
          _kernel_start = kernel_string.indexOf("__kernel");
        }
        for (var name in _kernel_struct) {
          console.info("Kernel NAME : " + name);      
          console.info("Kernel PARAMETER NUM : "+_kernel_struct[name].length);
        }
        return _kernel_struct;
      },getReferencePointerToArray:function (ptr,size,type) {  
        var _host_ptr = null;
        switch(type) {
          case webcl.SIGNED_INT8:
            _host_ptr = HEAP8.subarray((ptr),(ptr+size));
            break;
          case webcl.SIGNED_INT16:
            _host_ptr = HEAP16.subarray((ptr)>>1,(ptr+size)>>1);
            break;
          case webcl.SIGNED_INT32:
            _host_ptr = HEAP32.subarray((ptr)>>2,(ptr+size)>>2);
            break;
          case webcl.UNSIGNED_INT8:
            _host_ptr = HEAPU8.subarray((ptr),(ptr+size));
            break;
          case webcl.UNSIGNED_INT16:
            _host_ptr = HEAPU16.subarray((ptr)>>1,(ptr+size)>>1);
            break;
          case webcl.UNSIGNED_INT32:
            _host_ptr = HEAPU32.subarray((ptr)>>2,(ptr+size)>>2);
            break;         
          default:
            _host_ptr = HEAPF32.subarray((ptr)>>2,(ptr+size)>>2);
            break;
        }
        return _host_ptr;
      },getCopyPointerToArray:function (ptr,size,type) {  
        var _host_ptr = null;
        switch(type) {
          case webcl.SIGNED_INT8:
            _host_ptr = new Int8Array( HEAP8.subarray((ptr),(ptr+size)) );
            break;
          case webcl.SIGNED_INT16:
            _host_ptr = new Int16Array( HEAP16.subarray((ptr)>>1,(ptr+size)>>1) );
            break;
          case webcl.SIGNED_INT32:
            _host_ptr = new Int32Array( HEAP32.subarray((ptr)>>2,(ptr+size)>>2) );
            break;
          case webcl.UNSIGNED_INT8:
            _host_ptr = new UInt8Array( HEAPU8.subarray((ptr),(ptr+size)) );
            break;
          case webcl.UNSIGNED_INT16:
            _host_ptr = new UInt16Array( HEAPU16.subarray((ptr)>>1,(ptr+size)>>1) );
            break;
          case webcl.UNSIGNED_INT32:
            _host_ptr = new Int32Array( HEAPU32.subarray((ptr)>>2,(ptr+size)>>2) );
            break;         
          default:
            _host_ptr = new Float32Array( HEAPF32.subarray((ptr)>>2,(ptr+size)>>2) );
            break;
        }
        return _host_ptr;
      },getPointerToValue:function (ptr,type) {  
        var _value = null;
        switch(type) {
          case webcl.SIGNED_INT8:
          case webcl.UNSIGNED_INT8:          
            _value = HEAP8[(ptr)]
            break;
          case webcl.SIGNED_INT16:
          case webcl.UNSIGNED_INT16:
            _value = HEAP16[((ptr)>>1)]
            break;
          case webcl.SIGNED_INT32:
          case webcl.UNSIGNED_INT32:
            _value = HEAP32[((ptr)>>2)]
            break;         
          default:
            _value = HEAPF32[((ptr)>>2)]
            break;
        }
        return _value;
      },catchError:function (e) {
        console.error(e);
        var _error = -1;
        if (typeof(WebCLException) !== "undefined") {
          if (e instanceof WebCLException) {
            var _str=e.message;
            var _n=_str.lastIndexOf(" ");
            _error = _str.substr(_n+1,_str.length-_n-1);
          }
        }
        return _error;
      },stack_trace:"// Javascript webcl Stack Trace\n(*) => all the stack_trace are print before the JS function call except for enqueueReadBuffer\n",webclBeginStackTrace:function (name,parameter) {
        CL.stack_trace += "\n" + name + "("
        CL.webclCallParameterStackTrace(parameter);
        CL.stack_trace += ")\n";
      },webclCallStackTrace:function (name,parameter) {
        CL.stack_trace += "\t->" + name + "("
        CL.webclCallParameterStackTrace(parameter);
        CL.stack_trace += ")\n";
      },webclCallParameterStackTrace:function (parameter) {
        for (var i = 0; i < parameter.length - 1 ; i++) {
          if ( ((typeof(ArrayBufferView) !== "undefined") && (parameter[i] instanceof ArrayBufferView)) || (parameter[i] instanceof ArrayBuffer) || (parameter[i] instanceof Array)){ 
            CL.stack_trace += "[";  
            for (var j = 0; j < parameter[i].length - 1 ; j++) {
              CL.stack_trace += parameter[i][j] + ",";
            }
            if (parameter[i].length >= 1) {
              CL.stack_trace += parameter[i][parameter[i].length - 1];
            }
            CL.stack_trace += "],";
          } else {
            CL.stack_trace += parameter[i] + ",";  
          }
        }
        if (parameter.length >= 1) {
          if ( ((typeof(ArrayBufferView) !== "undefined") && (parameter[parameter.length - 1] instanceof ArrayBufferView)) || (parameter[parameter.length - 1] instanceof ArrayBuffer) || (parameter[parameter.length - 1] instanceof Array) ) { 
            CL.stack_trace += "[";  
            for (var j = 0; j < parameter[parameter.length - 1].length - 1 ; j++) {
              CL.stack_trace += parameter[parameter.length - 1][j] + ",";
            }
            if (parameter[i].length >= 1) {
              CL.stack_trace += parameter[parameter.length - 1][parameter[parameter.length - 1].length - 1];
            }
            CL.stack_trace += "]";
          } else {
            CL.stack_trace += parameter[parameter.length - 1]; 
          }
        }
      },webclEndStackTrace:function (result,message,exception) {
        CL.stack_trace += "\t\t=>Result (" + result[0];
        if (result.length >= 2) {
          CL.stack_trace += " : ";
        }
        for (var i = 1; i < result.length - 1 ; i++) {
          CL.stack_trace += ( result[i] == 0 ? '0' : HEAP32[((result[i])>>2)] ) + " - ";
        }
        if (result.length >= 2) {
          CL.stack_trace +=  ( result[result.length - 1] == 0 ? '0' : HEAP32[((result[result.length - 1])>>2)] );
        }
        CL.stack_trace += ") - Message (" + message + ") - Exception (" + exception + ")\n";
        console.info(CL.stack_trace);
        CL.stack_trace = "";
      }};function _clSetTypePointer(pn_type) {
      /*pn_type : CL_SIGNED_INT8,CL_SIGNED_INT16,CL_SIGNED_INT32,CL_UNSIGNED_INT8,CL_UNSIGNED_INT16,CL_UNSIGNED_INT32,CL_FLOAT*/
      switch(pn_type) {
        case webcl.SIGNED_INT8:
          console.info("clSetTypePointer : SIGNED_INT8 - "+webcl.SIGNED_INT8);
          break;
        case webcl.SIGNED_INT16:
          console.info("clSetTypePointer : SIGNED_INT16 - "+webcl.SIGNED_INT16);
          break;
        case webcl.SIGNED_INT32:
          console.info("clSetTypePointer : SIGNED_INT32 - "+webcl.SIGNED_INT32);
          break;
        case webcl.UNSIGNED_INT8:
          console.info("clSetTypePointer : UNSIGNED_INT8 - "+webcl.UNSIGNED_INT8);
          break;
        case webcl.UNSIGNED_INT16:
          console.info("clSetTypePointer : UNSIGNED_INT16 - "+webcl.UNSIGNED_INT16);
          break;
        case webcl.UNSIGNED_INT32:
          console.info("clSetTypePointer : UNSIGNED_INT32 - "+webcl.UNSIGNED_INT32);
          break;
        default:
          console.info("clSetTypePointer : FLOAT - "+webcl.FLOAT);
          break;
      }
      CL.cl_pn_type = pn_type;
      return webcl.SUCCESS;
    }
  function _clSetKernelArg(kernel,arg_index,arg_size,arg_value) {
      CL.webclBeginStackTrace("clSetKernelArg",[kernel,arg_index,arg_size,arg_value]);
      if (!(kernel in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_KERNEL],CL.cl_objects[kernel]+" is not a valid OpenCL kernel","");
        return webcl.INVALID_KERNEL;
      }
      if (CL.cl_objects[kernel].sig.length < arg_index) {
        CL.webclEndStackTrace([webcl.INVALID_KERNEL],CL.cl_objects[kernel]+" doesn't contains sig array","");
        return webcl.INVALID_KERNEL;          
      }
      try {
        var _sig = CL.cl_objects[kernel].sig[arg_index];
        if (_sig == webcl.LOCAL) {
          // Not yet implemented in browser
          var _array = null;//new Uint32Array([arg_size]);
          CL.webclCallStackTrace(CL.cl_objects[kernel]+".setArg",[arg_index,_array]);
          // WD --> 
          //CL.cl_objects[kernel].setArg(arg_index,_array);
          // WebKit -->
          CL.cl_objects[kernel].setArg(arg_index,arg_size,WebCLKernelArgumentTypes.LOCAL_MEMORY_SIZE);
        } else {
          var _value = HEAP32[((arg_value)>>2)];
          if (_value in CL.cl_objects) {
            CL.webclCallStackTrace(CL.cl_objects[kernel]+".setArg",[arg_index,CL.cl_objects[_value]]);
            CL.cl_objects[kernel].setArg(arg_index,CL.cl_objects[_value]);
          } else {
            var _array = CL.getReferencePointerToArray(arg_value,arg_size,_sig);
            CL.webclCallStackTrace(CL.cl_objects[kernel]+".setArg",[arg_index,_array]);
            // WD --> 
            //CL.cl_objects[kernel].setArg(arg_index,_array);
            // WebKit -->     
            var _size = (arg_size>>(_array.BYTES_PER_ELEMENT>>1));
            var _type;
            switch(_sig) {
              case webcl.SIGNED_INT8:
                _type = WebCLKernelArgumentTypes.CHAR;
                break;
              case webcl.SIGNED_INT16:
                _type = WebCLKernelArgumentTypes.SHORT;
                break;
              case webcl.SIGNED_INT32:
                _type = WebCLKernelArgumentTypes.INT;
                break;
              case webcl.UNSIGNED_INT8:
                _type = WebCLKernelArgumentTypes.UCHAR;
                break;
              case webcl.UNSIGNED_INT16:
                _type = WebCLKernelArgumentTypes.USHORT;
                break;
              case webcl.UNSIGNED_INT32:
                _type = WebCLKernelArgumentTypes.UINT;
                break;
              default:
                _type = WebCLKernelArgumentTypes.FLOAT;
                break;
            }
            if ( _size > 1) {
              if (_size == 2) {
                _type |= WebCLKernelArgumentTypes.VEC2;
              } else if (_size == 3) {
                _type |= WebCLKernelArgumentTypes.VEC3;
              } else if (_size == 4) {
                _type |= WebCLKernelArgumentTypes.VEC4;
              } else if (_size == 8) {
                _type |= WebCLKernelArgumentTypes.VEC8;
              } else if (_size == 16) {
                _type |= WebCLKernelArgumentTypes.VEC16;
              }
              var _values = Array.apply( [], _array);
              CL.cl_objects[kernel].setArg(arg_index, _values, _type);
            } else {
              CL.cl_objects[kernel].setArg(arg_index,CL.getPointerToValue(arg_value,_sig),_type);
            }
          }
        }
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clReleaseMemObject(memobj) {
      CL.webclBeginStackTrace("clReleaseMemObject",[memobj]);
      if (!(memobj in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_MEM_OBJECT],CL.cl_objects[memobj]+" is not a valid OpenCL memobj","");
        return webcl.INVALID_MEM_OBJECT;
      }
      // If is an object retain don't release it ...
      if (memobj in CL.cl_objects_retains) {
        return webcl.SUCCESS;
      }
      try {
        CL.webclCallStackTrace(CL.cl_objects[memobj]+".release",[]);
        //CL.cl_objects[memobj].release();
        delete CL.cl_objects[memobj];
        CL.cl_objects_counter--;
        //console.info("Counter-- HashMap Object : " + CL.cl_objects_counter + " - Udid : " + memobj);
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clRetainMemObject(memobj) {
      CL.webclBeginStackTrace("clRetainMemObject",[memobj]);
      if (!(memobj in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_MEM_OBJECT],CL.cl_objects[memobj]+" is not a valid OpenCL memobj","");
        return webcl.INVALID_MEM_OBJECT;
      }
      CL.cl_objects_retains[memobj] = CL.cl_objects[memobj];
      return webcl.SUCCESS;
    }
  function _clGetProgramBuildInfo(program,device,param_name,param_value_size,param_value,param_value_size_ret) {
      CL.webclBeginStackTrace("clGetProgramBuildInfo",[program,device,param_name,param_value_size,param_value,param_value_size_ret]);
      // Program must be created
      if (!(program in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_PROGRAM],"program '"+program+"' is not a valid program","");
        return webcl.INVALID_PROGRAM; 
      }
      if (!(device in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_PROGRAM],"device '"+device+"' is not a valid device","");
        return webcl.INVALID_DEVICE; 
      }
      var _info = null;
      try { 
        CL.webclCallStackTrace(""+CL.cl_objects[program]+".getBuildInfo",[device,param_name]);
        _info = CL.cl_objects[program].getBuildInfo(CL.cl_objects[device], param_name);
      } catch (e) {
        var _error = CL.catchError(e);
        if (param_value != 0) {
          HEAP32[((param_value)>>2)]=0;
        }
        if (param_value_size_ret != 0) {
          HEAP32[((param_value_size_ret)>>2)]=0;
        }
        CL.webclEndStackTrace([_error,param_value,param_value_size_ret],"",e.message);
        return _error;
      }
      if(typeof(_info) == "number") {
        if (param_value != 0) HEAP32[((param_value)>>2)]=_info;
        if (param_value_size_ret != 0) HEAP32[((param_value_size_ret)>>2)]=4;
      } else if(typeof(_info) == "string") {
        if (param_value != 0) {
          writeStringToMemory(_info, param_value);
        }
        if (param_value_size_ret != 0) {
          HEAP32[((param_value_size_ret)>>2)]=_info.length;
        }
      } else {
        CL.webclEndStackTrace([webcl.INVALID_VALUE],typeof(_info)+" not yet implemented","");
        return webcl.INVALID_VALUE;
      }
      CL.webclEndStackTrace([webcl.SUCCESS,param_value,param_value_size_ret],"","");
      return webcl.SUCCESS;
    }
  function _clGetContextInfo(context,param_name,param_value_size,param_value,param_value_size_ret) {
      CL.webclBeginStackTrace("clGetContextInfo",[context,param_name,param_value_size,param_value,param_value_size_ret]);
      if (!(context in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_CONTEXT],CL.cl_objects[context]+" is not a valid OpenCL context","");
        return webcl.INVALID_CONTEXT;
      }
      var _info = null;
      try { 
        CL.webclCallStackTrace(""+CL.cl_objects[context]+".getInfo",[param_name]);
        _info = CL.cl_objects[context].getInfo(param_name);
      } catch (e) {
        var _error = CL.catchError(e);
        if (param_value != 0) {
          HEAP32[((param_value)>>2)]=0;
        }
        if (param_value_size_ret != 0) {
          HEAP32[((param_value_size_ret)>>2)]=0;
        }
        CL.webclEndStackTrace([_error,param_value,param_value_size_ret],"",e.message);
        return _error;
      }
      if(typeof(_info) == "number") {
        if (param_value != 0) HEAP32[((param_value)>>2)]=_info;
        if (param_value_size_ret != 0) HEAP32[((param_value_size_ret)>>2)]=4;
      } else if(typeof(_info) == "boolean") {
        if (param_value != 0) (_info == true) ? HEAP32[((param_value)>>2)]=1 : HEAP32[((param_value)>>2)]=0;
        if (param_value_size_ret != 0) HEAP32[((param_value_size_ret)>>2)]=4;
      } else if(typeof(_info) == "object") {
        if ( (_info instanceof WebCLPlatform) || (_info instanceof WebCLContextProperties)) {
          var _id = CL.udid(_info);
          if (param_value != 0) HEAP32[((param_value)>>2)]=_id;
          if (param_value_size_ret != 0) HEAP32[((param_value_size_ret)>>2)]=4;
        } else if (_info instanceof Array) {
          for (var i = 0; i < Math.min(param_value_size>>2,_info.length); i++) {
            var _id = CL.udid(_info[i]);
            if (param_value != 0) HEAP32[(((param_value)+(i*4))>>2)]=_id;
          }
          if (param_value_size_ret != 0) HEAP32[((param_value_size_ret)>>2)]=_info.length*4;
        } else if (_info == null) {
          if (param_value != 0) HEAP32[((param_value)>>2)]=0;
          if (param_value_size_ret != 0) HEAP32[((param_value_size_ret)>>2)]=0;
        } else {
          CL.webclEndStackTrace([webcl.INVALID_VALUE],typeof(_info)+" not yet implemented","");
          return webcl.INVALID_VALUE;
        }
      } else {
        CL.webclEndStackTrace([webcl.INVALID_VALUE],typeof(_info)+" not yet implemented","");
        return webcl.INVALID_VALUE;
      }
      CL.webclEndStackTrace([webcl.SUCCESS,param_value,param_value_size_ret],"","");
      return webcl.SUCCESS;
    }
  function _clEnqueueReadBuffer(command_queue,buffer,blocking_read,offset,cb,ptr,num_events_in_wait_list,event_wait_list,event) {
      CL.webclBeginStackTrace("clEnqueueReadBuffer",[command_queue,buffer,blocking_read,offset,cb,ptr,num_events_in_wait_list,event_wait_list,event]);
      if (CL.cl_pn_type == 0) console.info("/!\\ clEnqueueReadBuffer : you don't call clSetTypePointer for ptr parameter");
      try { 
        if (command_queue in CL.cl_objects) {
          if (buffer in CL.cl_objects) {
            var _host_ptr = CL.getReferencePointerToArray(ptr,cb,CL.cl_pn_type);
            var _event_wait_list = [];
            var _event = null;
            for (var i = 0; i < num_events_in_wait_list; i++) {
              var _event_wait = HEAP32[(((event_wait_list)+(i*4))>>2)];
              if (_event_wait in CL.cl_objects) {
                _event_wait_list.push(_event_wait);
              } else {
                CL.cl_pn_type = 0;
                CL.webclEndStackTrace([webcl.INVALID_EVENT],"",e.message);
                return webcl.INVALID_EVENT;    
              }
            } 
            CL.cl_objects[command_queue].enqueueReadBuffer(CL.cl_objects[buffer],blocking_read,offset,cb,_host_ptr,_event_wait_list);
            //CL.cl_objects[command_queue].enqueueReadBuffer(CL.cl_objects[buffer],blocking_read,offset,cb,_host_ptr,_event_wait_list,_event);
            //if (event != 0) HEAP32[((event)>>2)]=CL.udid(_event);
            // It's the only callStackTrace call after the call for have info about the read host ptr
            CL.webclCallStackTrace("(*)"+CL.cl_objects[command_queue]+".enqueueReadBuffer",[CL.cl_objects[buffer],blocking_read,offset,cb,_host_ptr,_event_wait_list,_event]);
        } else {
            CL.cl_pn_type = 0;
            CL.webclEndStackTrace([webcl.INVALID_MEM_OBJECT],"buffer are NULL","");
            return webcl.INVALID_MEM_OBJECT;
          }
        } else {
          CL.cl_pn_type = 0;
          CL.webclEndStackTrace([webcl.INVALID_COMMAND_QUEUE],"command_queue are NULL","");
          return webcl.INVALID_COMMAND_QUEUE;
        }
      } catch (e) {
        var _error = CL.catchError(e);
        CL.cl_pn_type = 0;
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.cl_pn_type = 0;
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;    
    }
  function _clFinish(command_queue) {
      CL.webclBeginStackTrace("clFinish",[command_queue]);
      try { 
        if (command_queue in CL.cl_objects) {
          CL.webclCallStackTrace(""+CL.cl_objects[command_queue]+".finish",[]);
          CL.cl_objects[command_queue].finish();
        } else {
          CL.webclEndStackTrace([webcl.INVALID_COMMAND_QUEUE],"command_queue are NULL","");
          return webcl.INVALID_COMMAND_QUEUE;
        }
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clEnqueueReleaseGLObjects(command_queue,num_objects,mem_objects,num_events_in_wait_list,event_wait_list,event) {
      CL.webclBeginStackTrace("clEnqueueReleaseGLObjects",[command_queue,num_objects,mem_objects,num_events_in_wait_list,event_wait_list,event]);
      try { 
        if (command_queue in CL.cl_objects) {
          var _event = null;
          var _event_wait_list = [];
          var _mem_objects = [];
          for (var i = 0; i < num_events_in_wait_list; i++) {
            var _event_wait = HEAP32[(((event_wait_list)+(i*4))>>2)];
            if (_event_wait in CL.cl_objects) {
              _event_wait_list.push(_event_wait);
            } else {
              CL.webclEndStackTrace([webcl.INVALID_EVENT],"",e.message);
              return webcl.INVALID_EVENT;    
            }
          } 
          for (var i = 0; i < num_objects; i++) {
            var _id = HEAP32[(((mem_objects)+(i*4))>>2)];
            _mem_objects.push(CL.cl_objects[_id]);
          }
          CL.webclCallStackTrace(""+CL.cl_objects[command_queue]+".enqueueReleaseGLObjects",[_mem_objects,_event_wait_list,_event]);
          CL.cl_objects[command_queue].enqueueReleaseGLObjects(_mem_objects,_event_wait_list);    
          // CL.cl_objects[command_queue].enqueueReleaseGLObjects(_mem_objects,_event_wait_list,_event);    
          // if (event != 0) HEAP32[((event)>>2)]=CL.udid(_event);
        } else {
          CL.webclEndStackTrace([webcl.INVALID_COMMAND_QUEUE],"command_queue are NULL","");
          return webcl.INVALID_COMMAND_QUEUE;
        }
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clEnqueueNDRangeKernel(command_queue,kernel,work_dim,global_work_offset,global_work_size,local_work_size,num_events_in_wait_list,event_wait_list,event) {
      CL.webclBeginStackTrace("clEnqueueNDRangeKernel",[command_queue,kernel,work_dim,global_work_offset,global_work_size,local_work_size,num_events_in_wait_list,event_wait_list,event]);
      try { 
        if (command_queue in CL.cl_objects) {
          if (kernel in CL.cl_objects) {
            var _event = null;
            var _event_wait_list = [];
            // WD --> 
            // Workink Draft take CLuint[3]
            // var _global_work_offset = [];
            // var _global_work_size = [];
            // var _local_work_size = [];
            // WebKit -->
            // Webkit take UInt32Array     
            var _global_work_offset = global_work_offset == 0 ? null : new Int32Array(work_dim);
            var _global_work_size = new Int32Array(work_dim);
            var _local_work_size = local_work_size == 0 ? null : new Int32Array(work_dim);
            for (var i = 0; i < work_dim; i++) {
              //_global_work_size.push(HEAP32[(((global_work_size)+(i*4))>>2)]);
              //if (global_work_offset != 0)
              //  _global_work_offset.push(HEAP32[(((global_work_offset)+(i*4))>>2)]);
              //if (local_work_size != 0)
              //  _local_work_size.push(HEAP32[(((local_work_size)+(i*4))>>2)]);
              _global_work_size[i] = HEAP32[(((global_work_size)+(i*4))>>2)];
              if (_global_work_offset)
                _global_work_offset[i] = HEAP32[(((global_work_offset)+(i*4))>>2)];
              if (_local_work_size)
                _local_work_size[i] = HEAP32[(((local_work_size)+(i*4))>>2)];
            }
            for (var i = 0; i < num_events_in_wait_list; i++) {
              var _event_wait = HEAP32[(((event_wait_list)+(i*4))>>2)];
              if (_event_wait in CL.cl_objects) {
                _event_wait_list.push(_event_wait);
              } else {
                CL.webclEndStackTrace([webcl.INVALID_EVENT],"",e.message);
                return webcl.INVALID_EVENT;    
              }
            }
            CL.webclCallStackTrace(""+CL.cl_objects[command_queue]+".enqueueNDRangeKernel",[CL.cl_objects[kernel],work_dim,_global_work_offset,_global_work_size,_local_work_size,_event_wait_list,_event]);
            CL.cl_objects[command_queue].enqueueNDRangeKernel(CL.cl_objects[kernel],_global_work_offset,_global_work_size,_local_work_size,_event_wait_list);       
            // CL.cl_objects[command_queue].enqueueNDRangeKernel(CL.cl_objects[kernel],work_dim,_global_work_offset,_global_work_size,_local_work_size,_event_wait_list,_event); 
            // if (event != 0) HEAP32[((event)>>2)]=CL.udid(_event);
        } else {
            CL.webclEndStackTrace([webcl.INVALID_MEM_OBJECT],"kernel are NULL","");
            return webcl.INVALID_MEM_OBJECT;
          }
        } else {
          CL.webclEndStackTrace([webcl.INVALID_COMMAND_QUEUE],"command_queue are NULL","");
          return webcl.INVALID_COMMAND_QUEUE;
        }
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;    
    }
  function _clEnqueueAcquireGLObjects(command_queue,num_objects,mem_objects,num_events_in_wait_list,event_wait_list,event) {
      CL.webclBeginStackTrace("clEnqueueAcquireGLObjects",[command_queue,num_objects,mem_objects,num_events_in_wait_list,event_wait_list,event]);
      try { 
        if (command_queue in CL.cl_objects) {
          var _event = null;
          var _event_wait_list = [];
          var _mem_objects = [];
          for (var i = 0; i < num_events_in_wait_list; i++) {
            var _event_wait = HEAP32[(((event_wait_list)+(i*4))>>2)];
            if (_event_wait in CL.cl_objects) {
              _event_wait_list.push(_event_wait);
            } else {
              CL.webclEndStackTrace([webcl.INVALID_EVENT],"",e.message);
              return webcl.INVALID_EVENT;    
            }
          } 
          for (var i = 0; i < num_objects; i++) {
            var _id = HEAP32[(((mem_objects)+(i*4))>>2)];
            _mem_objects.push(CL.cl_objects[_id]);
          }
          CL.webclCallStackTrace(""+CL.cl_objects[command_queue]+".enqueueAcquireGLObjects",[_mem_objects,_event_wait_list,_event]);
          CL.cl_objects[command_queue].enqueueAcquireGLObjects(_mem_objects,_event_wait_list);    
          // CL.cl_objects[command_queue].enqueueAcquireGLObjects(_mem_objects,_event_wait_list,_event);    
          // if (event != 0) HEAP32[((event)>>2)]=CL.udid(_event);
        } else {
          CL.webclEndStackTrace([webcl.INVALID_COMMAND_QUEUE],"command_queue are NULL","");
          return webcl.INVALID_COMMAND_QUEUE;
        }
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clCreateBuffer(context,flags_i64_1,flags_i64_2,size,host_ptr,cl_errcode_ret) {
      // Assume the flags is i32 
      assert(flags_i64_2 == 0, 'Invalid flags i64');
      CL.webclBeginStackTrace("clCreateBuffer",[flags_i64_1,size,host_ptr,cl_errcode_ret]);
      if (CL.cl_pn_type == 0) console.info("/!\\ clCreateBuffer : you don't call clSetTypePointer for host_ptr parameter");
      var _id = null;
      var _buffer = null;
      // Context must be created
      if (!(context in CL.cl_objects)) {
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_CONTEXT;
        }
        CL.cl_pn_type = 0;
        CL.webclEndStackTrace([0,cl_errcode_ret],"context '"+context+"' is not a valid context","");
        return 0; 
      }
      var _flags;
      if (flags_i64_1 & webcl.MEM_READ_WRITE) {
        _flags = webcl.MEM_READ_WRITE;
      } else if (flags_i64_1 & webcl.MEM_WRITE_ONLY) {
        _flags = webcl.MEM_WRITE_ONLY;
      } else if (flags_i64_1 & webcl.MEM_READ_ONLY) {
        _flags = webcl.MEM_READ_ONLY;
      } else {
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_VALUE;
        }
        CL.cl_pn_type = 0;
        CL.webclEndStackTrace([0,cl_errcode_ret],"values specified "+flags_i64_1+" in flags are not valid","");
        return 0; 
      }
      var _host_ptr = null;
      if (flags_i64_1 & (1 << 4) /* CL_MEM_ALLOC_HOST_PTR */) {
        _host_ptr = new ArrayBuffer(size);
      } else if (host_ptr != 0 && (flags_i64_1 & (1 << 5) /* CL_MEM_COPY_HOST_PTR */)) {
        _host_ptr = CL.getCopyPointerToArray(host_ptr,size,CL.cl_pn_type);
      } else if (flags_i64_1 & ~_flags) {
        // /!\ For the CL_MEM_USE_HOST_PTR (1 << 3)... 
        // may be i can do fake it using the same behavior than CL_MEM_COPY_HOST_PTR --> @steven What do you thing ??
        console.error("clCreateBuffer : This flag is not yet implemented => "+(flags_i64_1 & ~_flags));
      }
      try {
        CL.webclCallStackTrace( CL.cl_objects[context]+".createBuffer",[_flags,size,_host_ptr]);
        if (_host_ptr != null) {
          _buffer = CL.cl_objects[context].createBuffer(_flags,size,_host_ptr.buffer);
        } else
          _buffer = CL.cl_objects[context].createBuffer(_flags,size);
      } catch (e) {
        var _error = CL.catchError(e);
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=_error;
        }
        CL.cl_pn_type = 0;
        CL.webclEndStackTrace([0,cl_errcode_ret],"",e.message);
        return 0; // NULL Pointer
      }
      if (cl_errcode_ret != 0) {
        HEAP32[((cl_errcode_ret)>>2)]=0;
      }
      _id = CL.udid(_buffer);
      CL.cl_pn_type = 0;
      CL.webclEndStackTrace([_id,cl_errcode_ret],"","");
      return _id;
    }
  function _clCreateFromGLBuffer(context,flags_i64_1,flags_i64_2,bufobj,cl_errcode_ret) {
      // Assume the flags is i32 
      assert(flags_i64_2 == 0, 'Invalid flags i64');
      CL.webclBeginStackTrace("clCreateFromGLBuffer",[context,flags_i64_1,bufobj,cl_errcode_ret]);
      var _id = null;
      var _buffer = null;
      // Context must be created
      if (!(context in CL.cl_objects)) {
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_CONTEXT;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"context '"+context+"' is not a valid context","");
        return 0; 
      }
      try {
        var _flags;
        if (flags_i64_1 & webcl.MEM_READ_WRITE) {
          _flags = webcl.MEM_READ_WRITE;
        } else if (flags_i64_1 & webcl.MEM_WRITE_ONLY) {
          _flags = webcl.MEM_WRITE_ONLY;
        } else if (flags_i64_1 & webcl.MEM_READ_ONLY) {
          _flags = webcl.MEM_READ_ONLY;
        } else {
          if (cl_errcode_ret != 0) {
            HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_VALUE;
          }
          CL.webclEndStackTrace([0,cl_errcode_ret],"values specified "+flags_i64_1+" in flags are not valid","");
          return 0; 
        }
        CL.webclCallStackTrace( CL.cl_objects[context]+".createFromGLBuffer",[_flags,GL.buffers[bufobj]]);
        _buffer = CL.cl_objects[context].createBuffer(_flags,GL.buffers[bufobj]);
      } catch (e) {
        var _error = CL.catchError(e);
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=_error;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"",e.message);
        return 0; // NULL Pointer
      }
      if (cl_errcode_ret != 0) {
        HEAP32[((cl_errcode_ret)>>2)]=0;
      }
      _id = CL.udid(_buffer);
      CL.webclEndStackTrace([_id,cl_errcode_ret],"","");
      return _id;
    }
  function _clCreateCommandQueue(context,device,properties_1,properties_2,cl_errcode_ret) {
      // Assume the properties is i32 
      assert(properties_2 == 0, 'Invalid properties i64');
      CL.webclBeginStackTrace("clCreateCommandQueue",[context,device,properties_1,cl_errcode_ret]);
      var _id = null;
      var _command = null;
      // Context must be created
      if (!(context in CL.cl_objects)) {
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_CONTEXT;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"context '"+context+"' is not a valid context","");
        return 0; 
      }
      if (device == 0) {
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_DEVICE;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"device '"+device+"' is not a valid device","");
        return 0; 
      }
      try { 
        CL.webclCallStackTrace( CL.cl_objects[context]+".createCommandQueue",[properties_1]);
        _command = CL.cl_objects[context].createCommandQueue(device,properties_1);
      } catch (e) {
        var _error = CL.catchError(e);
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=_error;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"",e.message);
        return 0; // NULL Pointer
      }
      if (cl_errcode_ret != 0) {
        HEAP32[((cl_errcode_ret)>>2)]=0;
      }
      _id = CL.udid(_command);
      CL.webclEndStackTrace([_id,cl_errcode_ret],"","");
      return _id;
    }
  function _clReleaseCommandQueue(command_queue) {
      CL.webclBeginStackTrace("clReleaseCommandQueue",[command_queue]);
      if (!(command_queue in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_COMMAND_QUEUE],CL.cl_objects[command_queue]+" is not a valid OpenCL command_queue","");
        return webcl.INVALID_COMMAND_QUEUE;
      }
      // If is an object retain don't release it ...
      if (command_queue in CL.cl_objects_retains) {
        return webcl.SUCCESS;
      }
      try {
          CL.webclCallStackTrace(CL.cl_objects[command_queue]+".release",[]);
          //CL.cl_objects[command_queue].release();
          delete CL.cl_objects[command_queue];
          CL.cl_objects_counter--;
          //console.info("Counter-- HashMap Object : " + CL.cl_objects_counter + " - Udid : " + command_queue);
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clRetainCommandQueue(command_queue) {
      CL.webclBeginStackTrace("clRetainCommandQueue",[command_queue]);
      if (!(command_queue in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_COMMAND_QUEUE],CL.cl_objects[context]+" is not a valid OpenCL command_queue","");
        return webcl.INVALID_COMMAND_QUEUE;
      }
      CL.cl_objects_retains[command_queue] = CL.cl_objects[command_queue];
      return webcl.SUCCESS;
    }
  function _clCreateKernel(program,kernel_name,cl_errcode_ret) {
      CL.webclBeginStackTrace("clCreateKernel",[program,kernel_name,cl_errcode_ret]);
      var _id = null;
      var _kernel = null;
      var _name = (kernel_name == 0) ? "" : Pointer_stringify(kernel_name);
      // program must be created
      if (!(program in CL.cl_objects)) {
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_PROGRAM;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"program '"+program+"' is not a valid program","");
        return 0; 
      }
      try {
        CL.webclCallStackTrace( CL.cl_objects[program]+".createKernel",[_name]);
        _kernel = CL.cl_objects[program].createKernel(_name);
        Object.defineProperty(_kernel, "name", { value : _name,writable : false });
        Object.defineProperty(_kernel, "sig", { value : CL.cl_kernels_sig[_name],writable : false });
        console.info("clCreateKernel : Kernel '"+_kernel.name+"', has "+_kernel.sig+" parameters !!!!");
      } catch (e) {
        var _error = CL.catchError(e);
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=_error;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"",e.message);
        return 0; // NULL Pointer
      }
      if (cl_errcode_ret != 0) {
        HEAP32[((cl_errcode_ret)>>2)]=0;
      }
      _id = CL.udid(_kernel);
      CL.webclEndStackTrace([_id,cl_errcode_ret],"","");
      return _id;
    }
  function _clReleaseKernel(kernel) {
      CL.webclBeginStackTrace("clReleaseKernel",[kernel]);
      if (!(kernel in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_KERNEL],CL.cl_objects[kernel]+" is not a valid OpenCL kernel","");
        return webcl.INVALID_KERNEL;
      }
      // If is an object retain don't release it ...
      if (kernel in CL.cl_objects_retains) {
        return webcl.SUCCESS;
      }
      try {
        CL.webclCallStackTrace(CL.cl_objects[kernel]+".release",[]);
        //CL.cl_objects[kernel].release();
        delete CL.cl_objects[kernel];
        CL.cl_objects_counter--;
        //console.info("Counter-- HashMap Object : " + CL.cl_objects_counter + " - Udid : " + kernel);
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clRetainKernel(kernel) {
      CL.webclBeginStackTrace("clRetainKernel",[kernel]);
      if (!(kernel in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_KERNEL],CL.cl_objects[kernel]+" is not a valid OpenCL kernel","");
        return webcl.INVALID_KERNEL;
      }
      CL.cl_objects_retains[kernel] = CL.cl_objects[kernel];
      return webcl.SUCCESS;
    }
  function _clBuildProgram(program,num_devices,device_list,options,pfn_notify,user_data) {
      CL.webclBeginStackTrace("clBuildProgram",[program,num_devices,device_list,options,pfn_notify,user_data]);
      // Program must be created
      if (!(program in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_PROGRAM],"program '"+program+"' is not a valid program","");
        return webcl.INVALID_PROGRAM; 
      }
      try {
        var _devices = [];
        var _option = (options == 0) ? "" : Pointer_stringify(options); 
        if (device_list != 0 && num_devices > 0 ) {
          for (var i = 0; i < num_devices ; i++) {
            var _device = HEAP32[(((device_list)+(i*4))>>2)]
            if (_device in CL.cl_objects) {
              _devices.push(CL.cl_objects[_device]);
            }
          }
        }
        // Need to call this code inside the callback event WebCLCallback.
        // if (pfn_notify != 0) {
        //  FUNCTION_TABLE[pfn_notify](program, user_data);
        // }
        CL.webclCallStackTrace(CL.cl_objects[program]+".build",[_devices,_option]);
        CL.cl_objects[program].build(_devices,_option,null,null);
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;      
    }
  function _clCreateProgramWithSource(context,count,strings,lengths,cl_errcode_ret) {
      CL.webclBeginStackTrace("clCreateProgramWithSource",[context,count,strings,lengths,cl_errcode_ret]);
      var _id = null;
      var _program = null;
      // Context must be created
      if (!(context in CL.cl_objects)) {
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_CONTEXT;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"context '"+context+"' is not a valid context","");
        return 0; 
      }
      try {
        var _string = Pointer_stringify(HEAP32[((strings)>>2)]); 
        CL.cl_kernels_sig = CL.parseKernel(_string);
        CL.webclCallStackTrace( CL.cl_objects[context]+".createProgramWithSource",[_string]);
        _program = CL.cl_objects[context].createProgram(_string);
      } catch (e) {
        var _error = CL.catchError(e);
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=_error;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"",e.message);
        return 0; // NULL Pointer
      }
      if (cl_errcode_ret != 0) {
        HEAP32[((cl_errcode_ret)>>2)]=0;
      }
      _id = CL.udid(_program);
      CL.webclEndStackTrace([_id,cl_errcode_ret],"","");
      return _id;
    }
  function _clReleaseProgram(program) {
      CL.webclBeginStackTrace("clReleaseProgram",[program]);
      if (program in CL.cl_objects) {
        CL.webclEndStackTrace([webcl.INVALID_SAMPLER],CL.cl_objects[program]+" is not a valid OpenCL program","");
        return webcl.INVALID_PROGRAM;
      }
      // If is an object retain don't release it ...
      if (program in CL.cl_objects_retains) {
        return webcl.SUCCESS;
      }
      try {
          CL.webclCallStackTrace(CL.cl_objects[program]+".release",[]);
          CL.cl_objects[program].release();
          delete CL.cl_objects[program];
          CL.cl_objects_counter--;
          //console.info("Counter-- HashMap Object : " + CL.cl_objects_counter + " - Udid : " + program);
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clRetainProgram(program) {
      CL.webclBeginStackTrace("clRetainProgram",[program]);
      if (!(program in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_PROGRAM],CL.cl_objects[program]+" is not a valid OpenCL program","");
        return webcl.INVALID_PROGRAM;
      }
      CL.cl_objects_retains[program] = CL.cl_objects[program];
      return webcl.SUCCESS;
    }
  function _clCreateContextFromType(properties,device_type_i64_1,device_type_i64_2,pfn_notify,user_data,cl_errcode_ret) {
      // Assume the device_type is i32 
      assert(device_type_i64_2 == 0, 'Invalid device_type i64');
      CL.webclBeginStackTrace("clCreateContextFromType",[properties,device_type_i64_1,pfn_notify,user_data,cl_errcode_ret]);
      // Init webcl variable if necessary
      CL.init();
      var _id = null;
      var _context = null;
      try { 
        var _webcl = webcl;
        var _platform = null;
        var _devices = null;
        var _deviceType = device_type_i64_1;
        var _sharedContext = null;
        // Verify the property
        if (properties != 0) {
          var _propertiesCounter = 0;
          while(1) {
            var _readprop = HEAP32[(((properties)+(_propertiesCounter*4))>>2)];
            if (_readprop == 0) break;
            switch (_readprop) {
              case webcl.CONTEXT_PLATFORM:
                _propertiesCounter ++;
                var _idxPlatform = HEAP32[(((properties)+(_propertiesCounter*4))>>2)];
                if (_idxPlatform in CL.cl_objects) {
                  _platform = CL.cl_objects[_idxPlatform];
                } else {
                  if (cl_errcode_ret != 0) {
                    HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_PLATFORM;
                  }
                  CL.webclEndStackTrace([0,cl_errcode_ret],"platform value specified in properties is not a valid platform","");
                  return 0;  
                }
                break;
              // /!\ This part, it's for the CL_GL_Interop
              case (0x200A) /*CL_GLX_DISPLAY_KHR*/:
              case (0x2008) /*CL_GL_CONTEXT_KHR*/:
              case (0x200C) /*CL_CGL_SHAREGROUP_KHR*/:            
                _propertiesCounter ++;
                // Just one is enough
                if ( (typeof(WebCLGL) !== "undefined") && (!(_webcl instanceof WebCLGL)) ){
                  _sharedContext = Module.ctx;
                  CL.webclCallStackTrace(""+webcl+".getExtension",["KHR_GL_SHARING"]);
                  _webcl = webcl.getExtension("KHR_GL_SHARING");
                }
                break;
              default:
                if (cl_errcode_ret != 0) {
                  HEAP32[((cl_errcode_ret)>>2)]=webcl.INVALID_PROPERTY;
                }
                CL.webclEndStackTrace([0,cl_errcode_ret],"context property name '"+_readprop+"' in properties is not a supported property name","");
                return 0; 
            };
            _propertiesCounter ++;
          }
        }
        var _prop;
        if ( (typeof(WebCLGL) !== "undefined") && (_webcl instanceof WebCLGL) ) {
            _prop = {platform: _platform, devices: _devices, deviceType: _deviceType, sharedContext: _sharedContext};
        } else {
          _prop = {platform: _platform, devices: _devices, deviceType: _deviceType};
        }
        CL.webclCallStackTrace(_webcl+".createContext",[_prop]);
        _context = _webcl.createContext(_prop)
      } catch (e) {
        var _error = CL.catchError(e);
        if (cl_errcode_ret != 0) {
          HEAP32[((cl_errcode_ret)>>2)]=_error;
        }
        CL.webclEndStackTrace([0,cl_errcode_ret],"",e.message);
        return 0; // NULL Pointer
      }
      if (cl_errcode_ret != 0) {
        HEAP32[((cl_errcode_ret)>>2)]=0;
      }
      _id = CL.udid(_context);
      CL.webclEndStackTrace([_id,cl_errcode_ret],"","");
      return _id;
    }
  function _clReleaseContext(context) {
      CL.webclBeginStackTrace("clReleaseContext",[context]);
      if (!(context in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_CONTEXT],CL.cl_objects[context]+" is not a valid OpenCL context","");
        return webcl.INVALID_CONTEXT;
      }
      // If is an object retain don't release it ...
      if (context in CL.cl_objects_retains) {
        return webcl.SUCCESS;
      }
      try {
          CL.webclCallStackTrace(CL.cl_objects[context]+".release",[]);
          //CL.cl_objects[context].release();
          delete CL.cl_objects[context];
          CL.cl_objects_counter--;
          //console.info("Counter-- HashMap Object : " + CL.cl_objects_counter + " - Udid : " + context);
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error],"",e.message);
        return _error;
      }
      CL.webclEndStackTrace([webcl.SUCCESS],"","");
      return webcl.SUCCESS;
    }
  function _clRetainContext(context) {
      CL.webclBeginStackTrace("clRetainContext",[context]);
      if (!(context in CL.cl_objects)) {
        CL.webclEndStackTrace([webcl.INVALID_CONTEXT],CL.cl_objects[context]+" is not a valid OpenCL context","");
        return webcl.INVALID_CONTEXT;
      }
      CL.cl_objects_retains[context] = CL.cl_objects[context];
      return webcl.SUCCESS;
    }
  function _clGetPlatformIDs(num_entries,platforms,num_platforms) {
      // Test UDID 
      // for (var i = 0 ; i < 100000; i++) {
      //   CL.udid();
      // }
      CL.webclBeginStackTrace("clGetPlatformIDs",[num_entries,platforms,num_platforms]);
      // Init webcl variable if necessary
      CL.init();
      if ( num_entries == 0 && platforms != 0) {
        CL.webclEndStackTrace([webcl.INVALID_VALUE],"num_entries is equal to zero and platforms is not NULL","");
        return webcl.INVALID_VALUE;
      }
      if ( num_platforms == 0 && platforms == 0) {
        CL.webclEndStackTrace([webcl.INVALID_VALUE],"both num_platforms and platforms are NULL","");
        return webcl.INVALID_VALUE;
      }
      var _platforms = null;
      try { 
        CL.webclCallStackTrace(webcl+".getPlatforms",[]);
        _platforms = webcl.getPlatforms();
      } catch (e) {
        var _error = CL.catchError(e);
        CL.webclEndStackTrace([_error,platforms,num_platforms],"",e.message);
        return _error;
      }
      if (num_platforms != 0) {
        HEAP32[((num_platforms)>>2)]=_platforms.length /* Num of platforms */;
      } 
      if (platforms != 0) {
        for (var i = 0; i < Math.min(num_entries,_platforms.length); i++) {
          var _id = CL.udid(_platforms[i]);
          HEAP32[(((platforms)+(i*4))>>2)]=_id;
        }
      }
      CL.webclEndStackTrace([webcl.SUCCESS,platforms,num_platforms],"","");
      return webcl.SUCCESS;
    }
  function _pthread_mutex_lock() {}
  function _pthread_mutex_unlock() {}
  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[(variable)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[(variable)]=1;
        return 1;
      }
      return 0;
    }
  function ___cxa_guard_release() {}
  function _pthread_cond_broadcast() {
      return 0;
    }
  function _pthread_cond_wait() {
      return 0;
    }
  function _ungetc(c, stream) {
      // int ungetc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ungetc.html
      stream = FS.getStream(stream);
      if (!stream) {
        return -1;
      }
      if (c === -1) {
        // do nothing for EOF character
        return c;
      }
      c = unSign(c & 0xFF);
      stream.ungotten.push(c);
      stream.eof = false;
      return c;
    }
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      var streamObj = FS.getStream(stream);
      if (!streamObj) return -1;
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _fread(_fgetc.ret, 1, 1, stream);
      if (ret == 0) {
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }var _getc=_fgetc;
  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }
  function ___errno_location() {
      return ___errno_state;
    }
  function _strerror_r(errnum, strerrbuf, buflen) {
      if (errnum in ERRNO_MESSAGES) {
        if (ERRNO_MESSAGES[errnum].length > buflen - 1) {
          return ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          var msg = ERRNO_MESSAGES[errnum];
          for (var i = 0; i < msg.length; i++) {
            HEAP8[(((strerrbuf)+(i))|0)]=msg.charCodeAt(i)
          }
          HEAP8[(((strerrbuf)+(i))|0)]=0
          return 0;
        }
      } else {
        return ___setErrNo(ERRNO_CODES.EINVAL);
      }
    }function _strerror(errnum) {
      if (!_strerror.buffer) _strerror.buffer = _malloc(256);
      _strerror_r(errnum, _strerror.buffer, 256);
      return _strerror.buffer;
    }
  function _abort() {
      Module['abort']();
    }
  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      throw HEAP32[((_llvm_eh_exception.buf)>>2)];;
    }
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 79:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function ___cxa_guard_abort() {}
  function _isxdigit(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 102) ||
             (chr >= 65 && chr <= 70);
    }var _isxdigit_l=_isxdigit;
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }var _isdigit_l=_isdigit;
  function __isFloat(text) {
      return !!(/^[+-]?[0-9]*\.?[0-9]+([eE][+-]?[0-9]+)?$/.exec(text));
    }function __scanString(format, get, unget, varargs) {
      if (!__scanString.whiteSpace) {
        __scanString.whiteSpace = {};
        __scanString.whiteSpace[32] = 1;
        __scanString.whiteSpace[9] = 1;
        __scanString.whiteSpace[10] = 1;
        __scanString.whiteSpace[11] = 1;
        __scanString.whiteSpace[12] = 1;
        __scanString.whiteSpace[13] = 1;
      }
      // Supports %x, %4x, %d.%d, %lld, %s, %f, %lf.
      // TODO: Support all format specifiers.
      format = Pointer_stringify(format);
      var soFar = 0;
      if (format.indexOf('%n') >= 0) {
        // need to track soFar
        var _get = get;
        get = function() {
          soFar++;
          return _get();
        }
        var _unget = unget;
        unget = function() {
          soFar--;
          return _unget();
        }
      }
      var formatIndex = 0;
      var argsi = 0;
      var fields = 0;
      var argIndex = 0;
      var next;
      mainLoop:
      for (var formatIndex = 0; formatIndex < format.length;) {
        if (format[formatIndex] === '%' && format[formatIndex+1] == 'n') {
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          HEAP32[((argPtr)>>2)]=soFar;
          formatIndex += 2;
          continue;
        }
        if (format[formatIndex] === '%') {
          var nextC = format.indexOf('c', formatIndex+1);
          if (nextC > 0) {
            var maxx = 1;
            if (nextC > formatIndex+1) {
              var sub = format.substring(formatIndex+1, nextC);
              maxx = parseInt(sub);
              if (maxx != sub) maxx = 0;
            }
            if (maxx) {
              var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
              argIndex += Runtime.getAlignSize('void*', null, true);
              fields++;
              for (var i = 0; i < maxx; i++) {
                next = get();
                HEAP8[((argPtr++)|0)]=next;
              }
              formatIndex += nextC - formatIndex + 1;
              continue;
            }
          }
        }
        // handle %[...]
        if (format[formatIndex] === '%' && format.indexOf('[', formatIndex+1) > 0) {
          var match = /\%([0-9]*)\[(\^)?(\]?[^\]]*)\]/.exec(format.substring(formatIndex));
          if (match) {
            var maxNumCharacters = parseInt(match[1]) || Infinity;
            var negateScanList = (match[2] === '^');
            var scanList = match[3];
            // expand "middle" dashs into character sets
            var middleDashMatch;
            while ((middleDashMatch = /([^\-])\-([^\-])/.exec(scanList))) {
              var rangeStartCharCode = middleDashMatch[1].charCodeAt(0);
              var rangeEndCharCode = middleDashMatch[2].charCodeAt(0);
              for (var expanded = ''; rangeStartCharCode <= rangeEndCharCode; expanded += String.fromCharCode(rangeStartCharCode++));
              scanList = scanList.replace(middleDashMatch[1] + '-' + middleDashMatch[2], expanded);
            }
            var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
            argIndex += Runtime.getAlignSize('void*', null, true);
            fields++;
            for (var i = 0; i < maxNumCharacters; i++) {
              next = get();
              if (negateScanList) {
                if (scanList.indexOf(String.fromCharCode(next)) < 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              } else {
                if (scanList.indexOf(String.fromCharCode(next)) >= 0) {
                  HEAP8[((argPtr++)|0)]=next;
                } else {
                  unget();
                  break;
                }
              }
            }
            // write out null-terminating character
            HEAP8[((argPtr++)|0)]=0;
            formatIndex += match[0].length;
            continue;
          }
        }      
        // remove whitespace
        while (1) {
          next = get();
          if (next == 0) return fields;
          if (!(next in __scanString.whiteSpace)) break;
        }
        unget();
        if (format[formatIndex] === '%') {
          formatIndex++;
          var suppressAssignment = false;
          if (format[formatIndex] == '*') {
            suppressAssignment = true;
            formatIndex++;
          }
          var maxSpecifierStart = formatIndex;
          while (format[formatIndex].charCodeAt(0) >= 48 &&
                 format[formatIndex].charCodeAt(0) <= 57) {
            formatIndex++;
          }
          var max_;
          if (formatIndex != maxSpecifierStart) {
            max_ = parseInt(format.slice(maxSpecifierStart, formatIndex), 10);
          }
          var long_ = false;
          var half = false;
          var longLong = false;
          if (format[formatIndex] == 'l') {
            long_ = true;
            formatIndex++;
            if (format[formatIndex] == 'l') {
              longLong = true;
              formatIndex++;
            }
          } else if (format[formatIndex] == 'h') {
            half = true;
            formatIndex++;
          }
          var type = format[formatIndex];
          formatIndex++;
          var curr = 0;
          var buffer = [];
          // Read characters according to the format. floats are trickier, they may be in an unfloat state in the middle, then be a valid float later
          if (type == 'f' || type == 'e' || type == 'g' ||
              type == 'F' || type == 'E' || type == 'G') {
            var last = 0;
            next = get();
            while (next > 0) {
              buffer.push(String.fromCharCode(next));
              if (__isFloat(buffer.join(''))) {
                last = buffer.length;
              }
              next = get();
            }
            for (var i = 0; i < buffer.length - last + 1; i++) {
              unget();
            }
            buffer.length = last;
          } else {
            next = get();
            var first = true;
            // Strip the optional 0x prefix for %x.
            if ((type == 'x' || type == 'X') && (next == 48)) {
              var peek = get();
              if (peek == 120 || peek == 88) {
                next = get();
              } else {
                unget();
              }
            }
            while ((curr < max_ || isNaN(max_)) && next > 0) {
              if (!(next in __scanString.whiteSpace) && // stop on whitespace
                  (type == 's' ||
                   ((type === 'd' || type == 'u' || type == 'i') && ((next >= 48 && next <= 57) ||
                                                                     (first && next == 45))) ||
                   ((type === 'x' || type === 'X') && (next >= 48 && next <= 57 ||
                                     next >= 97 && next <= 102 ||
                                     next >= 65 && next <= 70))) &&
                  (formatIndex >= format.length || next !== format[formatIndex].charCodeAt(0))) { // Stop when we read something that is coming up
                buffer.push(String.fromCharCode(next));
                next = get();
                curr++;
                first = false;
              } else {
                break;
              }
            }
            unget();
          }
          if (buffer.length === 0) return 0;  // Failure.
          if (suppressAssignment) continue;
          var text = buffer.join('');
          var argPtr = HEAP32[(((varargs)+(argIndex))>>2)];
          argIndex += Runtime.getAlignSize('void*', null, true);
          switch (type) {
            case 'd': case 'u': case 'i':
              if (half) {
                HEAP16[((argPtr)>>1)]=parseInt(text, 10);
              } else if (longLong) {
                (tempI64 = [parseInt(text, 10)>>>0,(tempDouble=parseInt(text, 10),(+(Math.abs(tempDouble))) >= (+(1)) ? (tempDouble > (+(0)) ? ((Math.min((+(Math.floor((tempDouble)/(+(4294967296))))), (+(4294967295))))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+(4294967296)))))))>>>0) : 0)],HEAP32[((argPtr)>>2)]=tempI64[0],HEAP32[(((argPtr)+(4))>>2)]=tempI64[1]);
              } else {
                HEAP32[((argPtr)>>2)]=parseInt(text, 10);
              }
              break;
            case 'X':
            case 'x':
              HEAP32[((argPtr)>>2)]=parseInt(text, 16)
              break;
            case 'F':
            case 'f':
            case 'E':
            case 'e':
            case 'G':
            case 'g':
            case 'E':
              // fallthrough intended
              if (long_) {
                HEAPF64[((argPtr)>>3)]=parseFloat(text)
              } else {
                HEAPF32[((argPtr)>>2)]=parseFloat(text)
              }
              break;
            case 's':
              var array = intArrayFromString(text);
              for (var j = 0; j < array.length; j++) {
                HEAP8[(((argPtr)+(j))|0)]=array[j]
              }
              break;
          }
          fields++;
        } else if (format[formatIndex].charCodeAt(0) in __scanString.whiteSpace) {
          next = get();
          while (next in __scanString.whiteSpace) {
            if (next <= 0) break mainLoop;  // End of input.
            next = get();
          }
          unget(next);
          formatIndex++;
        } else {
          // Not a specifier.
          next = get();
          if (format[formatIndex].charCodeAt(0) !== next) {
            unget(next);
            break mainLoop;
          }
          formatIndex++;
        }
      }
      return fields;
    }function _sscanf(s, format, varargs) {
      // int sscanf(const char *restrict s, const char *restrict format, ... );
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/scanf.html
      var index = 0;
      var get = function() { return HEAP8[(((s)+(index++))|0)]; };
      var unget = function() { index--; };
      return __scanString(format, get, unget, varargs);
    }
  function _catopen() { throw 'TODO: ' + aborter }
  function _catgets() { throw 'TODO: ' + aborter }
  function _catclose() { throw 'TODO: ' + aborter }
  function _newlocale(mask, locale, base) {
      return _malloc(4);
    }
  function _freelocale(locale) {
      _free(locale);
    }
  function _isascii(chr) {
      return chr >= 0 && (chr & 0x80) == 0;
    }
  function ___ctype_b_loc() {
      // http://refspecs.freestandards.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/baselib---ctype-b-loc.html
      var me = ___ctype_b_loc;
      if (!me.ret) {
        var values = [
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,8195,8194,8194,8194,8194,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24577,49156,49156,49156,
          49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,49156,55304,55304,55304,55304,55304,55304,55304,55304,
          55304,55304,49156,49156,49156,49156,49156,49156,49156,54536,54536,54536,54536,54536,54536,50440,50440,50440,50440,50440,
          50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,50440,49156,49156,49156,49156,49156,
          49156,54792,54792,54792,54792,54792,54792,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,50696,
          50696,50696,50696,50696,50696,50696,50696,49156,49156,49156,49156,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
          0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
        ];
        var i16size = 2;
        var arr = _malloc(values.length * i16size);
        for (var i = 0; i < values.length; i++) {
          HEAP16[(((arr)+(i * i16size))>>1)]=values[i]
        }
        me.ret = allocate([arr + 128 * i16size], 'i16*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_tolower_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-tolower-loc.html
      var me = ___ctype_tolower_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,91,92,93,94,95,96,97,98,99,100,101,102,103,
          104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,
          134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,
          164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,
          194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
          224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,
          254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function ___ctype_toupper_loc() {
      // http://refspecs.freestandards.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/libutil---ctype-toupper-loc.html
      var me = ___ctype_toupper_loc;
      if (!me.ret) {
        var values = [
          128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,
          158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,
          188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,
          218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,
          248,249,250,251,252,253,254,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,
          33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,
          73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,
          81,82,83,84,85,86,87,88,89,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,
          145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,
          175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,
          205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,
          235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255
        ];
        var i32size = 4;
        var arr = _malloc(values.length * i32size);
        for (var i = 0; i < values.length; i++) {
          HEAP32[(((arr)+(i * i32size))>>2)]=values[i]
        }
        me.ret = allocate([arr + 128 * i32size], 'i32*', ALLOC_NORMAL);
      }
      return me.ret;
    }
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)]
      };
      var pattern = Pointer_stringify(format);
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
      var leadingSomething = function(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
      var leadingNulls = function(value, digits) {
        return leadingSomething(value, digits, '0');
      };
      var compareByDay = function(date1, date2) {
        var sgn = function(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
      var getFirstWeekStartDate = function(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
      var getWeekBasedYear = function(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls(Math.floor(year/100),2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ),
          // or by no characters if no timezone is determinable. 
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich). 
          // If tm_isdst is zero, the standard time offset is used. 
          // If tm_isdst is greater than zero, the daylight savings time offset is used. 
          // If tm_isdst is negative, no characters are returned. 
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%Z': function(date) {
          // Replaced by the timezone name or abbreviation, or by no bytes if no timezone information exists. [ tm_isdst]
          // FIXME: we cannot determine time zone (or can we?)
          return '';
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }var _strftime_l=_strftime;
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }
  function __parseInt64(str, endptr, base, min, max, unsign) {
      var isNegative = false;
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      if (HEAP8[(str)] == 45) {
        str++;
        isNegative = true;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var ok = false;
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            ok = true; // we saw an initial zero, perhaps the entire thing is just "0"
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      start = str;
      // Get digits.
      var chr;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          str++;
          ok = true;
        }
      }
      if (!ok) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return ((asm["setTempRet0"](0),0)|0);
      }
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      try {
        var numberString = isNegative ? '-'+Pointer_stringify(start, str - start) : Pointer_stringify(start, str - start);
        i64Math.fromString(numberString, finalBase, min, max, unsign);
      } catch(e) {
        ___setErrNo(ERRNO_CODES.ERANGE); // not quite correct
      }
      return ((asm["setTempRet0"](((HEAP32[(((tempDoublePtr)+(4))>>2)])|0)),((HEAP32[((tempDoublePtr)>>2)])|0))|0);
    }function _strtoull(str, endptr, base) {
      return __parseInt64(str, endptr, base, 0, '18446744073709551615', true);  // ULONG_MAX.
    }var _strtoull_l=_strtoull;
  function _strtoll(str, endptr, base) {
      return __parseInt64(str, endptr, base, '-9223372036854775808', '9223372036854775807');  // LLONG_MIN, LLONG_MAX.
    }var _strtoll_l=_strtoll;
  function _uselocale(locale) {
      return 0;
    }
  var _llvm_va_start=undefined;
  function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }function _asprintf(s, format, varargs) {
      return _sprintf(-s, format, varargs);
    }function _vasprintf(s, format, va_arg) {
      return _asprintf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _llvm_va_end() {}
  function _vsnprintf(s, n, format, va_arg) {
      return _snprintf(s, n, format, HEAP32[((va_arg)>>2)]);
    }
  function _vsscanf(s, format, va_arg) {
      return _sscanf(s, format, HEAP32[((va_arg)>>2)]);
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
Module["requestFullScreen"] = function(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function() { Browser.getUserMedia() }
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
__ATINIT__.unshift({ func: function() { TTY.init() } });__ATEXIT__.push({ func: function() { TTY.shutdown() } });TTY.utf8 = new Runtime.UTF8Processor();
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); }
GL.init()
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
__ATINIT__.push({ func: function() { SOCKFS.root = FS.mount(SOCKFS, {}, null); } });
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vif(index,a1,a2) {
  try {
    Module["dynCall_vif"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiif(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiif"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viff(index,a1,a2,a3) {
  try {
    Module["dynCall_viff"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_fiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_fiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    Module["dynCall_viiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    Module["dynCall_viiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiif(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiif"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  try {
    return Module["dynCall_iiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm=(function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer);var b=new global.Int16Array(buffer);var c=new global.Int32Array(buffer);var d=new global.Uint8Array(buffer);var e=new global.Uint16Array(buffer);var f=new global.Uint32Array(buffer);var g=new global.Float32Array(buffer);var h=new global.Float64Array(buffer);var i=env.STACKTOP|0;var j=env.STACK_MAX|0;var k=env.tempDoublePtr|0;var l=env.ABORT|0;var m=env.cttz_i8|0;var n=env.ctlz_i8|0;var o=env._stdin|0;var p=env.__ZTVN10__cxxabiv117__class_type_infoE|0;var q=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;var r=env._stderr|0;var s=env.___fsmu8|0;var t=env._stdout|0;var u=env.___dso_handle|0;var v=+env.NaN;var w=+env.Infinity;var x=0;var y=0;var z=0;var A=0;var B=0,C=0,D=0,E=0,F=0.0,G=0,H=0,I=0,J=0.0;var K=0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=global.Math.floor;var V=global.Math.abs;var W=global.Math.sqrt;var X=global.Math.pow;var Y=global.Math.cos;var Z=global.Math.sin;var _=global.Math.tan;var $=global.Math.acos;var aa=global.Math.asin;var ab=global.Math.atan;var ac=global.Math.atan2;var ad=global.Math.exp;var ae=global.Math.log;var af=global.Math.ceil;var ag=global.Math.imul;var ah=env.abort;var ai=env.assert;var aj=env.asmPrintInt;var ak=env.asmPrintFloat;var al=env.min;var am=env.invoke_iiiiiiii;var an=env.invoke_vif;var ao=env.invoke_viiiii;var ap=env.invoke_vi;var aq=env.invoke_vii;var ar=env.invoke_iiiiiii;var as=env.invoke_ii;var at=env.invoke_iiiiiiiiiiii;var au=env.invoke_iiii;var av=env.invoke_viiiiif;var aw=env.invoke_viiiiiiiiiiiiiii;var ax=env.invoke_viff;var ay=env.invoke_viiiiii;var az=env.invoke_fiii;var aA=env.invoke_viiiiiiii;var aB=env.invoke_viiiiiii;var aC=env.invoke_viiiiiiiii;var aD=env.invoke_viiiiiif;var aE=env.invoke_viiiiiiiiii;var aF=env.invoke_iii;var aG=env.invoke_iiiiii;var aH=env.invoke_i;var aI=env.invoke_iiiiiiiiii;var aJ=env.invoke_viii;var aK=env.invoke_v;var aL=env.invoke_iiiiiiiii;var aM=env.invoke_iiiii;var aN=env.invoke_viiii;var aO=env._llvm_lifetime_end;var aP=env._lseek;var aQ=env._sysconf;var aR=env.__scanString;var aS=env._fclose;var aT=env._pthread_mutex_lock;var aU=env.___cxa_end_catch;var aV=env._glLinkProgram;var aW=env.__isFloat;var aX=env._glBindTexture;var aY=env._fflush;var aZ=env._isxdigit;var a_=env._clGetPlatformIDs;var a$=env._fputc;var a0=env._fwrite;var a1=env._send;var a2=env._fputs;var a3=env._glfwGetTime;var a4=env._glCompileShader;var a5=env._isspace;var a6=env._sprintf;var a7=env._clRetainContext;var a8=env._clReleaseCommandQueue;var a9=env._read;var ba=env._glfwSetWindowTitle;var bb=env._clGetContextInfo;var bc=env._clRetainCommandQueue;var bd=env.___cxa_rethrow;var be=env._fsync;var bf=env.___cxa_guard_abort;var bg=env._newlocale;var bh=env.___gxx_personality_v0;var bi=env._pthread_cond_wait;var bj=env._glUniform1f;var bk=env.___resumeException;var bl=env._glCreateShader;var bm=env._glUniform1i;var bn=env._llvm_va_end;var bo=env._glCreateProgram;var bp=env._vsscanf;var bq=env._clEnqueueReleaseGLObjects;var br=env._glfwCloseWindow;var bs=env._glBlendFuncSeparate;var bt=env.___errno_location;var bu=env._clReleaseContext;var bv=env._glGetProgramiv;var bw=env._glVertexAttribPointer;var bx=env._atexit;var by=env.___cxa_free_exception;var bz=env._glGetUniformLocation;var bA=env._close;var bB=env._clEnqueueAcquireGLObjects;var bC=env._glBindFramebuffer;var bD=env._clCreateBuffer;var bE=env.___setErrNo;var bF=env._clCreateContextFromType;var bG=env._sqrtf;var bH=env._ftell;var bI=env._glDeleteProgram;var bJ=env._exit;var bK=env._clRetainProgram;var bL=env._clCreateProgramWithSource;var bM=env.___ctype_b_loc;var bN=env._freelocale;var bO=env._glAttachShader;var bP=env._catgets;var bQ=env._asprintf;var bR=env.___cxa_is_number_type;var bS=env.___cxa_does_inherit;var bT=env.___cxa_guard_acquire;var bU=env._glBindAttribLocation;var bV=env._clRetainKernel;var bW=env.___cxa_begin_catch;var bX=env._glfwTerminate;var bY=env._recv;var bZ=env.__parseInt64;var b_=env._glGenVertexArrays;var b$=env.__ZSt18uncaught_exceptionv;var b0=env._glBufferSubData;var b1=env._clSetTypePointer;var b2=env.___cxa_call_unexpected;var b3=env._clFinish;var b4=env._glGetShaderiv;var b5=env.__exit;var b6=env._strftime;var b7=env._rand;var b8=env._strtoull;var b9=env._cosf;var ca=env.___cxa_throw;var cb=env._clReleaseKernel;var cc=env._sinf;var cd=env._llvm_eh_exception;var ce=env._glShaderSource;var cf=env._pread;var cg=env._fopen;var ch=env._open;var ci=env._glDrawArrays;var cj=env.__arraySum;var ck=env._snprintf;var cl=env._puts;var cm=env._glClear;var cn=env._clEnqueueNDRangeKernel;var co=env._clReleaseProgram;var cp=env._fgetc;var cq=env._clCreateFromGLBuffer;var cr=env._glActiveTexture;var cs=env._glEnableVertexAttribArray;var ct=env._glBindBuffer;var cu=env.___cxa_find_matching_catch;var cv=env._glfwOpenWindow;var cw=env._glBufferData;var cx=env.__formatString;var cy=env._pthread_cond_broadcast;var cz=env._clEnqueueReadBuffer;var cA=env.__ZSt9terminatev;var cB=env._isascii;var cC=env._pthread_mutex_unlock;var cD=env._glGetShaderInfoLog;var cE=env._sbrk;var cF=env._tanf;var cG=env._clReleaseMemObject;var cH=env._strerror;var cI=env._glfwInit;var cJ=env._catclose;var cK=env._llvm_lifetime_start;var cL=env._clGetProgramBuildInfo;var cM=env._glfwSwapBuffers;var cN=env.___cxa_guard_release;var cO=env._ungetc;var cP=env._uselocale;var cQ=env._vsnprintf;var cR=env._glUseProgram;var cS=env._sscanf;var cT=env._glGetProgramInfoLog;var cU=env._fread;var cV=env._clSetKernelArg;var cW=env._glBindVertexArray;var cX=env._abort;var cY=env._fprintf;var cZ=env._isdigit;var c_=env._strtoll;var c$=env.__reallyNegative;var c0=env._clCreateCommandQueue;var c1=env._glEnable;var c2=env._clBuildProgram;var c3=env._fseek;var c4=env.__addDays;var c5=env._write;var c6=env._clRetainMemObject;var c7=env._glGenBuffers;var c8=env._glFinish;var c9=env.___cxa_allocate_exception;var da=env._glDeleteShader;var db=env._printf;var dc=env._ceilf;var dd=env.___cxa_pure_virtual;var de=env._clCreateKernel;var df=env._vasprintf;var dg=env._glViewport;var dh=env._glfwPollEvents;var di=env._catopen;var dj=env.___ctype_toupper_loc;var dk=env.___ctype_tolower_loc;var dl=env._llvm_eh_typeid_for;var dm=env._glUniformMatrix4fv;var dn=env._pwrite;var dp=env._strerror_r;var dq=env._glfwSetKeyCallback;var dr=env.__isLeapYear;var ds=env._time;
// EMSCRIPTEN_START_FUNCS
function gM(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((d|0)==0){return b|0}f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<d>>>0){gS(b,h,d-h+j|0,j,j,0,0);k=a[f]|0}else{k=i}if((k&1)==0){l=b+1|0}else{l=c[b+8>>2]|0}n0(l+j|0,e|0,d|0);e=j+d|0;if((a[f]&1)==0){a[f]=e<<1&255}else{c[b+4>>2]=e}a[l+e|0]=0;return b|0}function gN(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;if((d|0)==-1){gE(0)}e=b;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}g=j>>>0>d>>>0?j:d;if(g>>>0<11){k=11}else{k=g+16&-16}g=k-1|0;if((g|0)==(h|0)){return}if((g|0)==10){l=e+1|0;m=c[b+8>>2]|0;n=1;o=0}else{do{if(g>>>0>h>>>0){p=nS(k)|0}else{d=(x=0,as(154,k|0)|0);if(!x){p=d;break}else{x=0}d=cu(-1,-1,0)|0;q=d;bW(q|0)|0;aU();return}}while(0);h=i&1;if(h<<24>>24==0){r=e+1|0}else{r=c[b+8>>2]|0}l=p;m=r;n=h<<24>>24!=0;o=1}h=i&255;if((h&1|0)==0){s=h>>>1}else{s=c[b+4>>2]|0}h=s+1|0;n4(l|0,m|0,h)|0;if(n){nU(m)}if(o){c[b>>2]=k|1;c[b+4>>2]=j;c[b+8>>2]=l;return}else{a[f]=j<<1&255;return}}function gO(a,b){a=a|0;b=b|0;return gQ(a,b,n1(b|0)|0)|0}function gP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=10}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){gS(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2&255;j=b+1|0;k=g+1|0;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+g|0;a[l]=d;m=j+k|0;a[m]=0;return}}function gQ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=10;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}if((h-j|0)>>>0<e>>>0){gR(b,h,e-h+j|0,j,j,0,e,d);return b|0}if((e|0)==0){return b|0}if((i&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}i=k+j|0;n4(i|0,d|0,e)|0;d=j+e|0;if((a[f]&1)==0){a[f]=d<<1&255}else{c[b+4>>2]=d}a[k+d|0]=0;return b|0}function gR(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((-3-d|0)>>>0<e>>>0){gE(0)}if((a[b]&1)==0){k=b+1|0}else{k=c[b+8>>2]|0}do{if(d>>>0<2147483631){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<11){o=11;break}o=n+16&-16}else{o=-2}}while(0);e=nS(o)|0;if((g|0)!=0){n4(e|0,k|0,g)|0}if((i|0)!=0){n=e+g|0;n4(n|0,j|0,i)|0}j=f-h|0;if((j|0)!=(g|0)){f=j-g|0;n=e+(i+g)|0;l=k+(h+g)|0;n4(n|0,l|0,f)|0}if((d|0)==10){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}nU(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+s|0;a[u]=0;return}function gS(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((-3-d|0)>>>0<e>>>0){gE(0)}if((a[b]&1)==0){j=b+1|0}else{j=c[b+8>>2]|0}do{if(d>>>0<2147483631){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<11){n=11;break}n=m+16&-16}else{n=-2}}while(0);e=nS(n)|0;if((g|0)!=0){n4(e|0,j|0,g)|0}m=f-h|0;if((m|0)!=(g|0)){f=m-g|0;m=e+(i+g)|0;i=j+(h+g)|0;n4(m|0,i|0,f)|0}if((d|0)==10){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}nU(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function gT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(e>>>0>1073741822){gE(0)}if(e>>>0<2){a[b]=e<<1&255;f=b+4|0;g=no(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}else{i=e+4&-4;j=nS(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=e;f=j;g=no(f,d,e)|0;h=f+(e<<2)|0;c[h>>2]=0;return}}function gU(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;if(d>>>0>1073741822){gE(0)}if(d>>>0<2){a[b]=d<<1&255;f=b+4|0;g=nq(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}else{i=d+4&-4;j=nS(i<<2)|0;c[b+8>>2]=j;c[b>>2]=i|1;c[b+4>>2]=d;f=j;g=nq(f,e,d)|0;h=f+(d<<2)|0;c[h>>2]=0;return}}function gV(b){b=b|0;if((a[b]&1)==0){return}nU(c[b+8>>2]|0);return}function gW(a,b){a=a|0;b=b|0;return gX(a,b,nn(b)|0)|0}function gX(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b;g=a[f]|0;if((g&1)==0){h=1;i=g}else{g=c[b>>2]|0;h=(g&-2)-1|0;i=g&255}if(h>>>0<e>>>0){g=i&255;if((g&1|0)==0){j=g>>>1}else{j=c[b+4>>2]|0}g_(b,h,e-h|0,j,0,j,e,d);return b|0}if((i&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}np(k,d,e)|0;c[k+(e<<2)>>2]=0;if((a[f]&1)==0){a[f]=e<<1&255;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function gY(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;if(d>>>0>1073741822){gE(0)}e=b;f=a[e]|0;if((f&1)==0){g=1;h=f}else{f=c[b>>2]|0;g=(f&-2)-1|0;h=f&255}f=h&255;if((f&1|0)==0){i=f>>>1}else{i=c[b+4>>2]|0}f=i>>>0>d>>>0?i:d;if(f>>>0<2){j=2}else{j=f+4&-4}f=j-1|0;if((f|0)==(g|0)){return}if((f|0)==1){k=b+4|0;l=c[b+8>>2]|0;m=1;n=0}else{d=j<<2;do{if(f>>>0>g>>>0){o=nS(d)|0}else{p=(x=0,as(154,d|0)|0);if(!x){o=p;break}else{x=0}p=cu(-1,-1,0)|0;q=p;bW(q|0)|0;aU();return}}while(0);d=h&1;if(d<<24>>24==0){r=b+4|0}else{r=c[b+8>>2]|0}k=o;l=r;m=d<<24>>24!=0;n=1}d=k;k=h&255;if((k&1|0)==0){s=k>>>1}else{s=c[b+4>>2]|0}no(d,l,s+1|0)|0;if(m){nU(l)}if(n){c[b>>2]=j|1;c[b+4>>2]=i;c[b+8>>2]=d;return}else{a[e]=i<<1&255;return}}function gZ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;e=b;f=a[e]|0;if((f&1)==0){g=(f&255)>>>1;h=1}else{g=c[b+4>>2]|0;h=(c[b>>2]&-2)-1|0}if((g|0)==(h|0)){g$(b,h,1,h,h,0,0);i=a[e]|0}else{i=f}if((i&1)==0){a[e]=(g<<1)+2&255;j=b+4|0;k=g+1|0;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}else{e=c[b+8>>2]|0;i=g+1|0;c[b+4>>2]=i;j=e;k=i;l=j+(g<<2)|0;c[l>>2]=d;m=j+(k<<2)|0;c[m>>2]=0;return}}function g_(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if((1073741821-d|0)>>>0<e>>>0){gE(0)}if((a[b]&1)==0){k=b+4|0}else{k=c[b+8>>2]|0}do{if(d>>>0<536870895){l=e+d|0;m=d<<1;n=l>>>0<m>>>0?m:l;if(n>>>0<2){o=2;break}o=n+4&-4}else{o=1073741822}}while(0);e=nS(o<<2)|0;if((g|0)!=0){no(e,k,g)|0}if((i|0)!=0){n=e+(g<<2)|0;no(n,j,i)|0}j=f-h|0;if((j|0)!=(g|0)){f=j-g|0;n=e+(i+g<<2)|0;l=k+(h+g<<2)|0;no(n,l,f)|0}if((d|0)==1){p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}nU(k);p=b+8|0;c[p>>2]=e;q=o|1;r=b|0;c[r>>2]=q;s=j+i|0;t=b+4|0;c[t>>2]=s;u=e+(s<<2)|0;c[u>>2]=0;return}function g$(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;if((1073741821-d|0)>>>0<e>>>0){gE(0)}if((a[b]&1)==0){j=b+4|0}else{j=c[b+8>>2]|0}do{if(d>>>0<536870895){k=e+d|0;l=d<<1;m=k>>>0<l>>>0?l:k;if(m>>>0<2){n=2;break}n=m+4&-4}else{n=1073741822}}while(0);e=nS(n<<2)|0;if((g|0)!=0){no(e,j,g)|0}m=f-h|0;if((m|0)!=(g|0)){f=m-g|0;m=e+(i+g<<2)|0;i=j+(h+g<<2)|0;no(m,i,f)|0}if((d|0)==1){o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}nU(j);o=b+8|0;c[o>>2]=e;p=n|1;q=b|0;c[q>>2]=p;return}function g0(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;g=(c[b+24>>2]|0)==0;if(g){c[b+16>>2]=d|1}else{c[b+16>>2]=d}if(((g&1|d)&c[b+20>>2]|0)==0){i=e;return}e=c9(16)|0;do{if((a[17704]|0)==0){if((bT(17704)|0)==0){break}gr(15584);c[3896]=6e3;bx(112,15584,u|0)|0}}while(0);b=n8(15584,0,32)|0;d=K;c[f>>2]=b&0|1;c[f+4>>2]=d|0;x=0;aJ(20,e|0,f|0,2624);if(!x){c[e>>2]=5136;ca(e|0,11720,40)}else{x=0;f=cu(-1,-1)|0;by(e|0);bk(f|0)}}function g1(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=5112;b=c[a+40>>2]|0;d=a+32|0;e=a+36|0;L2441:do{if((b|0)!=0){f=b;while(1){f=f-1|0;x=0;aJ(c[(c[d>>2]|0)+(f<<2)>>2]|0,0,a|0,c[(c[e>>2]|0)+(f<<2)>>2]|0);if(x){x=0;break}if((f|0)==0){break L2441}}cu(-1,-1,0)|0;cA()}}while(0);lC(a+28|0);nO(c[d>>2]|0);nO(c[e>>2]|0);nO(c[a+48>>2]|0);nO(c[a+60>>2]|0);return}function g2(a){a=a|0;g1(a|0);return}function g3(a,b){a=a|0;b=b|0;lB(a,b+28|0);return}function g4(a,b){a=a|0;b=b|0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;b=a+28|0;n0(a+32|0,0,40);if((b|0)==0){return}lA(b);return}function g5(a){a=a|0;g1(a|0);return}function g6(a){a=a|0;c[a>>2]=6376;lC(a+4|0);nU(a);return}function g7(a){a=a|0;c[a>>2]=6376;lC(a+4|0);return}function g8(a){a=a|0;c[a>>2]=6376;lC(a+4|0);return}function g9(a){a=a|0;c[a>>2]=6376;lA(a+4|0);n0(a+8|0,0,24);return}function ha(a,b){a=a|0;b=b|0;return}function hb(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function hc(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function hd(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function he(a){a=a|0;return 0}function hf(a){a=a|0;return 0}function hg(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;f=b;if((e|0)<=0){g=0;return g|0}h=b+12|0;i=b+16|0;j=d;d=0;while(1){k=c[h>>2]|0;if(k>>>0<(c[i>>2]|0)>>>0){c[h>>2]=k+1;l=a[k]|0}else{k=dz[c[(c[f>>2]|0)+40>>2]&255](b)|0;if((k|0)==-1){g=d;m=1928;break}l=k&255}a[j]=l;k=d+1|0;if((k|0)<(e|0)){j=j+1|0;d=k}else{g=k;m=1929;break}}if((m|0)==1929){return g|0}else if((m|0)==1928){return g|0}return 0}function hh(a){a=a|0;return-1|0}function hi(a){a=a|0;var b=0,e=0;if((dz[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}e=a+12|0;a=c[e>>2]|0;c[e>>2]=a+1;b=d[a]|0;return b|0}function hj(a,b){a=a|0;b=b|0;return-1|0}function hk(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=b;if((f|0)<=0){h=0;return h|0}i=b+24|0;j=b+28|0;k=0;l=e;while(1){e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){m=a[l]|0;c[i>>2]=e+1;a[e]=m}else{if((dM[c[(c[g>>2]|0)+52>>2]&127](b,d[l]|0)|0)==-1){h=k;n=1945;break}}m=k+1|0;if((m|0)<(f|0)){k=m;l=l+1|0}else{h=m;n=1944;break}}if((n|0)==1945){return h|0}else if((n|0)==1944){return h|0}return 0}function hl(a,b){a=a|0;b=b|0;return-1|0}function hm(a){a=a|0;c[a>>2]=6304;lC(a+4|0);nU(a);return}function hn(a){a=a|0;c[a>>2]=6304;lC(a+4|0);return}function ho(a){a=a|0;c[a>>2]=6304;lC(a+4|0);return}function hp(a){a=a|0;c[a>>2]=6304;lA(a+4|0);n0(a+8|0,0,24);return}function hq(a,b){a=a|0;b=b|0;return}function hr(a,b,c){a=a|0;b=b|0;c=c|0;return a|0}function hs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}function ht(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=i;b=d;d=i;i=i+16|0;c[d>>2]=c[b>>2];c[d+4>>2]=c[b+4>>2];c[d+8>>2]=c[b+8>>2];c[d+12>>2]=c[b+12>>2];b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;i=e;return}function hu(a){a=a|0;return 0}function hv(a){a=a|0;return 0}function hw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+12|0;h=a+16|0;i=b;b=0;while(1){j=c[g>>2]|0;if(j>>>0<(c[h>>2]|0)>>>0){c[g>>2]=j+4;k=c[j>>2]|0}else{j=dz[c[(c[e>>2]|0)+40>>2]&255](a)|0;if((j|0)==-1){f=b;l=1966;break}else{k=j}}c[i>>2]=k;j=b+1|0;if((j|0)<(d|0)){i=i+4|0;b=j}else{f=j;l=1965;break}}if((l|0)==1966){return f|0}else if((l|0)==1965){return f|0}return 0}function hx(a){a=a|0;return-1|0}function hy(a){a=a|0;var b=0,d=0;if((dz[c[(c[a>>2]|0)+36>>2]&255](a)|0)==-1){b=-1;return b|0}d=a+12|0;a=c[d>>2]|0;c[d>>2]=a+4;b=c[a>>2]|0;return b|0}function hz(a,b){a=a|0;b=b|0;return-1|0}function hA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a;if((d|0)<=0){f=0;return f|0}g=a+24|0;h=a+28|0;i=0;j=b;while(1){b=c[g>>2]|0;if(b>>>0<(c[h>>2]|0)>>>0){k=c[j>>2]|0;c[g>>2]=b+4;c[b>>2]=k}else{if((dM[c[(c[e>>2]|0)+52>>2]&127](a,c[j>>2]|0)|0)==-1){f=i;l=1982;break}}k=i+1|0;if((k|0)<(d|0)){i=k;j=j+4|0}else{f=k;l=1984;break}}if((l|0)==1984){return f|0}else if((l|0)==1982){return f|0}return 0}function hB(a,b){a=a|0;b=b|0;return-1|0}function hC(a){a=a|0;g1(a+8|0);nU(a);return}function hD(a){a=a|0;g1(a+8|0);return}function hE(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;g1(b+(d+8)|0);nU(b+d|0);return}function hF(a,b){a=a|0;b=b|0;return}function hG(a){a=a|0;g1(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function hH(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;do{if((k|0)==0){l=1995}else{x=0,as(90,k|0)|0;if(!x){l=1995;break}else{x=0}m=cu(-1,-1,0)|0;n=m}}while(0);if((l|0)==1995){a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;m=(x=0,as(c[(c[k>>2]|0)+24>>2]|0,k|0)|0);if(!x){if((m|0)!=-1){break}m=c[(c[f>>2]|0)-12>>2]|0;x=0;aq(100,h+m|0,c[h+(m+16)>>2]|1|0);if(!x){break}else{x=0}}else{x=0}m=cu(-1,-1,0)|0;hV(e);n=m}bW(n|0)|0;m=c[(c[f>>2]|0)-12>>2]|0;k=h+(m+16)|0;c[k>>2]=c[k>>2]|1;if((c[h+(m+20)>>2]&1|0)==0){aU();i=d;return b|0}x=0;aK(2);if(!x){return 0}else{x=0}m=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(m|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}}while(0);hV(e);i=d;return b|0}function hI(a){a=a|0;var b=0;b=a+16|0;c[b>>2]=c[b>>2]|1;if((c[a+20>>2]&1|0)==0){return}else{bd()}}function hJ(a){a=a|0;g1(a+8|0);nU(a);return}function hK(a){a=a|0;g1(a+8|0);return}function hL(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;g1(b+(d+8)|0);nU(b+d|0);return}function hM(a){a=a|0;g1(a+((c[(c[a>>2]|0)-12>>2]|0)+8)|0);return}function hN(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;d=i;i=i+8|0;e=d|0;f=b;g=c[(c[f>>2]|0)-12>>2]|0;h=b;if((c[h+(g+24)>>2]|0)==0){i=d;return b|0}j=e|0;a[j]=0;c[e+4>>2]=b;do{if((c[h+(g+16)>>2]|0)==0){k=c[h+(g+72)>>2]|0;do{if((k|0)==0){l=2023}else{x=0,as(36,k|0)|0;if(!x){l=2023;break}else{x=0}m=cu(-1,-1,0)|0;n=m}}while(0);if((l|0)==2023){a[j]=1;k=c[h+((c[(c[f>>2]|0)-12>>2]|0)+24)>>2]|0;m=(x=0,as(c[(c[k>>2]|0)+24>>2]|0,k|0)|0);if(!x){if((m|0)!=-1){break}m=c[(c[f>>2]|0)-12>>2]|0;x=0;aq(100,h+m|0,c[h+(m+16)>>2]|1|0);if(!x){break}else{x=0}}else{x=0}m=cu(-1,-1,0)|0;h1(e);n=m}bW(n|0)|0;m=c[(c[f>>2]|0)-12>>2]|0;k=h+(m+16)|0;c[k>>2]=c[k>>2]|1;if((c[h+(m+20)>>2]&1|0)==0){aU();i=d;return b|0}x=0;aK(2);if(!x){return 0}else{x=0}m=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(m|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}}while(0);h1(e);i=d;return b|0}function hO(a){a=a|0;g1(a+4|0);nU(a);return}function hP(a){a=a|0;g1(a+4|0);return}function hQ(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;g1(b+(d+4)|0);nU(b+d|0);return}function hR(a,b){a=a|0;b=b|0;return}function hS(a){a=a|0;g1(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function hT(b,d){b=b|0;d=d|0;var e=0,f=0;e=b|0;a[e]=0;c[b+4>>2]=d;b=c[(c[d>>2]|0)-12>>2]|0;f=d;if((c[f+(b+16)>>2]|0)!=0){return}d=c[f+(b+72)>>2]|0;if((d|0)!=0){hH(d)|0}a[e]=1;return}function hU(a){a=a|0;hV(a);return}function hV(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(b$()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;d=(x=0,as(c[(c[e>>2]|0)+24>>2]|0,e|0)|0);do{if(!x){if((d|0)!=-1){return}e=c[b>>2]|0;a=c[(c[e>>2]|0)-12>>2]|0;f=e;x=0;aq(100,f+a|0,c[f+(a+16)>>2]|1|0);if(x){x=0;break}return}else{x=0}}while(0);b=cu(-1,-1,0)|0;bW(b|0)|0;x=0;aK(8);if(!x){return}else{x=0;cu(-1,-1,0)|0;cA()}}function hW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;e=i;i=i+40|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=h|0;a[l]=0;c[h+4>>2]=b;m=b;n=c[(c[m>>2]|0)-12>>2]|0;o=b;do{if((c[o+(n+16)>>2]|0)==0){p=c[o+(n+72)>>2]|0;do{if((p|0)==0){q=2073}else{x=0,as(90,p|0)|0;if(!x){q=2073;break}else{x=0}r=cu(-1,-1,0)|0;s=r}}while(0);if((q|0)==2073){a[l]=1;lB(j,o+((c[(c[m>>2]|0)-12>>2]|0)+28)|0);p=(x=0,aF(62,j|0,16656)|0);if(!x){r=p;lC(j);t=c[(c[m>>2]|0)-12>>2]|0;u=c[o+(t+24)>>2]|0;v=o+t|0;w=o+(t+76)|0;y=c[w>>2]|0;z=y&255;L2661:do{if((y|0)==-1){lB(g,o+(t+28)|0);A=(x=0,aF(62,g|0,17008)|0);do{if(!x){B=(x=0,aF(c[(c[A>>2]|0)+28>>2]|0,A|0,32)|0);if(x){x=0;break}lC(g);c[w>>2]=B<<24>>24;C=B;q=2079;break L2661}else{x=0}}while(0);A=cu(-1,-1,0)|0;B=K;lC(g);D=B;E=A}else{C=z;q=2079}}while(0);if((q|0)==2079){z=c[(c[p>>2]|0)+16>>2]|0;c[f>>2]=u;x=0;ay(z|0,k|0,r|0,f|0,v|0,C|0,d|0);if(!x){if((c[k>>2]|0)!=0){break}z=c[(c[m>>2]|0)-12>>2]|0;x=0;aq(100,o+z|0,c[o+(z+16)>>2]|5|0);if(!x){break}else{x=0}}else{x=0}z=cu(-1,-1,0)|0;D=K;E=z}F=E}else{x=0;z=cu(-1,-1,0)|0;lC(j);F=z}hV(h);s=F}bW(s|0)|0;z=c[(c[m>>2]|0)-12>>2]|0;w=o+(z+16)|0;c[w>>2]=c[w>>2]|1;if((c[o+(z+20)>>2]&1|0)==0){aU();i=e;return b|0}x=0;aK(2);if(!x){return 0}else{x=0}z=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(z|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}}while(0);hV(h);i=e;return b|0}function hX(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;f=i;i=i+8|0;g=f|0;h=g|0;a[h]=0;c[g+4>>2]=b;j=b;k=c[(c[j>>2]|0)-12>>2]|0;l=b;L2689:do{if((c[l+(k+16)>>2]|0)==0){m=c[l+(k+72)>>2]|0;do{if((m|0)==0){n=2101}else{x=0,as(90,m|0)|0;if(!x){n=2101;break}else{x=0}o=cu(-1,-1,0)|0;p=o}}while(0);if((n|0)==2101){a[h]=1;m=c[(c[j>>2]|0)-12>>2]|0;do{if((e|0)==0){x=0;aq(100,l+m|0,c[l+(m+16)>>2]|1|0);if(!x){break L2689}else{x=0;n=2117}}else{o=e;q=c[l+(m+24)>>2]|0;r=0;while(1){s=c[o+12>>2]|0;if((s|0)==(c[o+16>>2]|0)){t=(x=0,as(c[(c[o>>2]|0)+36>>2]|0,o|0)|0);if(!x){u=t}else{x=0;n=2118;break}}else{u=d[s]|0}s=(u|0)==-1?0:o;if((s|0)==0){n=2128;break}t=s+12|0;v=c[t>>2]|0;w=s+16|0;if((v|0)==(c[w>>2]|0)){y=(x=0,as(c[(c[s>>2]|0)+36>>2]|0,s|0)|0);if(x){x=0;n=2118;break}z=y&255}else{z=a[v]|0}if((q|0)==0){n=2128;break}v=q+24|0;y=c[v>>2]|0;if((y|0)==(c[q+28>>2]|0)){A=(x=0,aF(c[(c[q>>2]|0)+52>>2]|0,q|0,z&255|0)|0);if(!x){B=A}else{x=0;n=2118;break}}else{c[v>>2]=y+1;a[y]=z;B=z&255}y=(B|0)==-1?0:q;if((y|0)==0){n=2128;break}v=c[t>>2]|0;if((v|0)==(c[w>>2]|0)){w=c[(c[s>>2]|0)+40>>2]|0;x=0,as(w|0,s|0)|0;if(x){x=0;n=2118;break}}else{c[t>>2]=v+1}o=s;q=y;r=r+1|0}if((n|0)==2118){q=cu(-1,-1,0)|0;C=K;D=q}else if((n|0)==2128){if((r|0)!=0){break L2689}q=c[(c[j>>2]|0)-12>>2]|0;x=0;aq(100,l+q|0,c[l+(q+16)>>2]|4|0);if(!x){break L2689}else{x=0}q=cu(-1,-1,0)|0;C=K;D=q}bW(D|0)|0;q=c[(c[j>>2]|0)-12>>2]|0;o=l+(q+16)|0;c[o>>2]=c[o>>2]|4;if((c[l+(q+20)>>2]&4|0)==0){x=0;aK(8);if(!x){break L2689}else{x=0;n=2117;break}}x=0;aK(2);if(!x){return 0}else{x=0}q=cu(-1,-1,0)|0;x=0;aK(8);if(!x){E=q;break}else{x=0}F=cu(-1,-1,0)|0;G=K;cA();return 0}}while(0);if((n|0)==2117){m=cu(-1,-1,0)|0;E=m}hV(g);p=E}bW(p|0)|0;m=c[(c[j>>2]|0)-12>>2]|0;q=l+(m+16)|0;c[q>>2]=c[q>>2]|1;if((c[l+(m+20)>>2]&1|0)==0){aU();i=f;return b|0}x=0;aK(2);if(!x){return 0}else{x=0}m=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(m|0)}else{x=0;F=cu(-1,-1,0)|0;G=K;cA();return 0}}}while(0);hV(g);i=f;return b|0}function hY(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=i;i=i+8|0;f=e|0;g=f|0;a[g]=0;c[f+4>>2]=b;h=b;j=c[(c[h>>2]|0)-12>>2]|0;k=b;do{if((c[k+(j+16)>>2]|0)==0){l=c[k+(j+72)>>2]|0;do{if((l|0)==0){m=2149}else{x=0,as(90,l|0)|0;if(!x){m=2149;break}else{x=0}n=cu(-1,-1,0)|0;o=n}}while(0);if((m|0)==2149){a[g]=1;l=c[k+((c[(c[h>>2]|0)-12>>2]|0)+24)>>2]|0;n=l;do{if((l|0)==0){p=n;m=2154}else{q=l+24|0;r=c[q>>2]|0;if((r|0)==(c[l+28>>2]|0)){s=(x=0,aF(c[(c[l>>2]|0)+52>>2]|0,n|0,d&255|0)|0);if(!x){t=s}else{x=0;break}}else{c[q>>2]=r+1;a[r]=d;t=d&255}p=(t|0)==-1?0:n;m=2154}}while(0);if((m|0)==2154){if((p|0)!=0){break}n=c[(c[h>>2]|0)-12>>2]|0;x=0;aq(100,k+n|0,c[k+(n+16)>>2]|1|0);if(!x){break}else{x=0}}n=cu(-1,-1,0)|0;hV(f);o=n}bW(o|0)|0;n=c[(c[h>>2]|0)-12>>2]|0;l=k+(n+16)|0;c[l>>2]=c[l>>2]|1;if((c[k+(n+20)>>2]&1|0)==0){aU();i=e;return b|0}x=0;aK(2);if(!x){return 0}else{x=0}n=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(n|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}}while(0);hV(f);i=e;return b|0}function hZ(a){a=a|0;g1(a+4|0);nU(a);return}function h_(a){a=a|0;g1(a+4|0);return}function h$(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;g1(b+(d+4)|0);nU(b+d|0);return}function h0(a){a=a|0;g1(a+((c[(c[a>>2]|0)-12>>2]|0)+4)|0);return}function h1(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;a=c[b>>2]|0;d=c[(c[a>>2]|0)-12>>2]|0;e=a;if((c[e+(d+24)>>2]|0)==0){return}if((c[e+(d+16)>>2]|0)!=0){return}if((c[e+(d+4)>>2]&8192|0)==0){return}if(b$()|0){return}d=c[b>>2]|0;e=c[d+((c[(c[d>>2]|0)-12>>2]|0)+24)>>2]|0;d=(x=0,as(c[(c[e>>2]|0)+24>>2]|0,e|0)|0);do{if(!x){if((d|0)!=-1){return}e=c[b>>2]|0;a=c[(c[e>>2]|0)-12>>2]|0;f=e;x=0;aq(100,f+a|0,c[f+(a+16)>>2]|1|0);if(x){x=0;break}return}else{x=0}}while(0);b=cu(-1,-1,0)|0;bW(b|0)|0;x=0;aK(8);if(!x){return}else{x=0;cu(-1,-1,0)|0;cA()}}function h2(a){a=a|0;g1(a+12|0);nU(a);return}function h3(a){a=a|0;g1(a+12|0);return}function h4(a){a=a|0;var b=0;b=a-92+84|0;g1(b+12|0);nU(b);return}function h5(a){a=a|0;var b=0,d=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;g1(b+(d+12)|0);nU(b+d|0);return}function h6(a,b){a=a|0;b=b|0;return}function h7(a){a=a|0;g1(a-92+96|0);return}function h8(a){a=a|0;g1(a+((c[(c[a>>2]|0)-12>>2]|0)+12)|0);return}function h9(a){a=a|0;return 3096|0}function ia(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)==1){gG(a,3424,35);return}else{gx(a,b|0,c);return}}function ib(a){a=a|0;gt(a|0);return}function ic(a){a=a|0;gB(a|0);nU(a);return}function id(a){a=a|0;gB(a|0);return}function ie(a){a=a|0;g1(a);nU(a);return}function ig(a){a=a|0;gt(a|0);nU(a);return}function ih(a){a=a|0;gd(a|0);nU(a);return}function ii(a){a=a|0;gd(a|0);return}function ij(a){a=a|0;gd(a|0);return}function ik(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L2831:do{if((e|0)==(f|0)){g=c}else{b=c;h=e;while(1){if((b|0)==(d|0)){i=-1;j=2221;break}k=a[b]|0;l=a[h]|0;if(k<<24>>24<l<<24>>24){i=-1;j=2222;break}if(l<<24>>24<k<<24>>24){i=1;j=2220;break}k=b+1|0;l=h+1|0;if((l|0)==(f|0)){g=k;break L2831}else{b=k;h=l}}if((j|0)==2220){return i|0}else if((j|0)==2222){return i|0}else if((j|0)==2221){return i|0}}}while(0);i=(g|0)!=(d|0)|0;return i|0}function il(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;do{if((g|0)==-1){gE(b);h=2227}else{if(g>>>0>=11){h=2227;break}a[b]=g<<1&255;i=b+1|0}}while(0);if((h|0)==2227){h=g+16&-16;j=nS(h)|0;c[b+8>>2]=j;c[b>>2]=h|1;c[b+4>>2]=g;i=j}if((e|0)==(f|0)){k=i;a[k]=0;return}j=f+(-d|0)|0;d=i;g=e;while(1){a[d]=a[g]|0;e=g+1|0;if((e|0)==(f|0)){break}else{d=d+1|0;g=e}}k=i+j|0;a[k]=0;return}function im(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if((c|0)==(d|0)){e=0;return e|0}else{f=c;g=0}while(1){c=(a[f]|0)+(g<<4)|0;b=c&-268435456;h=(b>>>24|b)^c;c=f+1|0;if((c|0)==(d|0)){e=h;break}else{f=c;g=h}}return e|0}function io(a){a=a|0;gd(a|0);nU(a);return}function ip(a){a=a|0;gd(a|0);return}function iq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;L2867:do{if((e|0)==(f|0)){g=b;h=2247}else{a=b;i=e;while(1){if((a|0)==(d|0)){j=-1;break L2867}k=c[a>>2]|0;l=c[i>>2]|0;if((k|0)<(l|0)){j=-1;break L2867}if((l|0)<(k|0)){j=1;break L2867}k=a+4|0;l=i+4|0;if((l|0)==(f|0)){g=k;h=2247;break}else{a=k;i=l}}}}while(0);if((h|0)==2247){j=(g|0)!=(d|0)|0}return j|0}function ir(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;d=e;g=f-d|0;h=g>>2;if(h>>>0>1073741822){gE(b)}if(h>>>0<2){a[b]=g>>>1&255;i=b+4|0}else{g=h+4&-4;j=nS(g<<2)|0;c[b+8>>2]=j;c[b>>2]=g|1;c[b+4>>2]=h;i=j}if((e|0)==(f|0)){k=i;c[k>>2]=0;return}j=(f-4+(-d|0)|0)>>>2;d=i;h=e;while(1){c[d>>2]=c[h>>2];e=h+4|0;if((e|0)==(f|0)){break}else{d=d+4|0;h=e}}k=i+(j+1<<2)|0;c[k>>2]=0;return}function is(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=0;return e|0}else{f=b;g=0}while(1){b=(c[f>>2]|0)+(g<<4)|0;a=b&-268435456;h=(a>>>24|a)^b;b=f+4|0;if((b|0)==(d|0)){e=h;break}else{f=b;g=h}}return e|0}function it(a){a=a|0;gd(a|0);nU(a);return}function iu(a){a=a|0;gd(a|0);return}function iv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];dI[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}g3(r,g);q=r|0;r=c[q>>2]|0;if((c[4252]|0)==-1){y=2276}else{c[m>>2]=17008;c[m+4>>2]=16;c[m+8>>2]=0;x=0;aJ(2,17008,m|0,154);if(!x){y=2276}else{x=0}}do{if((y|0)==2276){m=(c[4253]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[q>>2]|0;gf(n)|0;g3(s,g);n=s|0;p=c[n>>2]|0;if((c[4156]|0)==-1){y=2282}else{c[l>>2]=16624;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,16624,l|0,154);if(!x){y=2282}else{x=0}}do{if((y|0)==2282){d=(c[4157]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){z=c[v+(d<<2)>>2]|0;if((z|0)==0){break}A=z;B=c[n>>2]|0;gf(B)|0;B=t|0;C=z;x=0;aq(c[(c[C>>2]|0)+24>>2]|0,B|0,A|0);do{if(!x){z=t+12|0;x=0;aq(c[(c[C>>2]|0)+28>>2]|0,z|0,A|0);if(x){x=0;D=z;break}c[u>>2]=c[f>>2];z=(x=0,am(4,e|0,u|0,B|0,t+24|0,o|0,h|0,1)|0);if(!x){a[j]=(z|0)==(B|0)|0;c[b>>2]=c[e>>2];gI(t+12|0);gI(t|0);i=k;return}else{x=0;z=cu(-1,-1)|0;E=K;gI(t+12|0);gI(t|0);F=z;G=E;H=F;I=0;J=H;L=G;bk(J|0)}}else{x=0;D=B}}while(0);A=cu(-1,-1)|0;C=A;A=K;if((B|0)==(D|0)){F=C;G=A;H=F;I=0;J=H;L=G;bk(J|0)}else{M=D}while(1){E=M-12|0;gI(E);if((E|0)==(B|0)){F=C;G=A;break}else{M=E}}H=F;I=0;J=H;L=G;bk(J|0)}}while(0);d=c9(4)|0;ns(d);x=0;aJ(12,d|0,11128,210);if(x){x=0;break}}}while(0);o=cu(-1,-1)|0;p=o;o=K;d=c[n>>2]|0;gf(d)|0;F=p;G=o;H=F;I=0;J=H;L=G;bk(J|0)}}while(0);m=c9(4)|0;ns(m);x=0;aJ(12,m|0,11128,210);if(x){x=0;break}}}while(0);M=cu(-1,-1)|0;D=K;gf(c[q>>2]|0)|0;F=M;G=D;H=F;I=0;J=H;L=G;bk(J|0)}function iw(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100){o=nN(m)|0;if((o|0)!=0){p=o;q=o;break}x=0;aK(4);if(!x){p=0;q=0;break}else{x=0}o=cu(-1,-1)|0;r=K;s=o;bk(s|0)}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){t=m;u=0}else{o=m;m=0;v=p;w=f;while(1){y=d[w]|0;if((y&1|0)==0){z=y>>>1}else{z=c[w+4>>2]|0}if((z|0)==0){a[v]=2;A=m+1|0;B=o-1|0}else{a[v]=1;A=m;B=o}y=w+12|0;if((y|0)==(g|0)){t=B;u=A;break}else{o=B;m=A;v=v+1|0;w=y}}}w=b|0;b=e|0;e=h;v=0;A=u;u=t;L2964:while(1){t=c[w>>2]|0;do{if((t|0)==0){C=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){C=t;break}m=(x=0,as(c[(c[t>>2]|0)+36>>2]|0,t|0)|0);if(x){x=0;D=2309;break L2964}if((m|0)==-1){c[w>>2]=0;C=0;break}else{C=c[w>>2]|0;break}}}while(0);t=(C|0)==0;m=c[b>>2]|0;if((m|0)==0){E=C;F=0}else{do{if((c[m+12>>2]|0)==(c[m+16>>2]|0)){B=(x=0,as(c[(c[m>>2]|0)+36>>2]|0,m|0)|0);if(x){x=0;D=2309;break L2964}if((B|0)!=-1){G=m;break}c[b>>2]=0;G=0}else{G=m}}while(0);E=c[w>>2]|0;F=G}H=(F|0)==0;if(!((t^H)&(u|0)!=0)){D=2384;break}m=c[E+12>>2]|0;if((m|0)==(c[E+16>>2]|0)){B=(x=0,as(c[(c[E>>2]|0)+36>>2]|0,E|0)|0);if(x){x=0;D=2309;break}I=B&255}else{I=a[m]|0}if(k){J=I}else{m=(x=0,aF(c[(c[e>>2]|0)+12>>2]|0,h|0,I|0)|0);if(!x){J=m}else{x=0;D=2309;break}}do{if(n){L=A;M=u}else{m=v+1|0;L2993:do{if(k){B=u;o=A;z=p;y=0;N=f;while(1){do{if((a[z]|0)==1){O=N;if((a[O]&1)==0){P=N+1|0}else{P=c[N+8>>2]|0}if(J<<24>>24!=(a[P+v|0]|0)){a[z]=0;Q=y;R=o;S=B-1|0;break}T=d[O]|0;if((T&1|0)==0){U=T>>>1}else{U=c[N+4>>2]|0}if((U|0)!=(m|0)){Q=1;R=o;S=B;break}a[z]=2;Q=1;R=o+1|0;S=B-1|0}else{Q=y;R=o;S=B}}while(0);T=N+12|0;if((T|0)==(g|0)){V=S;W=R;X=Q;break L2993}B=S;o=R;z=z+1|0;y=Q;N=T}}else{N=u;y=A;z=p;o=0;B=f;while(1){do{if((a[z]|0)==1){T=B;if((a[T]&1)==0){Y=B+1|0}else{Y=c[B+8>>2]|0}O=(x=0,aF(c[(c[e>>2]|0)+12>>2]|0,h|0,a[Y+v|0]|0)|0);if(x){x=0;D=2308;break L2964}if(J<<24>>24!=O<<24>>24){a[z]=0;Z=o;_=y;$=N-1|0;break}O=d[T]|0;if((O&1|0)==0){aa=O>>>1}else{aa=c[B+4>>2]|0}if((aa|0)!=(m|0)){Z=1;_=y;$=N;break}a[z]=2;Z=1;_=y+1|0;$=N-1|0}else{Z=o;_=y;$=N}}while(0);O=B+12|0;if((O|0)==(g|0)){V=$;W=_;X=Z;break L2993}N=$;y=_;z=z+1|0;o=Z;B=O}}}while(0);if(!X){L=W;M=V;break}m=c[w>>2]|0;B=m+12|0;o=c[B>>2]|0;if((o|0)==(c[m+16>>2]|0)){z=c[(c[m>>2]|0)+40>>2]|0;x=0,as(z|0,m|0)|0;if(x){x=0;D=2309;break L2964}}else{c[B>>2]=o+1}if((W+V|0)>>>0<2|n){L=W;M=V;break}o=v+1|0;B=W;m=p;z=f;while(1){do{if((a[m]|0)==2){y=d[z]|0;if((y&1|0)==0){ab=y>>>1}else{ab=c[z+4>>2]|0}if((ab|0)==(o|0)){ac=B;break}a[m]=0;ac=B-1|0}else{ac=B}}while(0);y=z+12|0;if((y|0)==(g|0)){L=ac;M=V;break}else{B=ac;m=m+1|0;z=y}}}}while(0);v=v+1|0;A=L;u=M}if((D|0)==2308){M=cu(-1,-1)|0;ad=K;ae=M}else if((D|0)==2309){M=cu(-1,-1)|0;ad=K;ae=M}else if((D|0)==2384){do{if((E|0)==0){af=0;D=2390}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){af=E;D=2390;break}M=(x=0,as(c[(c[E>>2]|0)+36>>2]|0,E|0)|0);if(x){x=0;break}if((M|0)==-1){c[w>>2]=0;af=0;D=2390;break}else{af=c[w>>2]|0;D=2390;break}}}while(0);L3060:do{if((D|0)==2390){w=(af|0)==0;do{if(H){D=2396}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){if(w){break}else{D=2398;break}}E=(x=0,as(c[(c[F>>2]|0)+36>>2]|0,F|0)|0);if(x){x=0;break L3060}if((E|0)==-1){c[b>>2]=0;D=2396;break}else{if(w^(F|0)==0){break}else{D=2398;break}}}}while(0);if((D|0)==2396){if(w){D=2398}}if((D|0)==2398){c[j>>2]=c[j>>2]|2}L3076:do{if(n){D=2403}else{E=f;M=p;while(1){if((a[M]|0)==2){ag=E;break L3076}u=E+12|0;if((u|0)==(g|0)){D=2403;break L3076}E=u;M=M+1|0}}}while(0);if((D|0)==2403){c[j>>2]=c[j>>2]|4;ag=g}if((q|0)==0){i=l;return ag|0}nO(q);i=l;return ag|0}}while(0);ag=cu(-1,-1)|0;ad=K;ae=ag}if((q|0)==0){r=ad;s=ae;bk(s|0)}nO(q);r=ad;s=ae;bk(s|0);return 0}function ix(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==8){v=16}else if((u|0)==64){v=8}else{v=10}u=l|0;iy(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L3100:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=a[m]|0;F=w;G=c[A>>2]|0;L3106:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}I=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(x){x=0;J=2446;break L3106}if((I|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);L=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=2433}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(L){M=I;N=0;break}else{O=F;P=I;Q=0;break L3106}}R=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(x){x=0;J=2446;break L3106}if((R|0)==-1){c[B>>2]=0;J=2433;break}else{R=(I|0)==0;if(L^R){M=I;N=R;break}else{O=F;P=I;Q=R;break L3106}}}}while(0);if((J|0)==2433){J=0;if(L){O=F;P=0;Q=1;break}else{M=0;N=1}}I=d[p]|0;R=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((R?I>>>1:c[D>>2]|0)|0)){if(R){S=I>>>1;T=I>>>1}else{I=c[D>>2]|0;S=I;T=I}x=0;aJ(34,o|0,S<<1|0,0);if(x){x=0;J=2446;break}if((a[p]&1)==0){U=10}else{U=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,U|0,0);if(x){x=0;J=2446;break}if((a[p]&1)==0){V=y}else{V=c[z>>2]|0}c[q>>2]=V+T;W=V}else{W=F}I=H+12|0;R=c[I>>2]|0;X=H+16|0;if((R|0)==(c[X>>2]|0)){Y=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;J=2446;break}Z=Y&255}else{Z=a[R]|0}if((iz(Z,v,W,q,t,E,n,l,s,u)|0)!=0){O=W;P=M;Q=N;break}R=c[I>>2]|0;if((R|0)==(c[X>>2]|0)){X=c[(c[H>>2]|0)+40>>2]|0;x=0,as(X|0,H|0)|0;if(!x){F=W;G=H;continue}else{x=0;J=2446;break}}else{c[I>>2]=R+1;F=W;G=H;continue}}if((J|0)==2446){G=cu(-1,-1)|0;_=K;$=G;gI(o);gI(n);bk($|0)}G=d[n]|0;if((G&1|0)==0){aa=G>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(18,O|0,c[q>>2]|0,j|0,v|0)|0);if(x){x=0;break}c[k>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(L){ab=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ab=H;break}F=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;break L3100}if((F|0)!=-1){ab=H;break}c[A>>2]=0;ab=0}}while(0);A=(ab|0)==0;L3169:do{if(Q){J=2474}else{do{if((c[P+12>>2]|0)==(c[P+16>>2]|0)){l=(x=0,as(c[(c[P>>2]|0)+36>>2]|0,P|0)|0);if(x){x=0;break L3100}if((l|0)!=-1){break}c[B>>2]=0;J=2474;break L3169}}while(0);if(!(A^(P|0)==0)){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);do{if((J|0)==2474){if(A){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;_=K;$=e;gI(o);gI(n);bk($|0)}function iy(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;g3(k,d);d=k|0;k=c[d>>2]|0;if((c[4252]|0)==-1){l=2485}else{c[j>>2]=17008;c[j+4>>2]=16;c[j+8>>2]=0;x=0;aJ(2,17008,j|0,154);if(!x){l=2485}else{x=0}}L3187:do{if((l|0)==2485){j=(c[4253]|0)-1|0;m=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-m>>2>>>0>j>>>0){n=c[m+(j<<2)>>2]|0;if((n|0)==0){break}o=n;p=c[(c[n>>2]|0)+32>>2]|0;x=0,aM(p|0,o|0,13096,13122,e|0)|0;if(x){x=0;break L3187}o=c[d>>2]|0;if((c[4156]|0)!=-1){c[h>>2]=16624;c[h+4>>2]=16;c[h+8>>2]=0;x=0;aJ(2,16624,h|0,154);if(x){x=0;break L3187}}p=(c[4157]|0)-1|0;n=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-n>>2>>>0>p>>>0){q=c[n+(p<<2)>>2]|0;if((q|0)==0){break}r=q;s=(x=0,as(c[(c[q>>2]|0)+16>>2]|0,r|0)|0);if(x){x=0;break L3187}a[f]=s;x=0;aq(c[(c[q>>2]|0)+20>>2]|0,b|0,r|0);if(x){x=0;break L3187}r=c[d>>2]|0;gf(r)|0;i=g;return}}while(0);p=c9(4)|0;ns(p);x=0;aJ(12,p|0,11128,210);if(x){x=0;break L3187}}}while(0);j=c9(4)|0;ns(j);x=0;aJ(12,j|0,11128,210);if(x){x=0;break}}}while(0);g=cu(-1,-1)|0;gf(c[d>>2]|0)|0;bk(g|0)}function iz(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(a[m+24|0]|0)==b<<24>>24;if(!p){if((a[m+25|0]|0)!=b<<24>>24){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&b<<24>>24==i<<24>>24){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+26|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((a[i]|0)==b<<24>>24){s=i;break}else{i=i+1|0}}i=s-m|0;if((i|0)>23){q=-1;return q|0}do{if((e|0)==16){if((i|0)<22){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;m=a[13096+i|0]|0;s=c[g>>2]|0;c[g>>2]=s+1;a[s]=m;q=0;return q|0}else if((e|0)==8|(e|0)==10){if((i|0)<(e|0)){break}else{q=-1}return q|0}}while(0);e=a[13096+i|0]|0;c[g>>2]=n+1;a[n]=e;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function iA(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}k=bt()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}m=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=m;break}else{x=0;m=cu(-1,-1)|0;bk(m|0)}}}while(0);m=c_(b|0,h|0,f|0,c[3894]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=-1;h=0;if((b|0)==34|((f|0)<(d|0)|(f|0)==(d|0)&m>>>0<-2147483648>>>0)|((f|0)>(h|0)|(f|0)==(h|0)&m>>>0>2147483647>>>0)){c[e>>2]=4;e=0;j=(f|0)>(e|0)|(f|0)==(e|0)&m>>>0>0>>>0?2147483647:-2147483648;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function iB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;g=b;h=b;i=a[h]|0;j=i&255;if((j&1|0)==0){k=j>>>1}else{k=c[b+4>>2]|0}if((k|0)==0){return}do{if((d|0)==(e|0)){l=i}else{k=e-4|0;if(k>>>0>d>>>0){m=d;n=k}else{l=i;break}do{k=c[m>>2]|0;c[m>>2]=c[n>>2];c[n>>2]=k;m=m+4|0;n=n-4|0;}while(m>>>0<n>>>0);l=a[h]|0}}while(0);if((l&1)==0){o=g+1|0}else{o=c[b+8>>2]|0}g=l&255;if((g&1|0)==0){p=g>>>1}else{p=c[b+4>>2]|0}b=e-4|0;e=a[o]|0;g=e<<24>>24;l=e<<24>>24<1|e<<24>>24==127;L3295:do{if(b>>>0>d>>>0){e=o+p|0;h=o;n=d;m=g;i=l;while(1){if(!i){if((m|0)!=(c[n>>2]|0)){break}}k=(e-h|0)>1?h+1|0:h;j=n+4|0;q=a[k]|0;r=q<<24>>24;s=q<<24>>24<1|q<<24>>24==127;if(j>>>0<b>>>0){h=k;n=j;m=r;i=s}else{t=r;u=s;break L3295}}c[f>>2]=4;return}else{t=g;u=l}}while(0);if(u){return}u=c[b>>2]|0;if(!(t>>>0<u>>>0|(u|0)==0)){return}c[f>>2]=4;return}function iC(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}u=l|0;iy(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L3318:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=a[m]|0;F=w;G=c[A>>2]|0;L3324:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}I=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(x){x=0;J=2614;break L3324}if((I|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);L=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=2601}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(L){M=I;N=0;break}else{O=F;P=I;Q=0;break L3324}}R=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(x){x=0;J=2614;break L3324}if((R|0)==-1){c[B>>2]=0;J=2601;break}else{R=(I|0)==0;if(L^R){M=I;N=R;break}else{O=F;P=I;Q=R;break L3324}}}}while(0);if((J|0)==2601){J=0;if(L){O=F;P=0;Q=1;break}else{M=0;N=1}}I=d[p]|0;R=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((R?I>>>1:c[D>>2]|0)|0)){if(R){S=I>>>1;T=I>>>1}else{I=c[D>>2]|0;S=I;T=I}x=0;aJ(34,o|0,S<<1|0,0);if(x){x=0;J=2614;break}if((a[p]&1)==0){U=10}else{U=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,U|0,0);if(x){x=0;J=2614;break}if((a[p]&1)==0){V=y}else{V=c[z>>2]|0}c[q>>2]=V+T;W=V}else{W=F}I=H+12|0;R=c[I>>2]|0;X=H+16|0;if((R|0)==(c[X>>2]|0)){Y=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;J=2614;break}Z=Y&255}else{Z=a[R]|0}if((iz(Z,v,W,q,t,E,n,l,s,u)|0)!=0){O=W;P=M;Q=N;break}R=c[I>>2]|0;if((R|0)==(c[X>>2]|0)){X=c[(c[H>>2]|0)+40>>2]|0;x=0,as(X|0,H|0)|0;if(!x){F=W;G=H;continue}else{x=0;J=2614;break}}else{c[I>>2]=R+1;F=W;G=H;continue}}if((J|0)==2614){G=cu(-1,-1)|0;_=K;$=G;gI(o);gI(n);bk($|0)}G=d[n]|0;if((G&1|0)==0){aa=G>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(10,O|0,c[q>>2]|0,j|0,v|0)|0);G=F;F=K;if(x){x=0;break}c[k>>2]=G;c[k+4>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(L){ab=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ab=H;break}F=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;break L3318}if((F|0)!=-1){ab=H;break}c[A>>2]=0;ab=0}}while(0);A=(ab|0)==0;L3387:do{if(Q){J=2642}else{do{if((c[P+12>>2]|0)==(c[P+16>>2]|0)){l=(x=0,as(c[(c[P>>2]|0)+36>>2]|0,P|0)|0);if(x){x=0;break L3318}if((l|0)!=-1){break}c[B>>2]=0;J=2642;break L3387}}while(0);if(!(A^(P|0)==0)){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);do{if((J|0)==2642){if(A){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;_=K;$=e;gI(o);gI(n);bk($|0)}function iD(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}l=bt()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}n=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=n;break}else{x=0;n=cu(-1,-1)|0;bk(n|0)}}}while(0);n=c_(b|0,h|0,f|0,c[3894]|0)|0;f=K;b=c[l>>2]|0;if((b|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;i=g;return(K=j,k)|0}if((b|0)!=34){j=f;k=n;i=g;return(K=j,k)|0}c[e>>2]=4;e=0;b=(f|0)>(e|0)|(f|0)==(e|0)&n>>>0>0>>>0;j=b?2147483647:-2147483648;k=b?-1:0;i=g;return(K=j,k)|0}function iE(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0;f=i;i=i+72|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+32|0;o=f+40|0;p=f+56|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==64){w=8}else if((v|0)==0){w=0}else if((v|0)==8){w=16}else{w=10}v=m|0;iy(o,j,v,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L3431:do{if(!x){if((a[q]&1)==0){m=j+1|0;y=m;z=m;A=p+8|0}else{m=p+8|0;y=c[m>>2]|0;z=j+1|0;A=m}c[r>>2]=y;m=s|0;c[t>>2]=m;c[u>>2]=0;B=g|0;C=h|0;D=p|0;E=p+4|0;F=a[n]|0;G=y;H=c[B>>2]|0;L3437:while(1){do{if((H|0)==0){I=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){I=H;break}J=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;L=2702;break L3437}if((J|0)!=-1){I=H;break}c[B>>2]=0;I=0}}while(0);M=(I|0)==0;J=c[C>>2]|0;do{if((J|0)==0){L=2689}else{if((c[J+12>>2]|0)!=(c[J+16>>2]|0)){if(M){N=J;O=0;break}else{P=G;Q=J;R=0;break L3437}}S=(x=0,as(c[(c[J>>2]|0)+36>>2]|0,J|0)|0);if(x){x=0;L=2702;break L3437}if((S|0)==-1){c[C>>2]=0;L=2689;break}else{S=(J|0)==0;if(M^S){N=J;O=S;break}else{P=G;Q=J;R=S;break L3437}}}}while(0);if((L|0)==2689){L=0;if(M){P=G;Q=0;R=1;break}else{N=0;O=1}}J=d[q]|0;S=(J&1|0)==0;if(((c[r>>2]|0)-G|0)==((S?J>>>1:c[E>>2]|0)|0)){if(S){T=J>>>1;U=J>>>1}else{J=c[E>>2]|0;T=J;U=J}x=0;aJ(34,p|0,T<<1|0,0);if(x){x=0;L=2702;break}if((a[q]&1)==0){V=10}else{V=(c[D>>2]&-2)-1|0}x=0;aJ(34,p|0,V|0,0);if(x){x=0;L=2702;break}if((a[q]&1)==0){W=z}else{W=c[A>>2]|0}c[r>>2]=W+U;X=W}else{X=G}J=I+12|0;S=c[J>>2]|0;Y=I+16|0;if((S|0)==(c[Y>>2]|0)){Z=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(x){x=0;L=2702;break}_=Z&255}else{_=a[S]|0}if((iz(_,w,X,r,u,F,o,m,t,v)|0)!=0){P=X;Q=N;R=O;break}S=c[J>>2]|0;if((S|0)==(c[Y>>2]|0)){Y=c[(c[I>>2]|0)+40>>2]|0;x=0,as(Y|0,I|0)|0;if(!x){G=X;H=I;continue}else{x=0;L=2702;break}}else{c[J>>2]=S+1;G=X;H=I;continue}}if((L|0)==2702){H=cu(-1,-1)|0;$=K;aa=H;gI(p);gI(o);bk(aa|0)}H=d[o]|0;if((H&1|0)==0){ab=H>>>1}else{ab=c[o+4>>2]|0}do{if((ab|0)!=0){H=c[t>>2]|0;if((H-s|0)>=160){break}G=c[u>>2]|0;c[t>>2]=H+4;c[H>>2]=G}}while(0);G=(x=0,aM(14,P|0,c[r>>2]|0,k|0,w|0)|0);if(x){x=0;break}b[l>>1]=G;iB(o,m,c[t>>2]|0,k);do{if(M){ac=0}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){ac=I;break}G=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(x){x=0;break L3431}if((G|0)!=-1){ac=I;break}c[B>>2]=0;ac=0}}while(0);B=(ac|0)==0;L3500:do{if(R){L=2730}else{do{if((c[Q+12>>2]|0)==(c[Q+16>>2]|0)){m=(x=0,as(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0);if(x){x=0;break L3431}if((m|0)!=-1){break}c[C>>2]=0;L=2730;break L3500}}while(0);if(!(B^(Q|0)==0)){break}ad=e|0;c[ad>>2]=ac;gI(p);gI(o);i=f;return}}while(0);do{if((L|0)==2730){if(B){break}ad=e|0;c[ad>>2]=ac;gI(p);gI(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;ad=e|0;c[ad>>2]=ac;gI(p);gI(o);i=f;return}else{x=0}}while(0);f=cu(-1,-1)|0;$=K;aa=f;gI(p);gI(o);bk(aa|0)}function iF(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=bt()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}m=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=m;break}else{x=0;m=cu(-1,-1)|0;bk(m|0)}}}while(0);m=b8(b|0,h|0,f|0,c[3894]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>65535>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m&65535;i=g;return j|0}return 0}function iG(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==64){v=8}else if((u|0)==0){v=0}else if((u|0)==8){v=16}else{v=10}u=l|0;iy(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L3549:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=a[m]|0;F=w;G=c[A>>2]|0;L3555:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}I=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(x){x=0;J=2794;break L3555}if((I|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);L=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=2781}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(L){M=I;N=0;break}else{O=F;P=I;Q=0;break L3555}}R=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(x){x=0;J=2794;break L3555}if((R|0)==-1){c[B>>2]=0;J=2781;break}else{R=(I|0)==0;if(L^R){M=I;N=R;break}else{O=F;P=I;Q=R;break L3555}}}}while(0);if((J|0)==2781){J=0;if(L){O=F;P=0;Q=1;break}else{M=0;N=1}}I=d[p]|0;R=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((R?I>>>1:c[D>>2]|0)|0)){if(R){S=I>>>1;T=I>>>1}else{I=c[D>>2]|0;S=I;T=I}x=0;aJ(34,o|0,S<<1|0,0);if(x){x=0;J=2794;break}if((a[p]&1)==0){U=10}else{U=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,U|0,0);if(x){x=0;J=2794;break}if((a[p]&1)==0){V=y}else{V=c[z>>2]|0}c[q>>2]=V+T;W=V}else{W=F}I=H+12|0;R=c[I>>2]|0;X=H+16|0;if((R|0)==(c[X>>2]|0)){Y=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;J=2794;break}Z=Y&255}else{Z=a[R]|0}if((iz(Z,v,W,q,t,E,n,l,s,u)|0)!=0){O=W;P=M;Q=N;break}R=c[I>>2]|0;if((R|0)==(c[X>>2]|0)){X=c[(c[H>>2]|0)+40>>2]|0;x=0,as(X|0,H|0)|0;if(!x){F=W;G=H;continue}else{x=0;J=2794;break}}else{c[I>>2]=R+1;F=W;G=H;continue}}if((J|0)==2794){G=cu(-1,-1)|0;_=K;$=G;gI(o);gI(n);bk($|0)}G=d[n]|0;if((G&1|0)==0){aa=G>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(8,O|0,c[q>>2]|0,j|0,v|0)|0);if(x){x=0;break}c[k>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(L){ab=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ab=H;break}F=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;break L3549}if((F|0)!=-1){ab=H;break}c[A>>2]=0;ab=0}}while(0);A=(ab|0)==0;L3618:do{if(Q){J=2822}else{do{if((c[P+12>>2]|0)==(c[P+16>>2]|0)){l=(x=0,as(c[(c[P>>2]|0)+36>>2]|0,P|0)|0);if(x){x=0;break L3549}if((l|0)!=-1){break}c[B>>2]=0;J=2822;break L3618}}while(0);if(!(A^(P|0)==0)){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);do{if((J|0)==2822){if(A){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;_=K;$=e;gI(o);gI(n);bk($|0)}function iH(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=bt()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}m=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=m;break}else{x=0;m=cu(-1,-1)|0;bk(m|0)}}}while(0);m=b8(b|0,h|0,f|0,c[3894]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function iI(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;iy(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L6:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=a[m]|0;F=w;G=c[A>>2]|0;L12:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}I=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(x){x=0;J=34;break L12}if((I|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);L=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=21}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(L){M=I;N=0;break}else{O=F;P=I;Q=0;break L12}}R=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(x){x=0;J=34;break L12}if((R|0)==-1){c[B>>2]=0;J=21;break}else{R=(I|0)==0;if(L^R){M=I;N=R;break}else{O=F;P=I;Q=R;break L12}}}}while(0);if((J|0)==21){J=0;if(L){O=F;P=0;Q=1;break}else{M=0;N=1}}I=d[p]|0;R=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((R?I>>>1:c[D>>2]|0)|0)){if(R){S=I>>>1;T=I>>>1}else{I=c[D>>2]|0;S=I;T=I}x=0;aJ(34,o|0,S<<1|0,0);if(x){x=0;J=34;break}if((a[p]&1)==0){U=10}else{U=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,U|0,0);if(x){x=0;J=34;break}if((a[p]&1)==0){V=y}else{V=c[z>>2]|0}c[q>>2]=V+T;W=V}else{W=F}I=H+12|0;R=c[I>>2]|0;X=H+16|0;if((R|0)==(c[X>>2]|0)){Y=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;J=34;break}Z=Y&255}else{Z=a[R]|0}if((iz(Z,v,W,q,t,E,n,l,s,u)|0)!=0){O=W;P=M;Q=N;break}R=c[I>>2]|0;if((R|0)==(c[X>>2]|0)){X=c[(c[H>>2]|0)+40>>2]|0;x=0,as(X|0,H|0)|0;if(!x){F=W;G=H;continue}else{x=0;J=34;break}}else{c[I>>2]=R+1;F=W;G=H;continue}}if((J|0)==34){G=cu(-1,-1)|0;_=K;$=G;gI(o);gI(n);bk($|0)}G=d[n]|0;if((G&1|0)==0){aa=G>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(22,O|0,c[q>>2]|0,j|0,v|0)|0);if(x){x=0;break}c[k>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(L){ab=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ab=H;break}F=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;break L6}if((F|0)!=-1){ab=H;break}c[A>>2]=0;ab=0}}while(0);A=(ab|0)==0;L75:do{if(Q){J=62}else{do{if((c[P+12>>2]|0)==(c[P+16>>2]|0)){l=(x=0,as(c[(c[P>>2]|0)+36>>2]|0,P|0)|0);if(x){x=0;break L6}if((l|0)!=-1){break}c[B>>2]=0;J=62;break L75}}while(0);if(!(A^(P|0)==0)){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);do{if((J|0)==62){if(A){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;_=K;$=e;gI(o);gI(n);bk($|0)}function iJ(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0;g=i;i=i+8|0;h=g|0;if((b|0)==(d|0)){c[e>>2]=4;j=0;i=g;return j|0}if((a[b]|0)==45){c[e>>2]=4;j=0;i=g;return j|0}k=bt()|0;l=c[k>>2]|0;c[k>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}m=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=m;break}else{x=0;m=cu(-1,-1)|0;bk(m|0)}}}while(0);m=b8(b|0,h|0,f|0,c[3894]|0)|0;f=K;b=c[k>>2]|0;if((b|0)==0){c[k>>2]=l}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;i=g;return j|0}d=0;if((b|0)==34|(f>>>0>d>>>0|f>>>0==d>>>0&m>>>0>-1>>>0)){c[e>>2]=4;j=-1;i=g;return j|0}else{j=m;i=g;return j|0}return 0}function iK(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0;e=i;i=i+72|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+32|0;n=e+40|0;o=e+56|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;iy(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L124:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=a[m]|0;F=w;G=c[A>>2]|0;L130:while(1){do{if((G|0)==0){H=0}else{if((c[G+12>>2]|0)!=(c[G+16>>2]|0)){H=G;break}I=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(x){x=0;J=126;break L130}if((I|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);L=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){J=113}else{if((c[I+12>>2]|0)!=(c[I+16>>2]|0)){if(L){M=I;N=0;break}else{O=F;P=I;Q=0;break L130}}R=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(x){x=0;J=126;break L130}if((R|0)==-1){c[B>>2]=0;J=113;break}else{R=(I|0)==0;if(L^R){M=I;N=R;break}else{O=F;P=I;Q=R;break L130}}}}while(0);if((J|0)==113){J=0;if(L){O=F;P=0;Q=1;break}else{M=0;N=1}}I=d[p]|0;R=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((R?I>>>1:c[D>>2]|0)|0)){if(R){S=I>>>1;T=I>>>1}else{I=c[D>>2]|0;S=I;T=I}x=0;aJ(34,o|0,S<<1|0,0);if(x){x=0;J=126;break}if((a[p]&1)==0){U=10}else{U=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,U|0,0);if(x){x=0;J=126;break}if((a[p]&1)==0){V=y}else{V=c[z>>2]|0}c[q>>2]=V+T;W=V}else{W=F}I=H+12|0;R=c[I>>2]|0;X=H+16|0;if((R|0)==(c[X>>2]|0)){Y=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;J=126;break}Z=Y&255}else{Z=a[R]|0}if((iz(Z,v,W,q,t,E,n,l,s,u)|0)!=0){O=W;P=M;Q=N;break}R=c[I>>2]|0;if((R|0)==(c[X>>2]|0)){X=c[(c[H>>2]|0)+40>>2]|0;x=0,as(X|0,H|0)|0;if(!x){F=W;G=H;continue}else{x=0;J=126;break}}else{c[I>>2]=R+1;F=W;G=H;continue}}if((J|0)==126){G=cu(-1,-1)|0;_=K;$=G;gI(o);gI(n);bk($|0)}G=d[n]|0;if((G&1|0)==0){aa=G>>>1}else{aa=c[n+4>>2]|0}do{if((aa|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(28,O|0,c[q>>2]|0,j|0,v|0)|0);G=F;F=K;if(x){x=0;break}c[k>>2]=G;c[k+4>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(L){ab=0}else{if((c[H+12>>2]|0)!=(c[H+16>>2]|0)){ab=H;break}F=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(x){x=0;break L124}if((F|0)!=-1){ab=H;break}c[A>>2]=0;ab=0}}while(0);A=(ab|0)==0;L193:do{if(Q){J=154}else{do{if((c[P+12>>2]|0)==(c[P+16>>2]|0)){l=(x=0,as(c[(c[P>>2]|0)+36>>2]|0,P|0)|0);if(x){x=0;break L124}if((l|0)!=-1){break}c[B>>2]=0;J=154;break L193}}while(0);if(!(A^(P|0)==0)){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);do{if((J|0)==154){if(A){break}ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ac=b|0;c[ac>>2]=ab;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;_=K;$=e;gI(o);gI(n);bk($|0)}function iL(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;g=i;i=i+8|0;h=g|0;do{if((b|0)==(d|0)){c[e>>2]=4;j=0;k=0}else{if((a[b]|0)==45){c[e>>2]=4;j=0;k=0;break}l=bt()|0;m=c[l>>2]|0;c[l>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}n=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=n;break}else{x=0;n=cu(-1,-1)|0;bk(n|0)}}}while(0);n=b8(b|0,h|0,f|0,c[3894]|0)|0;o=c[l>>2]|0;if((o|0)==0){c[l>>2]=m}if((c[h>>2]|0)!=(d|0)){c[e>>2]=4;j=0;k=0;break}if((o|0)!=34){j=K;k=n;break}c[e>>2]=4;j=-1;k=-1}}while(0);i=g;return(K=j,k)|0}function iM(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0.0,ag=0,ah=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;y=e|0;iN(o,j,y,m,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L231:do{if(!x){if((a[q]&1)==0){z=j+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=j+1|0;C=z}c[r>>2]=A;z=s|0;c[t>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f|0;E=h|0;F=p|0;G=p+4|0;H=a[m]|0;I=a[n]|0;J=A;L=c[D>>2]|0;L237:while(1){do{if((L|0)==0){M=0}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){M=L;break}N=(x=0,as(c[(c[L>>2]|0)+36>>2]|0,L|0)|0);if(x){x=0;O=208;break L237}if((N|0)!=-1){M=L;break}c[D>>2]=0;M=0}}while(0);P=(M|0)==0;N=c[E>>2]|0;do{if((N|0)==0){O=195}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(P){Q=N;R=0;break}else{S=J;T=N;U=0;break L237}}V=(x=0,as(c[(c[N>>2]|0)+36>>2]|0,N|0)|0);if(x){x=0;O=208;break L237}if((V|0)==-1){c[E>>2]=0;O=195;break}else{V=(N|0)==0;if(P^V){Q=N;R=V;break}else{S=J;T=N;U=V;break L237}}}}while(0);if((O|0)==195){O=0;if(P){S=J;T=0;U=1;break}else{Q=0;R=1}}N=d[q]|0;V=(N&1|0)==0;if(((c[r>>2]|0)-J|0)==((V?N>>>1:c[G>>2]|0)|0)){if(V){W=N>>>1;X=N>>>1}else{N=c[G>>2]|0;W=N;X=N}x=0;aJ(34,p|0,W<<1|0,0);if(x){x=0;O=208;break}if((a[q]&1)==0){Y=10}else{Y=(c[F>>2]&-2)-1|0}x=0;aJ(34,p|0,Y|0,0);if(x){x=0;O=208;break}if((a[q]&1)==0){Z=B}else{Z=c[C>>2]|0}c[r>>2]=Z+X;_=Z}else{_=J}N=M+12|0;V=c[N>>2]|0;$=M+16|0;if((V|0)==(c[$>>2]|0)){aa=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(x){x=0;O=208;break}ab=aa&255}else{ab=a[V]|0}if((iO(ab,v,w,_,r,H,I,o,z,t,u,y)|0)!=0){S=_;T=Q;U=R;break}V=c[N>>2]|0;if((V|0)==(c[$>>2]|0)){$=c[(c[M>>2]|0)+40>>2]|0;x=0,as($|0,M|0)|0;if(!x){J=_;L=M;continue}else{x=0;O=208;break}}else{c[N>>2]=V+1;J=_;L=M;continue}}if((O|0)==208){L=cu(-1,-1)|0;ac=K;ad=L;gI(p);gI(o);bk(ad|0)}L=d[o]|0;if((L&1|0)==0){ae=L>>>1}else{ae=c[o+4>>2]|0}do{if((ae|0)!=0){if((a[v]&1)==0){break}L=c[t>>2]|0;if((L-s|0)>=160){break}J=c[u>>2]|0;c[t>>2]=L+4;c[L>>2]=J}}while(0);af=(x=0,+(+az(6,S|0,c[r>>2]|0,k|0)));if(x){x=0;break}g[l>>2]=af;iB(o,z,c[t>>2]|0,k);do{if(P){ag=0}else{if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){ag=M;break}J=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(x){x=0;break L231}if((J|0)!=-1){ag=M;break}c[D>>2]=0;ag=0}}while(0);D=(ag|0)==0;L301:do{if(U){O=237}else{do{if((c[T+12>>2]|0)==(c[T+16>>2]|0)){z=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(x){x=0;break L231}if((z|0)!=-1){break}c[E>>2]=0;O=237;break L301}}while(0);if(!(D^(T|0)==0)){break}ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}}while(0);do{if((O|0)==237){if(D){break}ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;ac=K;ad=e;gI(p);gI(o);bk(ad|0)}function iN(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;h=i;i=i+40|0;j=h|0;k=h+16|0;l=h+32|0;g3(l,d);d=l|0;l=c[d>>2]|0;if((c[4252]|0)==-1){m=248}else{c[k>>2]=17008;c[k+4>>2]=16;c[k+8>>2]=0;x=0;aJ(2,17008,k|0,154);if(!x){m=248}else{x=0}}L319:do{if((m|0)==248){k=(c[4253]|0)-1|0;n=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-n>>2>>>0>k>>>0){o=c[n+(k<<2)>>2]|0;if((o|0)==0){break}p=o;q=c[(c[o>>2]|0)+32>>2]|0;x=0,aM(q|0,p|0,13096,13128,e|0)|0;if(x){x=0;break L319}p=c[d>>2]|0;if((c[4156]|0)!=-1){c[j>>2]=16624;c[j+4>>2]=16;c[j+8>>2]=0;x=0;aJ(2,16624,j|0,154);if(x){x=0;break L319}}q=(c[4157]|0)-1|0;o=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-o>>2>>>0>q>>>0){r=c[o+(q<<2)>>2]|0;if((r|0)==0){break}s=r;t=r;u=(x=0,as(c[(c[t>>2]|0)+12>>2]|0,s|0)|0);if(x){x=0;break L319}a[f]=u;u=(x=0,as(c[(c[t>>2]|0)+16>>2]|0,s|0)|0);if(x){x=0;break L319}a[g]=u;x=0;aq(c[(c[r>>2]|0)+20>>2]|0,b|0,s|0);if(x){x=0;break L319}s=c[d>>2]|0;gf(s)|0;i=h;return}}while(0);q=c9(4)|0;ns(q);x=0;aJ(12,q|0,11128,210);if(x){x=0;break L319}}}while(0);k=c9(4)|0;ns(k);x=0;aJ(12,k|0,11128,210);if(x){x=0;break}}}while(0);h=cu(-1,-1)|0;gf(c[d>>2]|0)|0;bk(h|0)}function iO(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if(b<<24>>24==i<<24>>24){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if(b<<24>>24==j<<24>>24){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+32|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((a[j]|0)==b<<24>>24){s=j;break}else{j=j+1|0}}j=s-o|0;if((j|0)>31){p=-1;return p|0}o=a[13096+j|0]|0;if((j|0)==25|(j|0)==24){s=c[h>>2]|0;do{if((s|0)!=(g|0)){if((a[s-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=s+1;a[s]=o;p=0;return p|0}else if((j|0)==22|(j|0)==23){a[f]=80;s=c[h>>2]|0;c[h>>2]=s+1;a[s]=o;p=0;return p|0}else{s=a[f]|0;do{if((o&95|0)==(s<<24>>24|0)){a[f]=s|-128;if((a[e]&1)==0){break}a[e]=0;g=d[k]|0;if((g&1|0)==0){t=g>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}g=c[m>>2]|0;if((g-l|0)>=160){break}b=c[n>>2]|0;c[m>>2]=g+4;c[g>>2]=b}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=o;if((j|0)>21){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}return 0}function iP(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0,m=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=bt()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;bk(l|0)}}}while(0);m=+n$(b,g,c[3894]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)==34){c[e>>2]=4}h=m;i=f;return+h}function iQ(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0.0,ag=0,ah=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;y=e|0;iN(o,j,y,m,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L427:do{if(!x){if((a[q]&1)==0){z=j+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=j+1|0;C=z}c[r>>2]=A;z=s|0;c[t>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f|0;E=g|0;F=p|0;G=p+4|0;H=a[m]|0;I=a[n]|0;J=A;L=c[D>>2]|0;L433:while(1){do{if((L|0)==0){M=0}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){M=L;break}N=(x=0,as(c[(c[L>>2]|0)+36>>2]|0,L|0)|0);if(x){x=0;O=360;break L433}if((N|0)!=-1){M=L;break}c[D>>2]=0;M=0}}while(0);P=(M|0)==0;N=c[E>>2]|0;do{if((N|0)==0){O=347}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(P){Q=N;R=0;break}else{S=J;T=N;U=0;break L433}}V=(x=0,as(c[(c[N>>2]|0)+36>>2]|0,N|0)|0);if(x){x=0;O=360;break L433}if((V|0)==-1){c[E>>2]=0;O=347;break}else{V=(N|0)==0;if(P^V){Q=N;R=V;break}else{S=J;T=N;U=V;break L433}}}}while(0);if((O|0)==347){O=0;if(P){S=J;T=0;U=1;break}else{Q=0;R=1}}N=d[q]|0;V=(N&1|0)==0;if(((c[r>>2]|0)-J|0)==((V?N>>>1:c[G>>2]|0)|0)){if(V){W=N>>>1;X=N>>>1}else{N=c[G>>2]|0;W=N;X=N}x=0;aJ(34,p|0,W<<1|0,0);if(x){x=0;O=360;break}if((a[q]&1)==0){Y=10}else{Y=(c[F>>2]&-2)-1|0}x=0;aJ(34,p|0,Y|0,0);if(x){x=0;O=360;break}if((a[q]&1)==0){Z=B}else{Z=c[C>>2]|0}c[r>>2]=Z+X;_=Z}else{_=J}N=M+12|0;V=c[N>>2]|0;$=M+16|0;if((V|0)==(c[$>>2]|0)){aa=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(x){x=0;O=360;break}ab=aa&255}else{ab=a[V]|0}if((iO(ab,v,w,_,r,H,I,o,z,t,u,y)|0)!=0){S=_;T=Q;U=R;break}V=c[N>>2]|0;if((V|0)==(c[$>>2]|0)){$=c[(c[M>>2]|0)+40>>2]|0;x=0,as($|0,M|0)|0;if(!x){J=_;L=M;continue}else{x=0;O=360;break}}else{c[N>>2]=V+1;J=_;L=M;continue}}if((O|0)==360){L=cu(-1,-1)|0;ac=K;ad=L;gI(p);gI(o);bk(ad|0)}L=d[o]|0;if((L&1|0)==0){ae=L>>>1}else{ae=c[o+4>>2]|0}do{if((ae|0)!=0){if((a[v]&1)==0){break}L=c[t>>2]|0;if((L-s|0)>=160){break}J=c[u>>2]|0;c[t>>2]=L+4;c[L>>2]=J}}while(0);af=(x=0,+(+az(4,S|0,c[r>>2]|0,k|0)));if(x){x=0;break}h[l>>3]=af;iB(o,z,c[t>>2]|0,k);do{if(P){ag=0}else{if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){ag=M;break}J=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(x){x=0;break L427}if((J|0)!=-1){ag=M;break}c[D>>2]=0;ag=0}}while(0);D=(ag|0)==0;L497:do{if(U){O=389}else{do{if((c[T+12>>2]|0)==(c[T+16>>2]|0)){z=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(x){x=0;break L427}if((z|0)!=-1){break}c[E>>2]=0;O=389;break L497}}while(0);if(!(D^(T|0)==0)){break}ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}}while(0);do{if((O|0)==389){if(D){break}ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;ac=K;ad=e;gI(p);gI(o);bk(ad|0)}function iR(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0,m=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=bt()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;bk(l|0)}}}while(0);m=+n$(b,g,c[3894]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=m;i=f;return+h}c[e>>2]=4;h=m;i=f;return+h}function iS(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0.0,ag=0,ah=0;e=i;i=i+80|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+32|0;n=e+40|0;o=e+48|0;p=e+64|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;y=e|0;iN(o,j,y,m,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L536:do{if(!x){if((a[q]&1)==0){z=j+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=j+1|0;C=z}c[r>>2]=A;z=s|0;c[t>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f|0;E=g|0;F=p|0;G=p+4|0;H=a[m]|0;I=a[n]|0;J=A;L=c[D>>2]|0;L542:while(1){do{if((L|0)==0){M=0}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){M=L;break}N=(x=0,as(c[(c[L>>2]|0)+36>>2]|0,L|0)|0);if(x){x=0;O=445;break L542}if((N|0)!=-1){M=L;break}c[D>>2]=0;M=0}}while(0);P=(M|0)==0;N=c[E>>2]|0;do{if((N|0)==0){O=432}else{if((c[N+12>>2]|0)!=(c[N+16>>2]|0)){if(P){Q=N;R=0;break}else{S=J;T=N;U=0;break L542}}V=(x=0,as(c[(c[N>>2]|0)+36>>2]|0,N|0)|0);if(x){x=0;O=445;break L542}if((V|0)==-1){c[E>>2]=0;O=432;break}else{V=(N|0)==0;if(P^V){Q=N;R=V;break}else{S=J;T=N;U=V;break L542}}}}while(0);if((O|0)==432){O=0;if(P){S=J;T=0;U=1;break}else{Q=0;R=1}}N=d[q]|0;V=(N&1|0)==0;if(((c[r>>2]|0)-J|0)==((V?N>>>1:c[G>>2]|0)|0)){if(V){W=N>>>1;X=N>>>1}else{N=c[G>>2]|0;W=N;X=N}x=0;aJ(34,p|0,W<<1|0,0);if(x){x=0;O=445;break}if((a[q]&1)==0){Y=10}else{Y=(c[F>>2]&-2)-1|0}x=0;aJ(34,p|0,Y|0,0);if(x){x=0;O=445;break}if((a[q]&1)==0){Z=B}else{Z=c[C>>2]|0}c[r>>2]=Z+X;_=Z}else{_=J}N=M+12|0;V=c[N>>2]|0;$=M+16|0;if((V|0)==(c[$>>2]|0)){aa=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(x){x=0;O=445;break}ab=aa&255}else{ab=a[V]|0}if((iO(ab,v,w,_,r,H,I,o,z,t,u,y)|0)!=0){S=_;T=Q;U=R;break}V=c[N>>2]|0;if((V|0)==(c[$>>2]|0)){$=c[(c[M>>2]|0)+40>>2]|0;x=0,as($|0,M|0)|0;if(!x){J=_;L=M;continue}else{x=0;O=445;break}}else{c[N>>2]=V+1;J=_;L=M;continue}}if((O|0)==445){L=cu(-1,-1)|0;ac=K;ad=L;gI(p);gI(o);bk(ad|0)}L=d[o]|0;if((L&1|0)==0){ae=L>>>1}else{ae=c[o+4>>2]|0}do{if((ae|0)!=0){if((a[v]&1)==0){break}L=c[t>>2]|0;if((L-s|0)>=160){break}J=c[u>>2]|0;c[t>>2]=L+4;c[L>>2]=J}}while(0);af=(x=0,+(+az(2,S|0,c[r>>2]|0,k|0)));if(x){x=0;break}h[l>>3]=af;iB(o,z,c[t>>2]|0,k);do{if(P){ag=0}else{if((c[M+12>>2]|0)!=(c[M+16>>2]|0)){ag=M;break}J=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(x){x=0;break L536}if((J|0)!=-1){ag=M;break}c[D>>2]=0;ag=0}}while(0);D=(ag|0)==0;L606:do{if(U){O=474}else{do{if((c[T+12>>2]|0)==(c[T+16>>2]|0)){z=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(x){x=0;break L536}if((z|0)!=-1){break}c[E>>2]=0;O=474;break L606}}while(0);if(!(D^(T|0)==0)){break}ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}}while(0);do{if((O|0)==474){if(D){break}ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;ah=b|0;c[ah>>2]=ag;gI(p);gI(o);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;ac=K;ad=e;gI(p);gI(o);bk(ad|0)}function iT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0,k=0,l=0,m=0.0;f=i;i=i+8|0;g=f|0;if((b|0)==(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}j=bt()|0;k=c[j>>2]|0;c[j>>2]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;bk(l|0)}}}while(0);m=+n$(b,g,c[3894]|0);b=c[j>>2]|0;if((b|0)==0){c[j>>2]=k}if((c[g>>2]|0)!=(d|0)){c[e>>2]=4;h=0.0;i=f;return+h}if((b|0)!=34){h=m;i=f;return+h}c[e>>2]=4;h=m;i=f;return+h}function iU(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+48|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;n0(n|0,0,12);u=p;x=0;aq(96,o|0,h|0);if(x){x=0;h=cu(-1,-1)|0;v=K;w=h;gI(n);y=w;z=0;A=y;B=v;bk(A|0)}h=o|0;o=c[h>>2]|0;if((c[4252]|0)==-1){C=504}else{c[l>>2]=17008;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17008,l|0,154);if(!x){C=504}else{x=0}}L651:do{if((C|0)==504){l=(c[4253]|0)-1|0;D=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=m|0;H=c[(c[E>>2]|0)+32>>2]|0;x=0,aM(H|0,F|0,13096,13122,G|0)|0;if(x){x=0;break L651}F=c[h>>2]|0;gf(F)|0;n0(u|0,0,12);F=p;x=0;aJ(34,p|0,10,0);L657:do{if(!x){if((a[u]&1)==0){H=F+1|0;I=H;J=H;L=p+8|0}else{H=p+8|0;I=c[H>>2]|0;J=F+1|0;L=H}c[q>>2]=I;H=r|0;c[s>>2]=H;c[t>>2]=0;E=f|0;M=g|0;N=p|0;O=p+4|0;P=I;Q=c[E>>2]|0;L663:while(1){do{if((Q|0)==0){R=0}else{if((c[Q+12>>2]|0)!=(c[Q+16>>2]|0)){R=Q;break}S=(x=0,as(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0);if(x){x=0;C=540;break L663}if((S|0)!=-1){R=Q;break}c[E>>2]=0;R=0}}while(0);S=(R|0)==0;T=c[M>>2]|0;do{if((T|0)==0){C=525}else{if((c[T+12>>2]|0)!=(c[T+16>>2]|0)){if(S){break}else{U=P;break L663}}V=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(x){x=0;C=540;break L663}if((V|0)==-1){c[M>>2]=0;C=525;break}else{if(S^(T|0)==0){break}else{U=P;break L663}}}}while(0);if((C|0)==525){C=0;if(S){U=P;break}}T=d[u]|0;V=(T&1|0)==0;if(((c[q>>2]|0)-P|0)==((V?T>>>1:c[O>>2]|0)|0)){if(V){W=T>>>1;X=T>>>1}else{T=c[O>>2]|0;W=T;X=T}x=0;aJ(34,p|0,W<<1|0,0);if(x){x=0;C=540;break}if((a[u]&1)==0){Y=10}else{Y=(c[N>>2]&-2)-1|0}x=0;aJ(34,p|0,Y|0,0);if(x){x=0;C=540;break}if((a[u]&1)==0){Z=J}else{Z=c[L>>2]|0}c[q>>2]=Z+X;_=Z}else{_=P}T=R+12|0;V=c[T>>2]|0;$=R+16|0;if((V|0)==(c[$>>2]|0)){aa=(x=0,as(c[(c[R>>2]|0)+36>>2]|0,R|0)|0);if(x){x=0;C=540;break}ab=aa&255}else{ab=a[V]|0}if((iz(ab,16,_,q,t,0,n,H,s,G)|0)!=0){U=_;break}V=c[T>>2]|0;if((V|0)==(c[$>>2]|0)){$=c[(c[R>>2]|0)+40>>2]|0;x=0,as($|0,R|0)|0;if(!x){P=_;Q=R;continue}else{x=0;C=540;break}}else{c[T>>2]=V+1;P=_;Q=R;continue}}if((C|0)==540){Q=cu(-1,-1)|0;ac=K;ad=Q;break}a[U+3|0]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}Q=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=Q;break}else{x=0;Q=cu(-1,-1)|0;ac=K;ad=Q;break L657}}}while(0);Q=(x=0,aM(30,U|0,c[3894]|0,2656,(P=i,i=i+8|0,c[P>>2]=k,P)|0)|0);i=P;if(x){x=0;C=541;break}if((Q|0)!=1){c[j>>2]=4}Q=c[E>>2]|0;do{if((Q|0)==0){ae=0}else{if((c[Q+12>>2]|0)!=(c[Q+16>>2]|0)){ae=Q;break}P=(x=0,as(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0);if(x){x=0;C=541;break L657}if((P|0)!=-1){ae=Q;break}c[E>>2]=0;ae=0}}while(0);E=(ae|0)==0;Q=c[M>>2]|0;do{if((Q|0)==0){C=570}else{if((c[Q+12>>2]|0)!=(c[Q+16>>2]|0)){if(!E){break}af=b|0;c[af>>2]=ae;gI(p);gI(n);i=e;return}P=(x=0,as(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0);if(x){x=0;C=541;break L657}if((P|0)==-1){c[M>>2]=0;C=570;break}if(!(E^(Q|0)==0)){break}af=b|0;c[af>>2]=ae;gI(p);gI(n);i=e;return}}while(0);do{if((C|0)==570){if(E){break}af=b|0;c[af>>2]=ae;gI(p);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;af=b|0;c[af>>2]=ae;gI(p);gI(n);i=e;return}else{x=0;C=541}}while(0);if((C|0)==541){G=cu(-1,-1)|0;ac=K;ad=G}gI(p);v=ac;w=ad;gI(n);y=w;z=0;A=y;B=v;bk(A|0)}}while(0);l=c9(4)|0;ns(l);x=0;aJ(12,l|0,11128,210);if(x){x=0;break}}}while(0);ad=cu(-1,-1)|0;ac=K;gf(c[h>>2]|0)|0;v=ac;w=ad;gI(n);y=w;z=0;A=y;B=v;bk(A|0)}function iV(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=cP(b|0)|0;b=bp(a|0,d|0,g|0)|0;if((h|0)==0){i=f;return b|0}x=0,as(48,h|0)|0;if(!x){i=f;return b|0}else{x=0;cu(-1,-1,0)|0;cA();return 0}return 0}function iW(a){a=a|0;gd(a|0);nU(a);return}function iX(a){a=a|0;gd(a|0);return}function iY(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0;k=i;i=i+112|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+16|0;n=k+32|0;o=k+40|0;p=k+48|0;q=k+56|0;r=k+64|0;s=k+72|0;t=k+80|0;u=k+104|0;if((c[g+4>>2]&1|0)==0){c[n>>2]=-1;v=c[(c[d>>2]|0)+16>>2]|0;w=e|0;c[p>>2]=c[w>>2];c[q>>2]=c[f>>2];dI[v&127](o,d,p,q,g,h,n);q=c[o>>2]|0;c[w>>2]=q;w=c[n>>2]|0;if((w|0)==1){a[j]=1}else if((w|0)==0){a[j]=0}else{a[j]=1;c[h>>2]=4}c[b>>2]=q;i=k;return}g3(r,g);q=r|0;r=c[q>>2]|0;if((c[4250]|0)==-1){y=598}else{c[m>>2]=17e3;c[m+4>>2]=16;c[m+8>>2]=0;x=0;aJ(2,17e3,m|0,154);if(!x){y=598}else{x=0}}do{if((y|0)==598){m=(c[4251]|0)-1|0;w=c[r+8>>2]|0;do{if((c[r+12>>2]|0)-w>>2>>>0>m>>>0){n=c[w+(m<<2)>>2]|0;if((n|0)==0){break}o=n;n=c[q>>2]|0;gf(n)|0;g3(s,g);n=s|0;p=c[n>>2]|0;if((c[4154]|0)==-1){y=604}else{c[l>>2]=16616;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,16616,l|0,154);if(!x){y=604}else{x=0}}do{if((y|0)==604){d=(c[4155]|0)-1|0;v=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-v>>2>>>0>d>>>0){z=c[v+(d<<2)>>2]|0;if((z|0)==0){break}A=z;B=c[n>>2]|0;gf(B)|0;B=t|0;C=z;x=0;aq(c[(c[C>>2]|0)+24>>2]|0,B|0,A|0);do{if(!x){z=t+12|0;x=0;aq(c[(c[C>>2]|0)+28>>2]|0,z|0,A|0);if(x){x=0;D=z;break}c[u>>2]=c[f>>2];z=(x=0,am(2,e|0,u|0,B|0,t+24|0,o|0,h|0,1)|0);if(!x){a[j]=(z|0)==(B|0)|0;c[b>>2]=c[e>>2];gV(t+12|0);gV(t|0);i=k;return}else{x=0;z=cu(-1,-1)|0;E=K;gV(t+12|0);gV(t|0);F=z;G=E;H=F;I=0;J=H;L=G;bk(J|0)}}else{x=0;D=B}}while(0);A=cu(-1,-1)|0;C=A;A=K;if((B|0)==(D|0)){F=C;G=A;H=F;I=0;J=H;L=G;bk(J|0)}else{M=D}while(1){E=M-12|0;gV(E);if((E|0)==(B|0)){F=C;G=A;break}else{M=E}}H=F;I=0;J=H;L=G;bk(J|0)}}while(0);d=c9(4)|0;ns(d);x=0;aJ(12,d|0,11128,210);if(x){x=0;break}}}while(0);o=cu(-1,-1)|0;p=o;o=K;d=c[n>>2]|0;gf(d)|0;F=p;G=o;H=F;I=0;J=H;L=G;bk(J|0)}}while(0);m=c9(4)|0;ns(m);x=0;aJ(12,m|0,11128,210);if(x){x=0;break}}}while(0);M=cu(-1,-1)|0;D=K;gf(c[q>>2]|0)|0;F=M;G=D;H=F;I=0;J=H;L=G;bk(J|0)}function iZ(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0;l=i;i=i+104|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=(g-f|0)/12|0;n=l|0;do{if(m>>>0>100){o=nN(m)|0;if((o|0)!=0){p=o;q=o;break}x=0;aK(4);if(!x){p=0;q=0;break}else{x=0}o=cu(-1,-1)|0;r=K;s=o;bk(s|0)}else{p=n;q=0}}while(0);n=(f|0)==(g|0);if(n){t=m;u=0}else{o=m;m=0;v=p;w=f;while(1){y=d[w]|0;if((y&1|0)==0){z=y>>>1}else{z=c[w+4>>2]|0}if((z|0)==0){a[v]=2;A=m+1|0;B=o-1|0}else{a[v]=1;A=m;B=o}y=w+12|0;if((y|0)==(g|0)){t=B;u=A;break}else{o=B;m=A;v=v+1|0;w=y}}}w=b|0;b=e|0;e=h;v=0;A=u;u=t;L825:while(1){t=c[w>>2]|0;do{if((t|0)==0){C=0}else{m=c[t+12>>2]|0;if((m|0)==(c[t+16>>2]|0)){B=(x=0,as(c[(c[t>>2]|0)+36>>2]|0,t|0)|0);if(!x){D=B}else{x=0;E=631;break L825}}else{D=c[m>>2]|0}if((D|0)==-1){c[w>>2]=0;C=0;break}else{C=c[w>>2]|0;break}}}while(0);t=(C|0)==0;m=c[b>>2]|0;if((m|0)==0){F=C;G=0}else{B=c[m+12>>2]|0;if((B|0)==(c[m+16>>2]|0)){o=(x=0,as(c[(c[m>>2]|0)+36>>2]|0,m|0)|0);if(!x){H=o}else{x=0;E=631;break}}else{H=c[B>>2]|0}if((H|0)==-1){c[b>>2]=0;I=0}else{I=m}F=c[w>>2]|0;G=I}J=(G|0)==0;if(!((t^J)&(u|0)!=0)){E=707;break}t=c[F+12>>2]|0;if((t|0)==(c[F+16>>2]|0)){m=(x=0,as(c[(c[F>>2]|0)+36>>2]|0,F|0)|0);if(!x){L=m}else{x=0;E=631;break}}else{L=c[t>>2]|0}if(k){M=L}else{t=(x=0,aF(c[(c[e>>2]|0)+28>>2]|0,h|0,L|0)|0);if(!x){M=t}else{x=0;E=631;break}}do{if(n){N=A;O=u}else{t=v+1|0;L857:do{if(k){m=u;B=A;o=p;z=0;y=f;while(1){do{if((a[o]|0)==1){P=y;if((a[P]&1)==0){Q=y+4|0}else{Q=c[y+8>>2]|0}if((M|0)!=(c[Q+(v<<2)>>2]|0)){a[o]=0;R=z;S=B;T=m-1|0;break}U=d[P]|0;if((U&1|0)==0){V=U>>>1}else{V=c[y+4>>2]|0}if((V|0)!=(t|0)){R=1;S=B;T=m;break}a[o]=2;R=1;S=B+1|0;T=m-1|0}else{R=z;S=B;T=m}}while(0);U=y+12|0;if((U|0)==(g|0)){W=T;X=S;Y=R;break L857}m=T;B=S;o=o+1|0;z=R;y=U}}else{y=u;z=A;o=p;B=0;m=f;while(1){do{if((a[o]|0)==1){U=m;if((a[U]&1)==0){Z=m+4|0}else{Z=c[m+8>>2]|0}P=(x=0,aF(c[(c[e>>2]|0)+28>>2]|0,h|0,c[Z+(v<<2)>>2]|0)|0);if(x){x=0;E=630;break L825}if((M|0)!=(P|0)){a[o]=0;_=B;$=z;aa=y-1|0;break}P=d[U]|0;if((P&1|0)==0){ab=P>>>1}else{ab=c[m+4>>2]|0}if((ab|0)!=(t|0)){_=1;$=z;aa=y;break}a[o]=2;_=1;$=z+1|0;aa=y-1|0}else{_=B;$=z;aa=y}}while(0);P=m+12|0;if((P|0)==(g|0)){W=aa;X=$;Y=_;break L857}y=aa;z=$;o=o+1|0;B=_;m=P}}}while(0);if(!Y){N=X;O=W;break}t=c[w>>2]|0;m=t+12|0;B=c[m>>2]|0;if((B|0)==(c[t+16>>2]|0)){o=c[(c[t>>2]|0)+40>>2]|0;x=0,as(o|0,t|0)|0;if(x){x=0;E=631;break L825}}else{c[m>>2]=B+4}if((X+W|0)>>>0<2|n){N=X;O=W;break}B=v+1|0;m=X;t=p;o=f;while(1){do{if((a[t]|0)==2){z=d[o]|0;if((z&1|0)==0){ac=z>>>1}else{ac=c[o+4>>2]|0}if((ac|0)==(B|0)){ad=m;break}a[t]=0;ad=m-1|0}else{ad=m}}while(0);z=o+12|0;if((z|0)==(g|0)){N=ad;O=W;break}else{m=ad;t=t+1|0;o=z}}}}while(0);v=v+1|0;A=N;u=O}if((E|0)==707){do{if((F|0)==0){ae=1;E=714}else{O=c[F+12>>2]|0;if((O|0)==(c[F+16>>2]|0)){u=(x=0,as(c[(c[F>>2]|0)+36>>2]|0,F|0)|0);if(!x){af=u}else{x=0;break}}else{af=c[O>>2]|0}if((af|0)==-1){c[w>>2]=0;ae=1;E=714;break}else{ae=(c[w>>2]|0)==0;E=714;break}}}while(0);L924:do{if((E|0)==714){do{if(J){E=720}else{w=c[G+12>>2]|0;if((w|0)==(c[G+16>>2]|0)){af=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(!x){ag=af}else{x=0;break L924}}else{ag=c[w>>2]|0}if((ag|0)==-1){c[b>>2]=0;E=720;break}else{if(ae^(G|0)==0){break}else{E=722;break}}}}while(0);if((E|0)==720){if(ae){E=722}}if((E|0)==722){c[j>>2]=c[j>>2]|2}L940:do{if(n){E=727}else{w=f;af=p;while(1){if((a[af]|0)==2){ah=w;break L940}F=w+12|0;if((F|0)==(g|0)){E=727;break L940}w=F;af=af+1|0}}}while(0);if((E|0)==727){c[j>>2]=c[j>>2]|4;ah=g}if((q|0)==0){i=l;return ah|0}nO(q);i=l;return ah|0}}while(0);ah=cu(-1,-1)|0;ai=K;aj=ah}else if((E|0)==630){ah=cu(-1,-1)|0;ai=K;aj=ah}else if((E|0)==631){E=cu(-1,-1)|0;ai=K;aj=E}if((q|0)==0){r=ai;s=aj;bk(s|0)}nO(q);r=ai;s=aj;bk(s|0);return 0}function i_(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==0){v=0}else if((u|0)==64){v=8}else if((u|0)==8){v=16}else{v=10}u=l|0;i$(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L966:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=c[m>>2]|0;F=w;G=c[A>>2]|0;L972:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(!x){L=J}else{x=0;M=771;break L972}}else{L=c[I>>2]|0}if((L|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);N=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){M=758}else{J=c[I+12>>2]|0;if((J|0)==(c[I+16>>2]|0)){O=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(!x){P=O}else{x=0;M=771;break L972}}else{P=c[J>>2]|0}if((P|0)==-1){c[B>>2]=0;M=758;break}else{J=(I|0)==0;if(N^J){Q=I;R=J;break}else{S=F;T=I;U=J;break L972}}}}while(0);if((M|0)==758){M=0;if(N){S=F;T=0;U=1;break}else{Q=0;R=1}}I=d[p]|0;J=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((J?I>>>1:c[D>>2]|0)|0)){if(J){V=I>>>1;W=I>>>1}else{I=c[D>>2]|0;V=I;W=I}x=0;aJ(34,o|0,V<<1|0,0);if(x){x=0;M=771;break}if((a[p]&1)==0){X=10}else{X=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,X|0,0);if(x){x=0;M=771;break}if((a[p]&1)==0){Y=y}else{Y=c[z>>2]|0}c[q>>2]=Y+W;Z=Y}else{Z=F}I=H+12|0;J=c[I>>2]|0;O=H+16|0;if((J|0)==(c[O>>2]|0)){_=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){$=_}else{x=0;M=771;break}}else{$=c[J>>2]|0}if((i0($,v,Z,q,t,E,n,l,s,u)|0)!=0){S=Z;T=Q;U=R;break}J=c[I>>2]|0;if((J|0)==(c[O>>2]|0)){O=c[(c[H>>2]|0)+40>>2]|0;x=0,as(O|0,H|0)|0;if(!x){F=Z;G=H;continue}else{x=0;M=771;break}}else{c[I>>2]=J+4;F=Z;G=H;continue}}if((M|0)==771){G=cu(-1,-1)|0;aa=K;ab=G;gI(o);gI(n);bk(ab|0)}G=d[n]|0;if((G&1|0)==0){ac=G>>>1}else{ac=c[n+4>>2]|0}do{if((ac|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(18,S|0,c[q>>2]|0,j|0,v|0)|0);if(x){x=0;break}c[k>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(N){ad=0}else{F=c[H+12>>2]|0;if((F|0)==(c[H+16>>2]|0)){G=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){ae=G}else{x=0;break L966}}else{ae=c[F>>2]|0}if((ae|0)!=-1){ad=H;break}c[A>>2]=0;ad=0}}while(0);A=(ad|0)==0;do{if(U){M=800}else{l=c[T+12>>2]|0;if((l|0)==(c[T+16>>2]|0)){F=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(!x){af=F}else{x=0;break L966}}else{af=c[l>>2]|0}if((af|0)==-1){c[B>>2]=0;M=800;break}if(!(A^(T|0)==0)){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);do{if((M|0)==800){if(A){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;aa=K;ab=e;gI(o);gI(n);bk(ab|0)}function i$(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+40|0;g=f|0;h=f+16|0;j=f+32|0;g3(j,b);b=j|0;j=c[b>>2]|0;if((c[4250]|0)==-1){k=811}else{c[h>>2]=17e3;c[h+4>>2]=16;c[h+8>>2]=0;x=0;aJ(2,17e3,h|0,154);if(!x){k=811}else{x=0}}L1058:do{if((k|0)==811){h=(c[4251]|0)-1|0;l=c[j+8>>2]|0;do{if((c[j+12>>2]|0)-l>>2>>>0>h>>>0){m=c[l+(h<<2)>>2]|0;if((m|0)==0){break}n=m;o=c[(c[m>>2]|0)+48>>2]|0;x=0,aM(o|0,n|0,13096,13122,d|0)|0;if(x){x=0;break L1058}n=c[b>>2]|0;if((c[4154]|0)!=-1){c[g>>2]=16616;c[g+4>>2]=16;c[g+8>>2]=0;x=0;aJ(2,16616,g|0,154);if(x){x=0;break L1058}}o=(c[4155]|0)-1|0;m=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-m>>2>>>0>o>>>0){p=c[m+(o<<2)>>2]|0;if((p|0)==0){break}q=p;r=(x=0,as(c[(c[p>>2]|0)+16>>2]|0,q|0)|0);if(x){x=0;break L1058}c[e>>2]=r;x=0;aq(c[(c[p>>2]|0)+20>>2]|0,a|0,q|0);if(x){x=0;break L1058}q=c[b>>2]|0;gf(q)|0;i=f;return}}while(0);o=c9(4)|0;ns(o);x=0;aJ(12,o|0,11128,210);if(x){x=0;break L1058}}}while(0);h=c9(4)|0;ns(h);x=0;aJ(12,h|0,11128,210);if(x){x=0;break}}}while(0);f=cu(-1,-1)|0;gf(c[b>>2]|0)|0;bk(f|0)}function i0(b,e,f,g,h,i,j,k,l,m){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0;n=c[g>>2]|0;o=(n|0)==(f|0);do{if(o){p=(c[m+96>>2]|0)==(b|0);if(!p){if((c[m+100>>2]|0)!=(b|0)){break}}c[g>>2]=f+1;a[f]=p?43:45;c[h>>2]=0;q=0;return q|0}}while(0);p=d[j]|0;if((p&1|0)==0){r=p>>>1}else{r=c[j+4>>2]|0}if((r|0)!=0&(b|0)==(i|0)){i=c[l>>2]|0;if((i-k|0)>=160){q=0;return q|0}k=c[h>>2]|0;c[l>>2]=i+4;c[i>>2]=k;c[h>>2]=0;q=0;return q|0}k=m+104|0;i=m;while(1){if((i|0)==(k|0)){s=k;break}if((c[i>>2]|0)==(b|0)){s=i;break}else{i=i+4|0}}i=s-m|0;m=i>>2;if((i|0)>92){q=-1;return q|0}do{if((e|0)==8|(e|0)==10){if((m|0)<(e|0)){break}else{q=-1}return q|0}else if((e|0)==16){if((i|0)<88){break}if(o){q=-1;return q|0}if((n-f|0)>=3){q=-1;return q|0}if((a[n-1|0]|0)!=48){q=-1;return q|0}c[h>>2]=0;s=a[13096+m|0]|0;b=c[g>>2]|0;c[g>>2]=b+1;a[b]=s;q=0;return q|0}}while(0);f=a[13096+m|0]|0;c[g>>2]=n+1;a[n]=f;c[h>>2]=(c[h>>2]|0)+1;q=0;return q|0}function i1(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==64){v=8}else if((u|0)==0){v=0}else{v=10}u=l|0;i$(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L1126:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=c[m>>2]|0;F=w;G=c[A>>2]|0;L1132:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(!x){L=J}else{x=0;M=893;break L1132}}else{L=c[I>>2]|0}if((L|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);N=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){M=880}else{J=c[I+12>>2]|0;if((J|0)==(c[I+16>>2]|0)){O=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(!x){P=O}else{x=0;M=893;break L1132}}else{P=c[J>>2]|0}if((P|0)==-1){c[B>>2]=0;M=880;break}else{J=(I|0)==0;if(N^J){Q=I;R=J;break}else{S=F;T=I;U=J;break L1132}}}}while(0);if((M|0)==880){M=0;if(N){S=F;T=0;U=1;break}else{Q=0;R=1}}I=d[p]|0;J=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((J?I>>>1:c[D>>2]|0)|0)){if(J){V=I>>>1;W=I>>>1}else{I=c[D>>2]|0;V=I;W=I}x=0;aJ(34,o|0,V<<1|0,0);if(x){x=0;M=893;break}if((a[p]&1)==0){X=10}else{X=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,X|0,0);if(x){x=0;M=893;break}if((a[p]&1)==0){Y=y}else{Y=c[z>>2]|0}c[q>>2]=Y+W;Z=Y}else{Z=F}I=H+12|0;J=c[I>>2]|0;O=H+16|0;if((J|0)==(c[O>>2]|0)){_=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){$=_}else{x=0;M=893;break}}else{$=c[J>>2]|0}if((i0($,v,Z,q,t,E,n,l,s,u)|0)!=0){S=Z;T=Q;U=R;break}J=c[I>>2]|0;if((J|0)==(c[O>>2]|0)){O=c[(c[H>>2]|0)+40>>2]|0;x=0,as(O|0,H|0)|0;if(!x){F=Z;G=H;continue}else{x=0;M=893;break}}else{c[I>>2]=J+4;F=Z;G=H;continue}}if((M|0)==893){G=cu(-1,-1)|0;aa=K;ab=G;gI(o);gI(n);bk(ab|0)}G=d[n]|0;if((G&1|0)==0){ac=G>>>1}else{ac=c[n+4>>2]|0}do{if((ac|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(10,S|0,c[q>>2]|0,j|0,v|0)|0);G=F;F=K;if(x){x=0;break}c[k>>2]=G;c[k+4>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(N){ad=0}else{F=c[H+12>>2]|0;if((F|0)==(c[H+16>>2]|0)){G=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){ae=G}else{x=0;break L1126}}else{ae=c[F>>2]|0}if((ae|0)!=-1){ad=H;break}c[A>>2]=0;ad=0}}while(0);A=(ad|0)==0;do{if(U){M=922}else{l=c[T+12>>2]|0;if((l|0)==(c[T+16>>2]|0)){F=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(!x){af=F}else{x=0;break L1126}}else{af=c[l>>2]|0}if((af|0)==-1){c[B>>2]=0;M=922;break}if(!(A^(T|0)==0)){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);do{if((M|0)==922){if(A){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;aa=K;ab=e;gI(o);gI(n);bk(ab|0)}function i2(e,f,g,h,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0;f=i;i=i+144|0;m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=f|0;n=f+104|0;o=f+112|0;p=f+128|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=c[j+4>>2]&74;if((v|0)==8){w=16}else if((v|0)==0){w=0}else if((v|0)==64){w=8}else{w=10}v=m|0;i$(o,j,v,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L1221:do{if(!x){if((a[q]&1)==0){m=j+1|0;y=m;z=m;A=p+8|0}else{m=p+8|0;y=c[m>>2]|0;z=j+1|0;A=m}c[r>>2]=y;m=s|0;c[t>>2]=m;c[u>>2]=0;B=g|0;C=h|0;D=p|0;E=p+4|0;F=c[n>>2]|0;G=y;H=c[B>>2]|0;L1227:while(1){do{if((H|0)==0){I=0}else{J=c[H+12>>2]|0;if((J|0)==(c[H+16>>2]|0)){L=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){M=L}else{x=0;N=965;break L1227}}else{M=c[J>>2]|0}if((M|0)!=-1){I=H;break}c[B>>2]=0;I=0}}while(0);O=(I|0)==0;J=c[C>>2]|0;do{if((J|0)==0){N=952}else{L=c[J+12>>2]|0;if((L|0)==(c[J+16>>2]|0)){P=(x=0,as(c[(c[J>>2]|0)+36>>2]|0,J|0)|0);if(!x){Q=P}else{x=0;N=965;break L1227}}else{Q=c[L>>2]|0}if((Q|0)==-1){c[C>>2]=0;N=952;break}else{L=(J|0)==0;if(O^L){R=J;S=L;break}else{T=G;U=J;V=L;break L1227}}}}while(0);if((N|0)==952){N=0;if(O){T=G;U=0;V=1;break}else{R=0;S=1}}J=d[q]|0;L=(J&1|0)==0;if(((c[r>>2]|0)-G|0)==((L?J>>>1:c[E>>2]|0)|0)){if(L){W=J>>>1;X=J>>>1}else{J=c[E>>2]|0;W=J;X=J}x=0;aJ(34,p|0,W<<1|0,0);if(x){x=0;N=965;break}if((a[q]&1)==0){Y=10}else{Y=(c[D>>2]&-2)-1|0}x=0;aJ(34,p|0,Y|0,0);if(x){x=0;N=965;break}if((a[q]&1)==0){Z=z}else{Z=c[A>>2]|0}c[r>>2]=Z+X;_=Z}else{_=G}J=I+12|0;L=c[J>>2]|0;P=I+16|0;if((L|0)==(c[P>>2]|0)){$=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(!x){aa=$}else{x=0;N=965;break}}else{aa=c[L>>2]|0}if((i0(aa,w,_,r,u,F,o,m,t,v)|0)!=0){T=_;U=R;V=S;break}L=c[J>>2]|0;if((L|0)==(c[P>>2]|0)){P=c[(c[I>>2]|0)+40>>2]|0;x=0,as(P|0,I|0)|0;if(!x){G=_;H=I;continue}else{x=0;N=965;break}}else{c[J>>2]=L+4;G=_;H=I;continue}}if((N|0)==965){H=cu(-1,-1)|0;ab=K;ac=H;gI(p);gI(o);bk(ac|0)}H=d[o]|0;if((H&1|0)==0){ad=H>>>1}else{ad=c[o+4>>2]|0}do{if((ad|0)!=0){H=c[t>>2]|0;if((H-s|0)>=160){break}G=c[u>>2]|0;c[t>>2]=H+4;c[H>>2]=G}}while(0);G=(x=0,aM(14,T|0,c[r>>2]|0,k|0,w|0)|0);if(x){x=0;break}b[l>>1]=G;iB(o,m,c[t>>2]|0,k);do{if(O){ae=0}else{G=c[I+12>>2]|0;if((G|0)==(c[I+16>>2]|0)){H=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(!x){af=H}else{x=0;break L1221}}else{af=c[G>>2]|0}if((af|0)!=-1){ae=I;break}c[B>>2]=0;ae=0}}while(0);B=(ae|0)==0;do{if(V){N=994}else{m=c[U+12>>2]|0;if((m|0)==(c[U+16>>2]|0)){G=(x=0,as(c[(c[U>>2]|0)+36>>2]|0,U|0)|0);if(!x){ag=G}else{x=0;break L1221}}else{ag=c[m>>2]|0}if((ag|0)==-1){c[C>>2]=0;N=994;break}if(!(B^(U|0)==0)){break}ah=e|0;c[ah>>2]=ae;gI(p);gI(o);i=f;return}}while(0);do{if((N|0)==994){if(B){break}ah=e|0;c[ah>>2]=ae;gI(p);gI(o);i=f;return}}while(0);c[k>>2]=c[k>>2]|2;ah=e|0;c[ah>>2]=ae;gI(p);gI(o);i=f;return}else{x=0}}while(0);f=cu(-1,-1)|0;ab=K;ac=f;gI(p);gI(o);bk(ac|0)}function i3(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;i$(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L1316:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=c[m>>2]|0;F=w;G=c[A>>2]|0;L1322:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(!x){L=J}else{x=0;M=1037;break L1322}}else{L=c[I>>2]|0}if((L|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);N=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){M=1024}else{J=c[I+12>>2]|0;if((J|0)==(c[I+16>>2]|0)){O=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(!x){P=O}else{x=0;M=1037;break L1322}}else{P=c[J>>2]|0}if((P|0)==-1){c[B>>2]=0;M=1024;break}else{J=(I|0)==0;if(N^J){Q=I;R=J;break}else{S=F;T=I;U=J;break L1322}}}}while(0);if((M|0)==1024){M=0;if(N){S=F;T=0;U=1;break}else{Q=0;R=1}}I=d[p]|0;J=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((J?I>>>1:c[D>>2]|0)|0)){if(J){V=I>>>1;W=I>>>1}else{I=c[D>>2]|0;V=I;W=I}x=0;aJ(34,o|0,V<<1|0,0);if(x){x=0;M=1037;break}if((a[p]&1)==0){X=10}else{X=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,X|0,0);if(x){x=0;M=1037;break}if((a[p]&1)==0){Y=y}else{Y=c[z>>2]|0}c[q>>2]=Y+W;Z=Y}else{Z=F}I=H+12|0;J=c[I>>2]|0;O=H+16|0;if((J|0)==(c[O>>2]|0)){_=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){$=_}else{x=0;M=1037;break}}else{$=c[J>>2]|0}if((i0($,v,Z,q,t,E,n,l,s,u)|0)!=0){S=Z;T=Q;U=R;break}J=c[I>>2]|0;if((J|0)==(c[O>>2]|0)){O=c[(c[H>>2]|0)+40>>2]|0;x=0,as(O|0,H|0)|0;if(!x){F=Z;G=H;continue}else{x=0;M=1037;break}}else{c[I>>2]=J+4;F=Z;G=H;continue}}if((M|0)==1037){G=cu(-1,-1)|0;aa=K;ab=G;gI(o);gI(n);bk(ab|0)}G=d[n]|0;if((G&1|0)==0){ac=G>>>1}else{ac=c[n+4>>2]|0}do{if((ac|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(8,S|0,c[q>>2]|0,j|0,v|0)|0);if(x){x=0;break}c[k>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(N){ad=0}else{F=c[H+12>>2]|0;if((F|0)==(c[H+16>>2]|0)){G=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){ae=G}else{x=0;break L1316}}else{ae=c[F>>2]|0}if((ae|0)!=-1){ad=H;break}c[A>>2]=0;ad=0}}while(0);A=(ad|0)==0;do{if(U){M=1066}else{l=c[T+12>>2]|0;if((l|0)==(c[T+16>>2]|0)){F=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(!x){af=F}else{x=0;break L1316}}else{af=c[l>>2]|0}if((af|0)==-1){c[B>>2]=0;M=1066;break}if(!(A^(T|0)==0)){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);do{if((M|0)==1066){if(A){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;aa=K;ab=e;gI(o);gI(n);bk(ab|0)}function i4(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;i$(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L1411:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=c[m>>2]|0;F=w;G=c[A>>2]|0;L1417:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(!x){L=J}else{x=0;M=1109;break L1417}}else{L=c[I>>2]|0}if((L|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);N=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){M=1096}else{J=c[I+12>>2]|0;if((J|0)==(c[I+16>>2]|0)){O=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(!x){P=O}else{x=0;M=1109;break L1417}}else{P=c[J>>2]|0}if((P|0)==-1){c[B>>2]=0;M=1096;break}else{J=(I|0)==0;if(N^J){Q=I;R=J;break}else{S=F;T=I;U=J;break L1417}}}}while(0);if((M|0)==1096){M=0;if(N){S=F;T=0;U=1;break}else{Q=0;R=1}}I=d[p]|0;J=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((J?I>>>1:c[D>>2]|0)|0)){if(J){V=I>>>1;W=I>>>1}else{I=c[D>>2]|0;V=I;W=I}x=0;aJ(34,o|0,V<<1|0,0);if(x){x=0;M=1109;break}if((a[p]&1)==0){X=10}else{X=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,X|0,0);if(x){x=0;M=1109;break}if((a[p]&1)==0){Y=y}else{Y=c[z>>2]|0}c[q>>2]=Y+W;Z=Y}else{Z=F}I=H+12|0;J=c[I>>2]|0;O=H+16|0;if((J|0)==(c[O>>2]|0)){_=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){$=_}else{x=0;M=1109;break}}else{$=c[J>>2]|0}if((i0($,v,Z,q,t,E,n,l,s,u)|0)!=0){S=Z;T=Q;U=R;break}J=c[I>>2]|0;if((J|0)==(c[O>>2]|0)){O=c[(c[H>>2]|0)+40>>2]|0;x=0,as(O|0,H|0)|0;if(!x){F=Z;G=H;continue}else{x=0;M=1109;break}}else{c[I>>2]=J+4;F=Z;G=H;continue}}if((M|0)==1109){G=cu(-1,-1)|0;aa=K;ab=G;gI(o);gI(n);bk(ab|0)}G=d[n]|0;if((G&1|0)==0){ac=G>>>1}else{ac=c[n+4>>2]|0}do{if((ac|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(22,S|0,c[q>>2]|0,j|0,v|0)|0);if(x){x=0;break}c[k>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(N){ad=0}else{F=c[H+12>>2]|0;if((F|0)==(c[H+16>>2]|0)){G=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){ae=G}else{x=0;break L1411}}else{ae=c[F>>2]|0}if((ae|0)!=-1){ad=H;break}c[A>>2]=0;ad=0}}while(0);A=(ad|0)==0;do{if(U){M=1138}else{l=c[T+12>>2]|0;if((l|0)==(c[T+16>>2]|0)){F=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(!x){af=F}else{x=0;break L1411}}else{af=c[l>>2]|0}if((af|0)==-1){c[B>>2]=0;M=1138;break}if(!(A^(T|0)==0)){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);do{if((M|0)==1138){if(A){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;aa=K;ab=e;gI(o);gI(n);bk(ab|0)}function i5(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;e=i;i=i+144|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+104|0;n=e+112|0;o=e+128|0;p=o;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;u=c[h+4>>2]&74;if((u|0)==8){v=16}else if((u|0)==0){v=0}else if((u|0)==64){v=8}else{v=10}u=l|0;i$(n,h,u,m);n0(p|0,0,12);h=o;x=0;aJ(34,o|0,10,0);L1506:do{if(!x){if((a[p]&1)==0){l=h+1|0;w=l;y=l;z=o+8|0}else{l=o+8|0;w=c[l>>2]|0;y=h+1|0;z=l}c[q>>2]=w;l=r|0;c[s>>2]=l;c[t>>2]=0;A=f|0;B=g|0;C=o|0;D=o+4|0;E=c[m>>2]|0;F=w;G=c[A>>2]|0;L1512:while(1){do{if((G|0)==0){H=0}else{I=c[G+12>>2]|0;if((I|0)==(c[G+16>>2]|0)){J=(x=0,as(c[(c[G>>2]|0)+36>>2]|0,G|0)|0);if(!x){L=J}else{x=0;M=1181;break L1512}}else{L=c[I>>2]|0}if((L|0)!=-1){H=G;break}c[A>>2]=0;H=0}}while(0);N=(H|0)==0;I=c[B>>2]|0;do{if((I|0)==0){M=1168}else{J=c[I+12>>2]|0;if((J|0)==(c[I+16>>2]|0)){O=(x=0,as(c[(c[I>>2]|0)+36>>2]|0,I|0)|0);if(!x){P=O}else{x=0;M=1181;break L1512}}else{P=c[J>>2]|0}if((P|0)==-1){c[B>>2]=0;M=1168;break}else{J=(I|0)==0;if(N^J){Q=I;R=J;break}else{S=F;T=I;U=J;break L1512}}}}while(0);if((M|0)==1168){M=0;if(N){S=F;T=0;U=1;break}else{Q=0;R=1}}I=d[p]|0;J=(I&1|0)==0;if(((c[q>>2]|0)-F|0)==((J?I>>>1:c[D>>2]|0)|0)){if(J){V=I>>>1;W=I>>>1}else{I=c[D>>2]|0;V=I;W=I}x=0;aJ(34,o|0,V<<1|0,0);if(x){x=0;M=1181;break}if((a[p]&1)==0){X=10}else{X=(c[C>>2]&-2)-1|0}x=0;aJ(34,o|0,X|0,0);if(x){x=0;M=1181;break}if((a[p]&1)==0){Y=y}else{Y=c[z>>2]|0}c[q>>2]=Y+W;Z=Y}else{Z=F}I=H+12|0;J=c[I>>2]|0;O=H+16|0;if((J|0)==(c[O>>2]|0)){_=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){$=_}else{x=0;M=1181;break}}else{$=c[J>>2]|0}if((i0($,v,Z,q,t,E,n,l,s,u)|0)!=0){S=Z;T=Q;U=R;break}J=c[I>>2]|0;if((J|0)==(c[O>>2]|0)){O=c[(c[H>>2]|0)+40>>2]|0;x=0,as(O|0,H|0)|0;if(!x){F=Z;G=H;continue}else{x=0;M=1181;break}}else{c[I>>2]=J+4;F=Z;G=H;continue}}if((M|0)==1181){G=cu(-1,-1)|0;aa=K;ab=G;gI(o);gI(n);bk(ab|0)}G=d[n]|0;if((G&1|0)==0){ac=G>>>1}else{ac=c[n+4>>2]|0}do{if((ac|0)!=0){G=c[s>>2]|0;if((G-r|0)>=160){break}F=c[t>>2]|0;c[s>>2]=G+4;c[G>>2]=F}}while(0);F=(x=0,aM(28,S|0,c[q>>2]|0,j|0,v|0)|0);G=F;F=K;if(x){x=0;break}c[k>>2]=G;c[k+4>>2]=F;iB(n,l,c[s>>2]|0,j);do{if(N){ad=0}else{F=c[H+12>>2]|0;if((F|0)==(c[H+16>>2]|0)){G=(x=0,as(c[(c[H>>2]|0)+36>>2]|0,H|0)|0);if(!x){ae=G}else{x=0;break L1506}}else{ae=c[F>>2]|0}if((ae|0)!=-1){ad=H;break}c[A>>2]=0;ad=0}}while(0);A=(ad|0)==0;do{if(U){M=1210}else{l=c[T+12>>2]|0;if((l|0)==(c[T+16>>2]|0)){F=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(!x){af=F}else{x=0;break L1506}}else{af=c[l>>2]|0}if((af|0)==-1){c[B>>2]=0;M=1210;break}if(!(A^(T|0)==0)){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);do{if((M|0)==1210){if(A){break}ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;ag=b|0;c[ag>>2]=ad;gI(o);gI(n);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;aa=K;ab=e;gI(o);gI(n);bk(ab|0)}function i6(b,e,f,h,j,k,l){b=b|0;e=e|0;f=f|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0.0,ai=0,aj=0,ak=0,al=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=h;h=i;i=i+4|0;i=i+7&-8;c[h>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;y=e|0;i7(o,j,y,m,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L1596:do{if(!x){if((a[q]&1)==0){z=j+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=j+1|0;C=z}c[r>>2]=A;z=s|0;c[t>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f|0;E=h|0;F=p|0;G=p+4|0;H=c[m>>2]|0;I=c[n>>2]|0;J=A;L=c[D>>2]|0;L1602:while(1){do{if((L|0)==0){M=0}else{N=c[L+12>>2]|0;if((N|0)==(c[L+16>>2]|0)){O=(x=0,as(c[(c[L>>2]|0)+36>>2]|0,L|0)|0);if(!x){P=O}else{x=0;Q=1249;break L1602}}else{P=c[N>>2]|0}if((P|0)!=-1){M=L;break}c[D>>2]=0;M=0}}while(0);R=(M|0)==0;N=c[E>>2]|0;do{if((N|0)==0){Q=1236}else{O=c[N+12>>2]|0;if((O|0)==(c[N+16>>2]|0)){S=(x=0,as(c[(c[N>>2]|0)+36>>2]|0,N|0)|0);if(!x){T=S}else{x=0;Q=1249;break L1602}}else{T=c[O>>2]|0}if((T|0)==-1){c[E>>2]=0;Q=1236;break}else{O=(N|0)==0;if(R^O){U=N;V=O;break}else{W=J;X=N;Y=O;break L1602}}}}while(0);if((Q|0)==1236){Q=0;if(R){W=J;X=0;Y=1;break}else{U=0;V=1}}N=d[q]|0;O=(N&1|0)==0;if(((c[r>>2]|0)-J|0)==((O?N>>>1:c[G>>2]|0)|0)){if(O){Z=N>>>1;_=N>>>1}else{N=c[G>>2]|0;Z=N;_=N}x=0;aJ(34,p|0,Z<<1|0,0);if(x){x=0;Q=1249;break}if((a[q]&1)==0){$=10}else{$=(c[F>>2]&-2)-1|0}x=0;aJ(34,p|0,$|0,0);if(x){x=0;Q=1249;break}if((a[q]&1)==0){aa=B}else{aa=c[C>>2]|0}c[r>>2]=aa+_;ab=aa}else{ab=J}N=M+12|0;O=c[N>>2]|0;S=M+16|0;if((O|0)==(c[S>>2]|0)){ac=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(!x){ad=ac}else{x=0;Q=1249;break}}else{ad=c[O>>2]|0}if((i8(ad,v,w,ab,r,H,I,o,z,t,u,y)|0)!=0){W=ab;X=U;Y=V;break}O=c[N>>2]|0;if((O|0)==(c[S>>2]|0)){S=c[(c[M>>2]|0)+40>>2]|0;x=0,as(S|0,M|0)|0;if(!x){J=ab;L=M;continue}else{x=0;Q=1249;break}}else{c[N>>2]=O+4;J=ab;L=M;continue}}if((Q|0)==1249){L=cu(-1,-1)|0;ae=K;af=L;gI(p);gI(o);bk(af|0)}L=d[o]|0;if((L&1|0)==0){ag=L>>>1}else{ag=c[o+4>>2]|0}do{if((ag|0)!=0){if((a[v]&1)==0){break}L=c[t>>2]|0;if((L-s|0)>=160){break}J=c[u>>2]|0;c[t>>2]=L+4;c[L>>2]=J}}while(0);ah=(x=0,+(+az(6,W|0,c[r>>2]|0,k|0)));if(x){x=0;break}g[l>>2]=ah;iB(o,z,c[t>>2]|0,k);do{if(R){ai=0}else{J=c[M+12>>2]|0;if((J|0)==(c[M+16>>2]|0)){L=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(!x){aj=L}else{x=0;break L1596}}else{aj=c[J>>2]|0}if((aj|0)!=-1){ai=M;break}c[D>>2]=0;ai=0}}while(0);D=(ai|0)==0;do{if(Y){Q=1279}else{z=c[X+12>>2]|0;if((z|0)==(c[X+16>>2]|0)){J=(x=0,as(c[(c[X>>2]|0)+36>>2]|0,X|0)|0);if(!x){ak=J}else{x=0;break L1596}}else{ak=c[z>>2]|0}if((ak|0)==-1){c[E>>2]=0;Q=1279;break}if(!(D^(X|0)==0)){break}al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}}while(0);do{if((Q|0)==1279){if(D){break}al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;ae=K;af=e;gI(p);gI(o);bk(af|0)}function i7(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;g=i;i=i+40|0;h=g|0;j=g+16|0;k=g+32|0;g3(k,b);b=k|0;k=c[b>>2]|0;if((c[4250]|0)==-1){l=1290}else{c[j>>2]=17e3;c[j+4>>2]=16;c[j+8>>2]=0;x=0;aJ(2,17e3,j|0,154);if(!x){l=1290}else{x=0}}L1689:do{if((l|0)==1290){j=(c[4251]|0)-1|0;m=c[k+8>>2]|0;do{if((c[k+12>>2]|0)-m>>2>>>0>j>>>0){n=c[m+(j<<2)>>2]|0;if((n|0)==0){break}o=n;p=c[(c[n>>2]|0)+48>>2]|0;x=0,aM(p|0,o|0,13096,13128,d|0)|0;if(x){x=0;break L1689}o=c[b>>2]|0;if((c[4154]|0)!=-1){c[h>>2]=16616;c[h+4>>2]=16;c[h+8>>2]=0;x=0;aJ(2,16616,h|0,154);if(x){x=0;break L1689}}p=(c[4155]|0)-1|0;n=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-n>>2>>>0>p>>>0){q=c[n+(p<<2)>>2]|0;if((q|0)==0){break}r=q;s=q;t=(x=0,as(c[(c[s>>2]|0)+12>>2]|0,r|0)|0);if(x){x=0;break L1689}c[e>>2]=t;t=(x=0,as(c[(c[s>>2]|0)+16>>2]|0,r|0)|0);if(x){x=0;break L1689}c[f>>2]=t;x=0;aq(c[(c[q>>2]|0)+20>>2]|0,a|0,r|0);if(x){x=0;break L1689}r=c[b>>2]|0;gf(r)|0;i=g;return}}while(0);p=c9(4)|0;ns(p);x=0;aJ(12,p|0,11128,210);if(x){x=0;break L1689}}}while(0);j=c9(4)|0;ns(j);x=0;aJ(12,j|0,11128,210);if(x){x=0;break}}}while(0);g=cu(-1,-1)|0;gf(c[b>>2]|0)|0;bk(g|0)}function i8(b,e,f,g,h,i,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0;if((b|0)==(i|0)){if((a[e]&1)==0){p=-1;return p|0}a[e]=0;i=c[h>>2]|0;c[h>>2]=i+1;a[i]=46;i=d[k]|0;if((i&1|0)==0){q=i>>>1}else{q=c[k+4>>2]|0}if((q|0)==0){p=0;return p|0}q=c[m>>2]|0;if((q-l|0)>=160){p=0;return p|0}i=c[n>>2]|0;c[m>>2]=q+4;c[q>>2]=i;p=0;return p|0}do{if((b|0)==(j|0)){i=d[k]|0;if((i&1|0)==0){r=i>>>1}else{r=c[k+4>>2]|0}if((r|0)==0){break}if((a[e]&1)==0){p=-1;return p|0}i=c[m>>2]|0;if((i-l|0)>=160){p=0;return p|0}q=c[n>>2]|0;c[m>>2]=i+4;c[i>>2]=q;c[n>>2]=0;p=0;return p|0}}while(0);r=o+128|0;j=o;while(1){if((j|0)==(r|0)){s=r;break}if((c[j>>2]|0)==(b|0)){s=j;break}else{j=j+4|0}}j=s-o|0;o=j>>2;if((j|0)>124){p=-1;return p|0}s=a[13096+o|0]|0;do{if((o|0)==25|(o|0)==24){b=c[h>>2]|0;do{if((b|0)!=(g|0)){if((a[b-1|0]&95|0)==(a[f]&127|0)){break}else{p=-1}return p|0}}while(0);c[h>>2]=b+1;a[b]=s;p=0;return p|0}else if((o|0)==22|(o|0)==23){a[f]=80}else{r=a[f]|0;if((s&95|0)!=(r<<24>>24|0)){break}a[f]=r|-128;if((a[e]&1)==0){break}a[e]=0;r=d[k]|0;if((r&1|0)==0){t=r>>>1}else{t=c[k+4>>2]|0}if((t|0)==0){break}r=c[m>>2]|0;if((r-l|0)>=160){break}q=c[n>>2]|0;c[m>>2]=r+4;c[r>>2]=q}}while(0);m=c[h>>2]|0;c[h>>2]=m+1;a[m]=s;if((j|0)>84){p=0;return p|0}c[n>>2]=(c[n>>2]|0)+1;p=0;return p|0}function i9(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0.0,ai=0,aj=0,ak=0,al=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;y=e|0;i7(o,j,y,m,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L1772:do{if(!x){if((a[q]&1)==0){z=j+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=j+1|0;C=z}c[r>>2]=A;z=s|0;c[t>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f|0;E=g|0;F=p|0;G=p+4|0;H=c[m>>2]|0;I=c[n>>2]|0;J=A;L=c[D>>2]|0;L1778:while(1){do{if((L|0)==0){M=0}else{N=c[L+12>>2]|0;if((N|0)==(c[L+16>>2]|0)){O=(x=0,as(c[(c[L>>2]|0)+36>>2]|0,L|0)|0);if(!x){P=O}else{x=0;Q=1384;break L1778}}else{P=c[N>>2]|0}if((P|0)!=-1){M=L;break}c[D>>2]=0;M=0}}while(0);R=(M|0)==0;N=c[E>>2]|0;do{if((N|0)==0){Q=1371}else{O=c[N+12>>2]|0;if((O|0)==(c[N+16>>2]|0)){S=(x=0,as(c[(c[N>>2]|0)+36>>2]|0,N|0)|0);if(!x){T=S}else{x=0;Q=1384;break L1778}}else{T=c[O>>2]|0}if((T|0)==-1){c[E>>2]=0;Q=1371;break}else{O=(N|0)==0;if(R^O){U=N;V=O;break}else{W=J;X=N;Y=O;break L1778}}}}while(0);if((Q|0)==1371){Q=0;if(R){W=J;X=0;Y=1;break}else{U=0;V=1}}N=d[q]|0;O=(N&1|0)==0;if(((c[r>>2]|0)-J|0)==((O?N>>>1:c[G>>2]|0)|0)){if(O){Z=N>>>1;_=N>>>1}else{N=c[G>>2]|0;Z=N;_=N}x=0;aJ(34,p|0,Z<<1|0,0);if(x){x=0;Q=1384;break}if((a[q]&1)==0){$=10}else{$=(c[F>>2]&-2)-1|0}x=0;aJ(34,p|0,$|0,0);if(x){x=0;Q=1384;break}if((a[q]&1)==0){aa=B}else{aa=c[C>>2]|0}c[r>>2]=aa+_;ab=aa}else{ab=J}N=M+12|0;O=c[N>>2]|0;S=M+16|0;if((O|0)==(c[S>>2]|0)){ac=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(!x){ad=ac}else{x=0;Q=1384;break}}else{ad=c[O>>2]|0}if((i8(ad,v,w,ab,r,H,I,o,z,t,u,y)|0)!=0){W=ab;X=U;Y=V;break}O=c[N>>2]|0;if((O|0)==(c[S>>2]|0)){S=c[(c[M>>2]|0)+40>>2]|0;x=0,as(S|0,M|0)|0;if(!x){J=ab;L=M;continue}else{x=0;Q=1384;break}}else{c[N>>2]=O+4;J=ab;L=M;continue}}if((Q|0)==1384){L=cu(-1,-1)|0;ae=K;af=L;gI(p);gI(o);bk(af|0)}L=d[o]|0;if((L&1|0)==0){ag=L>>>1}else{ag=c[o+4>>2]|0}do{if((ag|0)!=0){if((a[v]&1)==0){break}L=c[t>>2]|0;if((L-s|0)>=160){break}J=c[u>>2]|0;c[t>>2]=L+4;c[L>>2]=J}}while(0);ah=(x=0,+(+az(4,W|0,c[r>>2]|0,k|0)));if(x){x=0;break}h[l>>3]=ah;iB(o,z,c[t>>2]|0,k);do{if(R){ai=0}else{J=c[M+12>>2]|0;if((J|0)==(c[M+16>>2]|0)){L=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(!x){aj=L}else{x=0;break L1772}}else{aj=c[J>>2]|0}if((aj|0)!=-1){ai=M;break}c[D>>2]=0;ai=0}}while(0);D=(ai|0)==0;do{if(Y){Q=1414}else{z=c[X+12>>2]|0;if((z|0)==(c[X+16>>2]|0)){J=(x=0,as(c[(c[X>>2]|0)+36>>2]|0,X|0)|0);if(!x){ak=J}else{x=0;break L1772}}else{ak=c[z>>2]|0}if((ak|0)==-1){c[E>>2]=0;Q=1414;break}if(!(D^(X|0)==0)){break}al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}}while(0);do{if((Q|0)==1414){if(D){break}al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;ae=K;af=e;gI(p);gI(o);bk(af|0)}function ja(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0.0,ai=0,aj=0,ak=0,al=0;e=i;i=i+176|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[m>>2];m=e+128|0;n=e+136|0;o=e+144|0;p=e+160|0;q=p;r=i;i=i+4|0;i=i+7&-8;s=i;i=i+160|0;t=i;i=i+4|0;i=i+7&-8;u=i;i=i+4|0;i=i+7&-8;v=i;i=i+1|0;i=i+7&-8;w=i;i=i+1|0;i=i+7&-8;y=e|0;i7(o,j,y,m,n);n0(q|0,0,12);j=p;x=0;aJ(34,p|0,10,0);L1863:do{if(!x){if((a[q]&1)==0){z=j+1|0;A=z;B=z;C=p+8|0}else{z=p+8|0;A=c[z>>2]|0;B=j+1|0;C=z}c[r>>2]=A;z=s|0;c[t>>2]=z;c[u>>2]=0;a[v]=1;a[w]=69;D=f|0;E=g|0;F=p|0;G=p+4|0;H=c[m>>2]|0;I=c[n>>2]|0;J=A;L=c[D>>2]|0;L1869:while(1){do{if((L|0)==0){M=0}else{N=c[L+12>>2]|0;if((N|0)==(c[L+16>>2]|0)){O=(x=0,as(c[(c[L>>2]|0)+36>>2]|0,L|0)|0);if(!x){P=O}else{x=0;Q=1453;break L1869}}else{P=c[N>>2]|0}if((P|0)!=-1){M=L;break}c[D>>2]=0;M=0}}while(0);R=(M|0)==0;N=c[E>>2]|0;do{if((N|0)==0){Q=1440}else{O=c[N+12>>2]|0;if((O|0)==(c[N+16>>2]|0)){S=(x=0,as(c[(c[N>>2]|0)+36>>2]|0,N|0)|0);if(!x){T=S}else{x=0;Q=1453;break L1869}}else{T=c[O>>2]|0}if((T|0)==-1){c[E>>2]=0;Q=1440;break}else{O=(N|0)==0;if(R^O){U=N;V=O;break}else{W=J;X=N;Y=O;break L1869}}}}while(0);if((Q|0)==1440){Q=0;if(R){W=J;X=0;Y=1;break}else{U=0;V=1}}N=d[q]|0;O=(N&1|0)==0;if(((c[r>>2]|0)-J|0)==((O?N>>>1:c[G>>2]|0)|0)){if(O){Z=N>>>1;_=N>>>1}else{N=c[G>>2]|0;Z=N;_=N}x=0;aJ(34,p|0,Z<<1|0,0);if(x){x=0;Q=1453;break}if((a[q]&1)==0){$=10}else{$=(c[F>>2]&-2)-1|0}x=0;aJ(34,p|0,$|0,0);if(x){x=0;Q=1453;break}if((a[q]&1)==0){aa=B}else{aa=c[C>>2]|0}c[r>>2]=aa+_;ab=aa}else{ab=J}N=M+12|0;O=c[N>>2]|0;S=M+16|0;if((O|0)==(c[S>>2]|0)){ac=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(!x){ad=ac}else{x=0;Q=1453;break}}else{ad=c[O>>2]|0}if((i8(ad,v,w,ab,r,H,I,o,z,t,u,y)|0)!=0){W=ab;X=U;Y=V;break}O=c[N>>2]|0;if((O|0)==(c[S>>2]|0)){S=c[(c[M>>2]|0)+40>>2]|0;x=0,as(S|0,M|0)|0;if(!x){J=ab;L=M;continue}else{x=0;Q=1453;break}}else{c[N>>2]=O+4;J=ab;L=M;continue}}if((Q|0)==1453){L=cu(-1,-1)|0;ae=K;af=L;gI(p);gI(o);bk(af|0)}L=d[o]|0;if((L&1|0)==0){ag=L>>>1}else{ag=c[o+4>>2]|0}do{if((ag|0)!=0){if((a[v]&1)==0){break}L=c[t>>2]|0;if((L-s|0)>=160){break}J=c[u>>2]|0;c[t>>2]=L+4;c[L>>2]=J}}while(0);ah=(x=0,+(+az(2,W|0,c[r>>2]|0,k|0)));if(x){x=0;break}h[l>>3]=ah;iB(o,z,c[t>>2]|0,k);do{if(R){ai=0}else{J=c[M+12>>2]|0;if((J|0)==(c[M+16>>2]|0)){L=(x=0,as(c[(c[M>>2]|0)+36>>2]|0,M|0)|0);if(!x){aj=L}else{x=0;break L1863}}else{aj=c[J>>2]|0}if((aj|0)!=-1){ai=M;break}c[D>>2]=0;ai=0}}while(0);D=(ai|0)==0;do{if(Y){Q=1483}else{z=c[X+12>>2]|0;if((z|0)==(c[X+16>>2]|0)){J=(x=0,as(c[(c[X>>2]|0)+36>>2]|0,X|0)|0);if(!x){ak=J}else{x=0;break L1863}}else{ak=c[z>>2]|0}if((ak|0)==-1){c[E>>2]=0;Q=1483;break}if(!(D^(X|0)==0)){break}al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}}while(0);do{if((Q|0)==1483){if(D){break}al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}}while(0);c[k>>2]=c[k>>2]|2;al=b|0;c[al>>2]=ai;gI(p);gI(o);i=e;return}else{x=0}}while(0);e=cu(-1,-1)|0;ae=K;af=e;gI(p);gI(o);bk(af|0)}function jb(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0;e=i;i=i+136|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+120|0;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+12|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+160|0;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+4|0;i=i+7&-8;n0(n|0,0,12);u=p;x=0;aq(96,o|0,h|0);if(x){x=0;h=cu(-1,-1)|0;v=K;w=h;gI(n);y=w;z=0;A=y;B=v;bk(A|0)}h=o|0;o=c[h>>2]|0;if((c[4250]|0)==-1){C=1495}else{c[l>>2]=17e3;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17e3,l|0,154);if(!x){C=1495}else{x=0}}L1960:do{if((C|0)==1495){l=(c[4251]|0)-1|0;D=c[o+8>>2]|0;do{if((c[o+12>>2]|0)-D>>2>>>0>l>>>0){E=c[D+(l<<2)>>2]|0;if((E|0)==0){break}F=E;G=m|0;H=c[(c[E>>2]|0)+48>>2]|0;x=0,aM(H|0,F|0,13096,13122,G|0)|0;if(x){x=0;break L1960}F=c[h>>2]|0;gf(F)|0;n0(u|0,0,12);F=p;x=0;aJ(34,p|0,10,0);L1966:do{if(!x){if((a[u]&1)==0){H=F+1|0;I=H;J=H;L=p+8|0}else{H=p+8|0;I=c[H>>2]|0;J=F+1|0;L=H}c[q>>2]=I;H=r|0;c[s>>2]=H;c[t>>2]=0;E=f|0;M=g|0;N=p|0;O=p+4|0;P=I;Q=c[E>>2]|0;L1972:while(1){do{if((Q|0)==0){R=0}else{S=c[Q+12>>2]|0;if((S|0)==(c[Q+16>>2]|0)){T=(x=0,as(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0);if(!x){U=T}else{x=0;C=1532;break L1972}}else{U=c[S>>2]|0}if((U|0)!=-1){R=Q;break}c[E>>2]=0;R=0}}while(0);S=(R|0)==0;T=c[M>>2]|0;do{if((T|0)==0){C=1517}else{V=c[T+12>>2]|0;if((V|0)==(c[T+16>>2]|0)){W=(x=0,as(c[(c[T>>2]|0)+36>>2]|0,T|0)|0);if(!x){X=W}else{x=0;C=1532;break L1972}}else{X=c[V>>2]|0}if((X|0)==-1){c[M>>2]=0;C=1517;break}else{if(S^(T|0)==0){break}else{Y=P;break L1972}}}}while(0);if((C|0)==1517){C=0;if(S){Y=P;break}}T=d[u]|0;V=(T&1|0)==0;if(((c[q>>2]|0)-P|0)==((V?T>>>1:c[O>>2]|0)|0)){if(V){Z=T>>>1;_=T>>>1}else{T=c[O>>2]|0;Z=T;_=T}x=0;aJ(34,p|0,Z<<1|0,0);if(x){x=0;C=1532;break}if((a[u]&1)==0){$=10}else{$=(c[N>>2]&-2)-1|0}x=0;aJ(34,p|0,$|0,0);if(x){x=0;C=1532;break}if((a[u]&1)==0){aa=J}else{aa=c[L>>2]|0}c[q>>2]=aa+_;ab=aa}else{ab=P}T=R+12|0;V=c[T>>2]|0;W=R+16|0;if((V|0)==(c[W>>2]|0)){ac=(x=0,as(c[(c[R>>2]|0)+36>>2]|0,R|0)|0);if(!x){ad=ac}else{x=0;C=1532;break}}else{ad=c[V>>2]|0}if((i0(ad,16,ab,q,t,0,n,H,s,G)|0)!=0){Y=ab;break}V=c[T>>2]|0;if((V|0)==(c[W>>2]|0)){W=c[(c[R>>2]|0)+40>>2]|0;x=0,as(W|0,R|0)|0;if(!x){P=ab;Q=R;continue}else{x=0;C=1532;break}}else{c[T>>2]=V+4;P=ab;Q=R;continue}}if((C|0)==1532){Q=cu(-1,-1)|0;ae=K;af=Q;break}a[Y+3|0]=0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}Q=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=Q;break}else{x=0;Q=cu(-1,-1)|0;ae=K;af=Q;break L1966}}}while(0);Q=(x=0,aM(30,Y|0,c[3894]|0,2656,(P=i,i=i+8|0,c[P>>2]=k,P)|0)|0);i=P;if(x){x=0;C=1533;break}if((Q|0)!=1){c[j>>2]=4}Q=c[E>>2]|0;do{if((Q|0)==0){ag=0}else{P=c[Q+12>>2]|0;if((P|0)==(c[Q+16>>2]|0)){H=(x=0,as(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0);if(!x){ah=H}else{x=0;C=1533;break L1966}}else{ah=c[P>>2]|0}if((ah|0)!=-1){ag=Q;break}c[E>>2]=0;ag=0}}while(0);E=(ag|0)==0;Q=c[M>>2]|0;do{if((Q|0)==0){C=1562}else{P=c[Q+12>>2]|0;if((P|0)==(c[Q+16>>2]|0)){H=(x=0,as(c[(c[Q>>2]|0)+36>>2]|0,Q|0)|0);if(!x){ai=H}else{x=0;C=1533;break L1966}}else{ai=c[P>>2]|0}if((ai|0)==-1){c[M>>2]=0;C=1562;break}if(!(E^(Q|0)==0)){break}aj=b|0;c[aj>>2]=ag;gI(p);gI(n);i=e;return}}while(0);do{if((C|0)==1562){if(E){break}aj=b|0;c[aj>>2]=ag;gI(p);gI(n);i=e;return}}while(0);c[j>>2]=c[j>>2]|2;aj=b|0;c[aj>>2]=ag;gI(p);gI(n);i=e;return}else{x=0;C=1533}}while(0);if((C|0)==1533){G=cu(-1,-1)|0;ae=K;af=G}gI(p);v=ae;w=af;gI(n);y=w;z=0;A=y;B=v;bk(A|0)}}while(0);l=c9(4)|0;ns(l);x=0;aJ(12,l|0,11128,210);if(x){x=0;break}}}while(0);af=cu(-1,-1)|0;ae=K;gf(c[h>>2]|0)|0;v=ae;w=af;gI(n);y=w;z=0;A=y;B=v;bk(A|0)}function jc(a){a=a|0;gd(a|0);nU(a);return}function jd(a){a=a|0;gd(a|0);return}function je(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];dF[o&63](b,d,l,f,g,h&1);i=j;return}g3(m,f);f=m|0;m=c[f>>2]|0;if((c[4156]|0)==-1){p=1579}else{c[k>>2]=16624;c[k+4>>2]=16;c[k+8>>2]=0;x=0;aJ(2,16624,k|0,154);if(!x){p=1579}else{x=0}}do{if((p|0)==1579){k=(c[4157]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;o=c[f>>2]|0;gf(o)|0;o=c[l>>2]|0;if(h){dx[c[o+24>>2]&255](n,d)}else{dx[c[o+28>>2]&255](n,d)}d=n;o=n;l=a[o]|0;if((l&1)==0){q=d+1|0;r=q;s=q;t=n+8|0}else{q=n+8|0;r=c[q>>2]|0;s=d+1|0;t=q}q=e|0;d=n+4|0;u=r;v=l;L2084:while(1){if((v&1)==0){w=s}else{w=c[t>>2]|0}l=v&255;if((u|0)==(w+((l&1|0)==0?l>>>1:c[d>>2]|0)|0)){p=1602;break}l=a[u]|0;y=c[q>>2]|0;do{if((y|0)!=0){z=y+24|0;A=c[z>>2]|0;if((A|0)!=(c[y+28>>2]|0)){c[z>>2]=A+1;a[A]=l;break}A=(x=0,aF(c[(c[y>>2]|0)+52>>2]|0,y|0,l&255|0)|0);if(x){x=0;p=1601;break L2084}if((A|0)!=-1){break}c[q>>2]=0}}while(0);u=u+1|0;v=a[o]|0}if((p|0)==1601){o=cu(-1,-1)|0;v=K;gI(n);B=v;C=o;D=C;E=0;F=D;G=B;bk(F|0)}else if((p|0)==1602){c[b>>2]=c[q>>2];gI(n);i=j;return}}}while(0);k=c9(4)|0;ns(k);x=0;aJ(12,k|0,11128,210);if(x){x=0;break}}}while(0);j=cu(-1,-1)|0;n=K;gf(c[f>>2]|0)|0;B=n;C=j;D=C;E=0;F=D;G=B;bk(F|0)}function jf(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[4304]|0;a[q+1|0]=a[4305|0]|0;a[q+2|0]=a[4306|0]|0;a[q+3|0]=a[4307|0]|0;a[q+4|0]=a[4308|0]|0;a[q+5|0]=a[4309|0]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=k|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}t=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=t;break}else{x=0;t=cu(-1,-1)|0;bk(t|0)}}}while(0);t=jg(u,12,c[3894]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){y=1630;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=1630;break}w=k+2|0}else if((h|0)==32){w=q}else{y=1630}}while(0);if((y|0)==1630){w=u}y=l|0;g3(o,f);x=0;aB(8,u|0,w|0,q|0,y|0,m|0,n|0,o|0);if(!x){q=c[o>>2]|0;gf(q)|0;c[p>>2]=c[e>>2];ej(b,p,y,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[o>>2]|0;gf(g)|0;bk(d|0)}}function jg(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0;g=i;i=i+16|0;h=g|0;j=h;c[j>>2]=f;c[j+4>>2]=0;j=cP(d|0)|0;d=cQ(a|0,b|0,e|0,h|0)|0;if((j|0)==0){i=g;return d|0}x=0,as(48,j|0)|0;if(!x){i=g;return d|0}else{x=0;cu(-1,-1,0)|0;cA();return 0}return 0}function jh(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4252]|0)!=-1){c[n>>2]=17008;c[n+4>>2]=16;c[n+8>>2]=0;gD(17008,n,154)}n=(c[4253]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}r=k;s=c[p>>2]|0;if((c[4156]|0)!=-1){c[m>>2]=16624;c[m+4>>2]=16;c[m+8>>2]=0;gD(16624,m,154)}m=(c[4157]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}t=s;dx[c[(c[s>>2]|0)+20>>2]&255](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}L2172:do{if((v|0)==0){p=c[(c[k>>2]|0)+32>>2]|0;x=0,aM(p|0,r|0,b|0,f|0,g|0)|0;if(x){x=0;w=1657;break}c[j>>2]=g+(f-b)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=(x=0,aF(c[(c[k>>2]|0)+28>>2]|0,r|0,p|0)|0);if(x){x=0;w=1657;break}p=c[j>>2]|0;c[j>>2]=p+1;a[p]=n;y=b+1|0}else{y=b}do{if((f-y|0)>1){if((a[y]|0)!=48){z=y;break}n=y+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){z=y;break}p=k;q=(x=0,aF(c[(c[p>>2]|0)+28>>2]|0,r|0,48)|0);if(x){x=0;w=1657;break L2172}A=c[j>>2]|0;c[j>>2]=A+1;a[A]=q;q=(x=0,aF(c[(c[p>>2]|0)+28>>2]|0,r|0,a[n]|0)|0);if(x){x=0;w=1657;break L2172}n=c[j>>2]|0;c[j>>2]=n+1;a[n]=q;z=y+2|0}else{z=y}}while(0);do{if((z|0)!=(f|0)){q=f-1|0;if(z>>>0<q>>>0){B=z;C=q}else{break}do{q=a[B]|0;a[B]=a[C]|0;a[C]=q;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=(x=0,as(c[(c[s>>2]|0)+16>>2]|0,t|0)|0);if(x){x=0;w=1657;break}L2193:do{if(z>>>0<f>>>0){n=u+1|0;p=k;A=o+4|0;D=o+8|0;E=0;F=0;G=z;while(1){H=(a[m]&1)==0;do{if((a[(H?n:c[D>>2]|0)+F|0]|0)==0){I=F;J=E}else{if((E|0)!=(a[(H?n:c[D>>2]|0)+F|0]|0)){I=F;J=E;break}L=c[j>>2]|0;c[j>>2]=L+1;a[L]=q;L=d[m]|0;I=(F>>>0<(((L&1|0)==0?L>>>1:c[A>>2]|0)-1|0)>>>0)+F|0;J=0}}while(0);H=(x=0,aF(c[(c[p>>2]|0)+28>>2]|0,r|0,a[G]|0)|0);if(x){x=0;break}L=c[j>>2]|0;c[j>>2]=L+1;a[L]=H;H=G+1|0;if(H>>>0<f>>>0){E=J+1|0;F=I;G=H}else{break L2193}}G=cu(-1,-1)|0;M=K;N=G;gI(o);bk(N|0)}}while(0);q=g+(z-b)|0;G=c[j>>2]|0;if((q|0)==(G|0)){break}F=G-1|0;if(q>>>0<F>>>0){O=q;P=F}else{break}do{F=a[O]|0;a[O]=a[P]|0;a[P]=F;O=O+1|0;P=P-1|0;}while(O>>>0<P>>>0)}}while(0);if((w|0)==1657){w=cu(-1,-1)|0;M=K;N=w;gI(o);bk(N|0)}if((e|0)==(f|0)){Q=c[j>>2]|0;c[h>>2]=Q;gI(o);i=l;return}else{Q=g+(e-b)|0;c[h>>2]=Q;gI(o);i=l;return}}function ji(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=100}}while(0);u=l|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}t=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=t;break}else{x=0;t=cu(-1,-1)|0;bk(t|0)}}}while(0);t=jg(u,22,c[3894]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){y=1715;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=1715;break}w=l+2|0}else if((j|0)==32){w=r}else{y=1715}}while(0);if((y|0)==1715){w=u}y=m|0;g3(p,f);x=0;aB(8,u|0,w|0,r|0,y|0,n|0,o|0,p|0);if(!x){r=c[p>>2]|0;gf(r)|0;c[q>>2]=c[e>>2];ej(b,q,y,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[p>>2]|0;gf(g)|0;bk(d|0)}}function jj(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+80|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+72|0;q=j|0;a[q]=a[4304]|0;a[q+1|0]=a[4305|0]|0;a[q+2|0]=a[4306|0]|0;a[q+3|0]=a[4307|0]|0;a[q+4|0]=a[4308|0]|0;a[q+5|0]=a[4309|0]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=k|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}t=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=t;break}else{x=0;t=cu(-1,-1)|0;bk(t|0)}}}while(0);t=jg(u,12,c[3894]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+t|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((t|0)>1&s<<24>>24==48)){y=1740;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=1740;break}w=k+2|0}else if((h|0)==32){w=q}else{y=1740}}while(0);if((y|0)==1740){w=u}y=l|0;g3(o,f);x=0;aB(8,u|0,w|0,q|0,y|0,m|0,n|0,o|0);if(!x){q=c[o>>2]|0;gf(q)|0;c[p>>2]=c[e>>2];ej(b,p,y,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[o>>2]|0;gf(g)|0;bk(d|0)}}function jk(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+112|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+80|0;o=d+88|0;p=d+96|0;q=d+104|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==64){a[u]=111}else if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else{a[u]=117}}while(0);u=l|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}t=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=t;break}else{x=0;t=cu(-1,-1)|0;bk(t|0)}}}while(0);t=jg(u,23,c[3894]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+t|0;j=c[s>>2]&176;do{if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((t|0)>1&s<<24>>24==48)){y=1765;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=1765;break}w=l+2|0}else if((j|0)==32){w=r}else{y=1765}}while(0);if((y|0)==1765){w=u}y=m|0;g3(p,f);x=0;aB(8,u|0,w|0,r|0,y|0,n|0,o|0,p|0);if(!x){r=c[p>>2]|0;gf(r)|0;c[q>>2]=c[e>>2];ej(b,q,y,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[p>>2]|0;gf(g)|0;bk(d|0)}}function jl(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){y=w}else{a[w]=35;y=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[y]=97;z=0;break}else{a[y]=65;z=0;break}}else{a[y]=46;v=y+2|0;a[y+1|0]=42;if((w|0)==256){if((k&1|0)==0){a[v]=101;z=1;break}else{a[v]=69;z=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;z=1;break}else{a[v]=70;z=1;break}}else{if((k&1|0)==0){a[v]=103;z=1;break}else{a[v]=71;z=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;bk(l|0)}}}while(0);l=c[3894]|0;if(z){w=jg(k,30,l,t,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0;i=A;B=w}else{w=jg(k,30,l,t,(A=i,i=i+8|0,h[A>>3]=j,A)|0)|0;i=A;B=w}L2360:do{if((B|0)>29){w=(a[17696]|0)==0;L2363:do{if(z){do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L2363}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=1812}else{x=0;F=1804}}else{do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L2363}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=1812}else{x=0;F=1804}}}while(0);do{if((F|0)==1812){w=c[m>>2]|0;if((w|0)!=0){G=E;H=w;I=w;break L2360}x=0;aK(4);if(x){x=0;F=1804;break}w=c[m>>2]|0;G=E;H=w;I=w;break L2360}}while(0);if((F|0)==1804){w=cu(-1,-1)|0;C=K;D=w}J=C;L=D;M=L;N=0;O=M;P=J;bk(O|0)}else{G=B;H=0;I=c[m>>2]|0}}while(0);B=I+G|0;D=c[u>>2]&176;do{if((D|0)==32){Q=B}else if((D|0)==16){u=a[I]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){Q=I+1|0;break}if(!((G|0)>1&u<<24>>24==48)){F=1821;break}u=a[I+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){F=1821;break}Q=I+2|0}else{F=1821}}while(0);if((F|0)==1821){Q=I}do{if((I|0)==(k|0)){R=n|0;S=0;T=k;F=1827}else{D=nN(G<<1)|0;if((D|0)!=0){R=D;S=D;T=I;F=1827;break}x=0;aK(4);if(x){x=0;U=0;F=1826;break}R=0;S=0;T=c[m>>2]|0;F=1827}}while(0);do{if((F|0)==1827){x=0;aq(96,q|0,f|0);if(x){x=0;U=S;F=1826;break}x=0;aB(36,T|0,Q|0,B|0,R|0,o|0,p|0,q|0);if(x){x=0;m=cu(-1,-1)|0;I=m;m=K;G=c[q>>2]|0;gf(G)|0;V=I;W=m;X=S;break}m=c[q>>2]|0;gf(m)|0;m=e|0;c[s>>2]=c[m>>2];x=0;aB(28,r|0,s|0,R|0,c[o>>2]|0,c[p>>2]|0,f|0,g|0);if(x){x=0;U=S;F=1826;break}I=c[r>>2]|0;c[m>>2]=I;c[b>>2]=I;if((S|0)!=0){nO(S)}if((H|0)==0){i=d;return}nO(H);i=d;return}}while(0);if((F|0)==1826){F=cu(-1,-1)|0;V=F;W=K;X=U}if((X|0)!=0){nO(X)}if((H|0)==0){J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}nO(H);J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}function jm(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=i;i=i+16|0;g=f|0;h=g;c[h>>2]=e;c[h+4>>2]=0;h=cP(b|0)|0;b=(x=0,au(64,a|0,d|0,g|0)|0);if(!x){if((h|0)==0){i=f;return b|0}x=0,as(48,h|0)|0;if(!x){i=f;return b|0}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else{x=0;b=cu(-1,-1)|0;if((h|0)==0){bk(b|0)}x=0,as(48,h|0)|0;if(!x){bk(b|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}return 0}function jn(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4252]|0)!=-1){c[n>>2]=17008;c[n+4>>2]=16;c[n+8>>2]=0;gD(17008,n,154)}n=(c[4253]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}r=k;s=c[p>>2]|0;if((c[4156]|0)!=-1){c[m>>2]=16624;c[m+4>>2]=16;c[m+8>>2]=0;gD(16624,m,154)}m=(c[4157]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}t=s;dx[c[(c[s>>2]|0)+20>>2]&255](o,t);c[j>>2]=g;u=a[b]|0;do{if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=(x=0,aF(c[(c[k>>2]|0)+28>>2]|0,r|0,u|0)|0);if(x){x=0;break}p=c[j>>2]|0;c[j>>2]=p+1;a[p]=m;v=b+1|0;w=1878}else{v=b;w=1878}}while(0);L2465:do{if((w|0)==1878){u=f;L2467:do{if((u-v|0)>1){if((a[v]|0)!=48){y=v;w=1892;break}m=v+1|0;p=a[m]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){y=v;w=1892;break}p=k;n=(x=0,aF(c[(c[p>>2]|0)+28>>2]|0,r|0,48)|0);if(x){x=0;break L2465}q=c[j>>2]|0;c[j>>2]=q+1;a[q]=n;n=v+2|0;q=(x=0,aF(c[(c[p>>2]|0)+28>>2]|0,r|0,a[m]|0)|0);if(x){x=0;break L2465}m=c[j>>2]|0;c[j>>2]=m+1;a[m]=q;q=n;L2473:while(1){if(q>>>0>=f>>>0){z=q;A=n;break L2467}m=a[q]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}p=(x=0,au(12,2147483647,2800,0)|0);if(x){x=0;w=1889;break L2473}c[3894]=p}}while(0);p=(x=0,aF(70,m<<24>>24|0,c[3894]|0)|0);if(x){x=0;w=1875;break}if((p|0)==0){z=q;A=n;break L2467}else{q=q+1|0}}if((w|0)==1889){q=cu(-1,-1)|0;B=K;C=q;gI(o);bk(C|0)}else if((w|0)==1875){q=cu(-1,-1)|0;B=K;C=q;gI(o);bk(C|0)}}else{y=v;w=1892}}while(0);L2487:do{if((w|0)==1892){L2488:while(1){w=0;if(y>>>0>=f>>>0){z=y;A=v;break L2487}q=a[y]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}n=(x=0,au(12,2147483647,2800,0)|0);if(x){x=0;w=1897;break L2488}c[3894]=n}}while(0);m=(x=0,aF(26,q<<24>>24|0,c[3894]|0)|0);if(x){x=0;w=1874;break}if((m|0)==0){z=y;A=v;break L2487}else{y=y+1|0;w=1892}}if((w|0)==1874){m=cu(-1,-1)|0;B=K;C=m;gI(o);bk(C|0)}else if((w|0)==1897){m=cu(-1,-1)|0;B=K;C=m;gI(o);bk(C|0)}}}while(0);m=o;n=o;p=d[n]|0;if((p&1|0)==0){D=p>>>1}else{D=c[o+4>>2]|0}do{if((D|0)==0){p=c[j>>2]|0;E=c[(c[k>>2]|0)+32>>2]|0;x=0,aM(E|0,r|0,A|0,z|0,p|0)|0;if(x){x=0;break L2465}c[j>>2]=(c[j>>2]|0)+(z-A)}else{do{if((A|0)!=(z|0)){p=z-1|0;if(A>>>0<p>>>0){F=A;G=p}else{break}do{p=a[F]|0;a[F]=a[G]|0;a[G]=p;F=F+1|0;G=G-1|0;}while(F>>>0<G>>>0)}}while(0);q=(x=0,as(c[(c[s>>2]|0)+16>>2]|0,t|0)|0);if(x){x=0;break L2465}L2517:do{if(A>>>0<z>>>0){p=m+1|0;E=o+4|0;H=o+8|0;I=k;J=0;L=0;M=A;while(1){N=(a[n]&1)==0;do{if((a[(N?p:c[H>>2]|0)+L|0]|0)>0){if((J|0)!=(a[(N?p:c[H>>2]|0)+L|0]|0)){O=L;P=J;break}Q=c[j>>2]|0;c[j>>2]=Q+1;a[Q]=q;Q=d[n]|0;O=(L>>>0<(((Q&1|0)==0?Q>>>1:c[E>>2]|0)-1|0)>>>0)+L|0;P=0}else{O=L;P=J}}while(0);N=(x=0,aF(c[(c[I>>2]|0)+28>>2]|0,r|0,a[M]|0)|0);if(x){x=0;break}Q=c[j>>2]|0;c[j>>2]=Q+1;a[Q]=N;N=M+1|0;if(N>>>0<z>>>0){J=P+1|0;L=O;M=N}else{break L2517}}M=cu(-1,-1)|0;B=K;C=M;gI(o);bk(C|0)}}while(0);q=g+(A-b)|0;M=c[j>>2]|0;if((q|0)==(M|0)){break}L=M-1|0;if(q>>>0<L>>>0){R=q;S=L}else{break}do{L=a[R]|0;a[R]=a[S]|0;a[S]=L;R=R+1|0;S=S-1|0;}while(R>>>0<S>>>0)}}while(0);L2533:do{if(z>>>0<f>>>0){n=k;m=z;while(1){L=a[m]|0;if(L<<24>>24==46){w=1923;break}q=(x=0,aF(c[(c[n>>2]|0)+28>>2]|0,r|0,L|0)|0);if(x){x=0;w=1872;break}L=c[j>>2]|0;c[j>>2]=L+1;a[L]=q;q=m+1|0;if(q>>>0<f>>>0){m=q}else{T=q;break L2533}}if((w|0)==1923){n=(x=0,as(c[(c[s>>2]|0)+12>>2]|0,t|0)|0);if(x){x=0;break L2465}q=c[j>>2]|0;c[j>>2]=q+1;a[q]=n;T=m+1|0;break}else if((w|0)==1872){n=cu(-1,-1)|0;B=K;C=n;gI(o);bk(C|0)}}else{T=z}}while(0);n=c[j>>2]|0;q=c[(c[k>>2]|0)+32>>2]|0;x=0,aM(q|0,r|0,T|0,f|0,n|0)|0;if(x){x=0;break}n=(c[j>>2]|0)+(u-T)|0;c[j>>2]=n;if((e|0)==(f|0)){U=n;c[h>>2]=U;gI(o);i=l;return}U=g+(e-b)|0;c[h>>2]=U;gI(o);i=l;return}}while(0);l=cu(-1,-1)|0;B=K;C=l;gI(o);bk(C|0)}function jo(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+152|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+112|0;p=d+120|0;q=d+128|0;r=d+136|0;s=d+144|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){y=w}else{a[w]=35;y=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[y]=76;v=y+1|0;if((k&1|0)==0){a[v]=97;z=0;break}else{a[v]=65;z=0;break}}else{a[y]=46;a[y+1|0]=42;a[y+2|0]=76;v=y+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;z=1;break}else{a[v]=69;z=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;z=1;break}else{a[v]=70;z=1;break}}else{if((k&1|0)==0){a[v]=103;z=1;break}else{a[v]=71;z=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;bk(l|0)}}}while(0);l=c[3894]|0;if(z){w=jg(k,30,l,t,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0;i=A;B=w}else{w=jg(k,30,l,t,(A=i,i=i+8|0,h[A>>3]=j,A)|0)|0;i=A;B=w}L2590:do{if((B|0)>29){w=(a[17696]|0)==0;L2592:do{if(z){do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L2592}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=1987}else{x=0;F=1979}}else{do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L2592}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+8|0,h[A>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=1987}else{x=0;F=1979}}}while(0);do{if((F|0)==1987){w=c[m>>2]|0;if((w|0)!=0){G=E;H=w;I=w;break L2590}x=0;aK(4);if(x){x=0;F=1979;break}w=c[m>>2]|0;G=E;H=w;I=w;break L2590}}while(0);if((F|0)==1979){w=cu(-1,-1)|0;C=K;D=w}J=C;L=D;M=L;N=0;O=M;P=J;bk(O|0)}else{G=B;H=0;I=c[m>>2]|0}}while(0);B=I+G|0;D=c[u>>2]&176;do{if((D|0)==32){Q=B}else if((D|0)==16){u=a[I]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){Q=I+1|0;break}if(!((G|0)>1&u<<24>>24==48)){F=1996;break}u=a[I+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){F=1996;break}Q=I+2|0}else{F=1996}}while(0);if((F|0)==1996){Q=I}do{if((I|0)==(k|0)){R=n|0;S=0;T=k;F=2002}else{D=nN(G<<1)|0;if((D|0)!=0){R=D;S=D;T=I;F=2002;break}x=0;aK(4);if(x){x=0;U=0;F=2001;break}R=0;S=0;T=c[m>>2]|0;F=2002}}while(0);do{if((F|0)==2002){x=0;aq(96,q|0,f|0);if(x){x=0;U=S;F=2001;break}x=0;aB(36,T|0,Q|0,B|0,R|0,o|0,p|0,q|0);if(x){x=0;m=cu(-1,-1)|0;I=m;m=K;G=c[q>>2]|0;gf(G)|0;V=I;W=m;X=S;break}m=c[q>>2]|0;gf(m)|0;m=e|0;c[s>>2]=c[m>>2];x=0;aB(28,r|0,s|0,R|0,c[o>>2]|0,c[p>>2]|0,f|0,g|0);if(x){x=0;U=S;F=2001;break}I=c[r>>2]|0;c[m>>2]=I;c[b>>2]=I;if((S|0)!=0){nO(S)}if((H|0)==0){i=d;return}nO(H);i=d;return}}while(0);if((F|0)==2001){F=cu(-1,-1)|0;V=F;W=K;X=U}if((X|0)!=0){nO(X)}if((H|0)==0){J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}nO(H);J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}function jp(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;d=i;i=i+104|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+88|0;n=d+96|0;o=d+16|0;a[o]=a[4312]|0;a[o+1|0]=a[4313|0]|0;a[o+2|0]=a[4314|0]|0;a[o+3|0]=a[4315|0]|0;a[o+4|0]=a[4316|0]|0;a[o+5|0]=a[4317|0]|0;p=k|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}q=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=q;break}else{x=0;q=cu(-1,-1)|0;bk(q|0)}}}while(0);q=jg(p,20,c[3894]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=2032;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=2032;break}s=k+2|0}else if((h|0)==32){s=o}else{t=2032}}while(0);if((t|0)==2032){s=p}g3(m,f);t=m|0;m=c[t>>2]|0;do{if((c[4252]|0)!=-1){c[j>>2]=17008;c[j+4>>2]=16;c[j+8>>2]=0;x=0;aJ(2,17008,j|0,154);if(!x){break}else{x=0}u=cu(-1,-1)|0;v=K;w=c[t>>2]|0;y=w|0;z=gf(y)|0;bk(u|0)}}while(0);j=(c[4253]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}A=r;B=c[t>>2]|0;gf(B)|0;B=l|0;C=c[(c[r>>2]|0)+32>>2]|0;dT[C&63](A,p,o,B)|0;A=l+q|0;if((s|0)==(o|0)){D=A;E=e|0;F=c[E>>2]|0;G=n|0;c[G>>2]=F;ej(b,n,B,D,A,f,g);i=d;return}D=l+(s-k)|0;E=e|0;F=c[E>>2]|0;G=n|0;c[G>>2]=F;ej(b,n,B,D,A,f,g);i=d;return}}while(0);d=c9(4)|0;ns(d);x=0;aJ(12,d|0,11128,210);if(x){x=0;u=cu(-1,-1)|0;v=K;w=c[t>>2]|0;y=w|0;z=gf(y)|0;bk(u|0)}}function jq(a){a=a|0;gd(a|0);nU(a);return}function jr(a){a=a|0;gd(a|0);return}function js(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;j=i;i=i+48|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+16|0;m=j+24|0;n=j+32|0;if((c[f+4>>2]&1|0)==0){o=c[(c[d>>2]|0)+24>>2]|0;c[l>>2]=c[e>>2];dF[o&63](b,d,l,f,g,h&1);i=j;return}g3(m,f);f=m|0;m=c[f>>2]|0;if((c[4154]|0)==-1){p=2053}else{c[k>>2]=16616;c[k+4>>2]=16;c[k+8>>2]=0;x=0;aJ(2,16616,k|0,154);if(!x){p=2053}else{x=0}}do{if((p|0)==2053){k=(c[4155]|0)-1|0;g=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-g>>2>>>0>k>>>0){l=c[g+(k<<2)>>2]|0;if((l|0)==0){break}d=l;o=c[f>>2]|0;gf(o)|0;o=c[l>>2]|0;if(h){dx[c[o+24>>2]&255](n,d)}else{dx[c[o+28>>2]&255](n,d)}d=n;o=a[d]|0;if((o&1)==0){l=n+4|0;q=l;r=l;s=n+8|0}else{l=n+8|0;q=c[l>>2]|0;r=n+4|0;s=l}l=e|0;t=q;u=o;L2712:while(1){if((u&1)==0){v=r}else{v=c[s>>2]|0}o=u&255;if((o&1|0)==0){w=o>>>1}else{w=c[r>>2]|0}if((t|0)==(v+(w<<2)|0)){p=2079;break}o=c[t>>2]|0;y=c[l>>2]|0;do{if((y|0)!=0){z=y+24|0;A=c[z>>2]|0;if((A|0)==(c[y+28>>2]|0)){B=(x=0,aF(c[(c[y>>2]|0)+52>>2]|0,y|0,o|0)|0);if(!x){C=B}else{x=0;p=2078;break L2712}}else{c[z>>2]=A+4;c[A>>2]=o;C=o}if((C|0)!=-1){break}c[l>>2]=0}}while(0);t=t+4|0;u=a[d]|0}if((p|0)==2079){c[b>>2]=c[l>>2];gV(n);i=j;return}else if((p|0)==2078){d=cu(-1,-1)|0;u=K;gV(n);D=u;E=d;F=E;G=0;H=F;I=D;bk(H|0)}}}while(0);k=c9(4)|0;ns(k);x=0;aJ(12,k|0,11128,210);if(x){x=0;break}}}while(0);n=cu(-1,-1)|0;p=K;gf(c[f>>2]|0)|0;D=p;E=n;F=E;G=0;H=F;I=D;bk(H|0)}function jt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[4304]|0;a[q+1|0]=a[4305|0]|0;a[q+2|0]=a[4306|0]|0;a[q+3|0]=a[4307|0]|0;a[q+4|0]=a[4308|0]|0;a[q+5|0]=a[4309|0]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=k|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}v=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=v;break}else{x=0;v=cu(-1,-1)|0;bk(v|0)}}}while(0);v=jg(u,12,c[3894]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){y=2107;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=2107;break}w=k+2|0}else if((h|0)==32){w=q}else{y=2107}}while(0);if((y|0)==2107){w=u}y=l|0;g3(o,f);x=0;aB(20,u|0,w|0,q|0,y|0,m|0,n|0,o|0);if(!x){q=c[o>>2]|0;gf(q)|0;c[p>>2]=c[e>>2];jv(b,p,y,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[o>>2]|0;gf(g)|0;bk(d|0)}}function ju(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4250]|0)!=-1){c[n>>2]=17e3;c[n+4>>2]=16;c[n+8>>2]=0;gD(17e3,n,154)}n=(c[4251]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}r=k;s=c[p>>2]|0;if((c[4154]|0)!=-1){c[m>>2]=16616;c[m+4>>2]=16;c[m+8>>2]=0;gD(16616,m,154)}m=(c[4155]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}t=s;dx[c[(c[s>>2]|0)+20>>2]&255](o,t);u=o;m=o;p=d[m]|0;if((p&1|0)==0){v=p>>>1}else{v=c[o+4>>2]|0}L2797:do{if((v|0)==0){p=c[(c[k>>2]|0)+48>>2]|0;x=0,aM(p|0,r|0,b|0,f|0,g|0)|0;if(x){x=0;w=2128;break}c[j>>2]=g+(f-b<<2)}else{c[j>>2]=g;p=a[b]|0;if((p<<24>>24|0)==45|(p<<24>>24|0)==43){n=(x=0,aF(c[(c[k>>2]|0)+44>>2]|0,r|0,p|0)|0);if(x){x=0;w=2128;break}p=c[j>>2]|0;c[j>>2]=p+4;c[p>>2]=n;y=b+1|0}else{y=b}do{if((f-y|0)>1){if((a[y]|0)!=48){z=y;break}n=y+1|0;p=a[n]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){z=y;break}p=k;q=(x=0,aF(c[(c[p>>2]|0)+44>>2]|0,r|0,48)|0);if(x){x=0;w=2128;break L2797}A=c[j>>2]|0;c[j>>2]=A+4;c[A>>2]=q;q=(x=0,aF(c[(c[p>>2]|0)+44>>2]|0,r|0,a[n]|0)|0);if(x){x=0;w=2128;break L2797}n=c[j>>2]|0;c[j>>2]=n+4;c[n>>2]=q;z=y+2|0}else{z=y}}while(0);do{if((z|0)!=(f|0)){q=f-1|0;if(z>>>0<q>>>0){B=z;C=q}else{break}do{q=a[B]|0;a[B]=a[C]|0;a[C]=q;B=B+1|0;C=C-1|0;}while(B>>>0<C>>>0)}}while(0);q=(x=0,as(c[(c[s>>2]|0)+16>>2]|0,t|0)|0);if(x){x=0;w=2128;break}L2816:do{if(z>>>0<f>>>0){n=u+1|0;p=k;A=o+4|0;D=o+8|0;E=0;F=0;G=z;while(1){H=(a[m]&1)==0;do{if((a[(H?n:c[D>>2]|0)+F|0]|0)==0){I=F;J=E}else{if((E|0)!=(a[(H?n:c[D>>2]|0)+F|0]|0)){I=F;J=E;break}L=c[j>>2]|0;c[j>>2]=L+4;c[L>>2]=q;L=d[m]|0;I=(F>>>0<(((L&1|0)==0?L>>>1:c[A>>2]|0)-1|0)>>>0)+F|0;J=0}}while(0);H=(x=0,aF(c[(c[p>>2]|0)+44>>2]|0,r|0,a[G]|0)|0);if(x){x=0;break}L=c[j>>2]|0;c[j>>2]=L+4;c[L>>2]=H;H=G+1|0;if(H>>>0<f>>>0){E=J+1|0;F=I;G=H}else{break L2816}}G=cu(-1,-1)|0;M=K;N=G;gI(o);bk(N|0)}}while(0);q=g+(z-b<<2)|0;G=c[j>>2]|0;if((q|0)==(G|0)){break}F=G-4|0;if(q>>>0<F>>>0){O=q;P=F}else{break}do{F=c[O>>2]|0;c[O>>2]=c[P>>2];c[P>>2]=F;O=O+4|0;P=P-4|0;}while(O>>>0<P>>>0)}}while(0);if((w|0)==2128){w=cu(-1,-1)|0;M=K;N=w;gI(o);bk(N|0)}if((e|0)==(f|0)){Q=c[j>>2]|0;c[h>>2]=Q;gI(o);i=l;return}else{Q=g+(e-b<<2)|0;c[h>>2]=Q;gI(o);i=l;return}}function jv(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g>>2;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;g=h>>2;do{if((h|0)>0){if((dB[c[(c[d>>2]|0)+48>>2]&127](d,e,g)|0)==(g|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){gU(l,q,j);if((a[l]&1)==0){r=l+4|0}else{r=c[l+8>>2]|0}g=(x=0,au(c[(c[d>>2]|0)+48>>2]|0,d|0,r|0,q|0)|0);if(x){x=0;e=cu(-1,-1)|0;gV(l);bk(e|0)}if((g|0)==(q|0)){gV(l);break}c[m>>2]=0;c[b>>2]=0;gV(l);i=k;return}}while(0);l=n-o|0;o=l>>2;do{if((l|0)>0){if((dB[c[(c[d>>2]|0)+48>>2]&127](d,f,o)|0)==(o|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function jw(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+232|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+200|0;o=d+208|0;p=d+216|0;q=d+224|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=100}}while(0);u=l|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}v=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=v;break}else{x=0;v=cu(-1,-1)|0;bk(v|0)}}}while(0);v=jg(u,22,c[3894]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){y=2210;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=2210;break}w=l+2|0}else{y=2210}}while(0);if((y|0)==2210){w=u}y=m|0;g3(p,f);x=0;aB(20,u|0,w|0,r|0,y|0,n|0,o|0,p|0);if(!x){r=c[p>>2]|0;gf(r)|0;c[q>>2]=c[e>>2];jv(b,q,y,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[p>>2]|0;gf(g)|0;bk(d|0)}}function jx(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+144|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+8|0;l=d+24|0;m=d+112|0;n=d+120|0;o=d+128|0;p=d+136|0;q=j|0;a[q]=a[4304]|0;a[q+1|0]=a[4305|0]|0;a[q+2|0]=a[4306|0]|0;a[q+3|0]=a[4307|0]|0;a[q+4|0]=a[4308|0]|0;a[q+5|0]=a[4309|0]|0;r=j+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=r}else{a[r]=43;u=j+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;u=v+1|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=k|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}v=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=v;break}else{x=0;v=cu(-1,-1)|0;bk(v|0)}}}while(0);v=jg(u,12,c[3894]|0,q,(q=i,i=i+8|0,c[q>>2]=h,q)|0)|0;i=q;q=k+v|0;h=c[s>>2]&176;do{if((h|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=k+1|0;break}if(!((v|0)>1&s<<24>>24==48)){y=2235;break}s=a[k+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=2235;break}w=k+2|0}else if((h|0)==32){w=q}else{y=2235}}while(0);if((y|0)==2235){w=u}y=l|0;g3(o,f);x=0;aB(20,u|0,w|0,q|0,y|0,m|0,n|0,o|0);if(!x){q=c[o>>2]|0;gf(q)|0;c[p>>2]=c[e>>2];jv(b,p,y,c[m>>2]|0,c[n>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[o>>2]|0;gf(g)|0;bk(d|0)}}function jy(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;d=i;i=i+240|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+32|0;n=d+208|0;o=d+216|0;p=d+224|0;q=d+232|0;c[k>>2]=37;c[k+4>>2]=0;r=k;k=r+1|0;s=f+4|0;t=c[s>>2]|0;if((t&2048|0)==0){u=k}else{a[k]=43;u=r+2|0}if((t&512|0)==0){v=u}else{a[u]=35;v=u+1|0}a[v]=108;a[v+1|0]=108;u=v+2|0;v=t&74;do{if((v|0)==8){if((t&16384|0)==0){a[u]=120;break}else{a[u]=88;break}}else if((v|0)==64){a[u]=111}else{a[u]=117}}while(0);u=l|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}v=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=v;break}else{x=0;v=cu(-1,-1)|0;bk(v|0)}}}while(0);v=jg(u,23,c[3894]|0,r,(r=i,i=i+16|0,c[r>>2]=h,c[r+8>>2]=j,r)|0)|0;i=r;r=l+v|0;j=c[s>>2]&176;do{if((j|0)==32){w=r}else if((j|0)==16){s=a[u]|0;if((s<<24>>24|0)==45|(s<<24>>24|0)==43){w=l+1|0;break}if(!((v|0)>1&s<<24>>24==48)){y=2260;break}s=a[l+1|0]|0;if(!((s<<24>>24|0)==120|(s<<24>>24|0)==88)){y=2260;break}w=l+2|0}else{y=2260}}while(0);if((y|0)==2260){w=u}y=m|0;g3(p,f);x=0;aB(20,u|0,w|0,r|0,y|0,n|0,o|0,p|0);if(!x){r=c[p>>2]|0;gf(r)|0;c[q>>2]=c[e>>2];jv(b,q,y,c[n>>2]|0,c[o>>2]|0,f,g);i=d;return}else{x=0;d=cu(-1,-1)|0;g=c[p>>2]|0;gf(g)|0;bk(d|0)}}function jz(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){y=w}else{a[w]=35;y=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){if((k&1|0)==0){a[y]=97;z=0;break}else{a[y]=65;z=0;break}}else{a[y]=46;v=y+2|0;a[y+1|0]=42;if((w|0)==4){if((k&1|0)==0){a[v]=102;z=1;break}else{a[v]=70;z=1;break}}else if((w|0)==256){if((k&1|0)==0){a[v]=101;z=1;break}else{a[v]=69;z=1;break}}else{if((k&1|0)==0){a[v]=103;z=1;break}else{a[v]=71;z=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;bk(l|0)}}}while(0);l=c[3894]|0;if(z){w=jg(k,30,l,t,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0;i=A;B=w}else{w=jg(k,30,l,t,(A=i,i=i+8|0,h[A>>3]=j,A)|0)|0;i=A;B=w}L3015:do{if((B|0)>29){w=(a[17696]|0)==0;L3017:do{if(z){do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L3017}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=2307}else{x=0;F=2299}}else{do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L3017}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=2307}else{x=0;F=2299}}}while(0);do{if((F|0)==2307){w=c[m>>2]|0;if((w|0)!=0){G=E;H=w;I=w;break L3015}x=0;aK(4);if(x){x=0;F=2299;break}w=c[m>>2]|0;G=E;H=w;I=w;break L3015}}while(0);if((F|0)==2299){w=cu(-1,-1)|0;C=K;D=w}J=C;L=D;M=L;N=0;O=M;P=J;bk(O|0)}else{G=B;H=0;I=c[m>>2]|0}}while(0);B=I+G|0;D=c[u>>2]&176;do{if((D|0)==16){u=a[I]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){Q=I+1|0;break}if(!((G|0)>1&u<<24>>24==48)){F=2316;break}u=a[I+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){F=2316;break}Q=I+2|0}else if((D|0)==32){Q=B}else{F=2316}}while(0);if((F|0)==2316){Q=I}do{if((I|0)==(k|0)){R=n|0;S=0;T=k;F=2322}else{D=nN(G<<3)|0;u=D;if((D|0)!=0){R=u;S=u;T=I;F=2322;break}x=0;aK(4);if(x){x=0;U=0;F=2321;break}R=u;S=u;T=c[m>>2]|0;F=2322}}while(0);do{if((F|0)==2322){x=0;aq(96,q|0,f|0);if(x){x=0;U=S;F=2321;break}x=0;aB(26,T|0,Q|0,B|0,R|0,o|0,p|0,q|0);if(x){x=0;m=cu(-1,-1)|0;I=m;m=K;G=c[q>>2]|0;gf(G)|0;V=I;W=m;X=S;break}m=c[q>>2]|0;gf(m)|0;m=e|0;c[s>>2]=c[m>>2];x=0;aB(34,r|0,s|0,R|0,c[o>>2]|0,c[p>>2]|0,f|0,g|0);if(x){x=0;U=S;F=2321;break}I=c[r>>2]|0;c[m>>2]=I;c[b>>2]=I;if((S|0)!=0){nO(S)}if((H|0)==0){i=d;return}nO(H);i=d;return}}while(0);if((F|0)==2321){F=cu(-1,-1)|0;V=F;W=K;X=U}if((X|0)!=0){nO(X)}if((H|0)==0){J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}nO(H);J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}function jA(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;l=i;i=i+48|0;m=l|0;n=l+16|0;o=l+32|0;p=k|0;k=c[p>>2]|0;if((c[4250]|0)!=-1){c[n>>2]=17e3;c[n+4>>2]=16;c[n+8>>2]=0;gD(17e3,n,154)}n=(c[4251]|0)-1|0;q=c[k+8>>2]|0;if((c[k+12>>2]|0)-q>>2>>>0<=n>>>0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}k=c[q+(n<<2)>>2]|0;if((k|0)==0){r=c9(4)|0;s=r;ns(s);ca(r|0,11128,210)}r=k;s=c[p>>2]|0;if((c[4154]|0)!=-1){c[m>>2]=16616;c[m+4>>2]=16;c[m+8>>2]=0;gD(16616,m,154)}m=(c[4155]|0)-1|0;p=c[s+8>>2]|0;if((c[s+12>>2]|0)-p>>2>>>0<=m>>>0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}s=c[p+(m<<2)>>2]|0;if((s|0)==0){t=c9(4)|0;u=t;ns(u);ca(t|0,11128,210)}t=s;dx[c[(c[s>>2]|0)+20>>2]&255](o,t);c[j>>2]=g;u=a[b]|0;do{if((u<<24>>24|0)==45|(u<<24>>24|0)==43){m=(x=0,aF(c[(c[k>>2]|0)+44>>2]|0,r|0,u|0)|0);if(x){x=0;break}p=c[j>>2]|0;c[j>>2]=p+4;c[p>>2]=m;v=b+1|0;w=2360}else{v=b;w=2360}}while(0);L3104:do{if((w|0)==2360){u=f;L3106:do{if((u-v|0)>1){if((a[v]|0)!=48){y=v;w=2374;break}m=v+1|0;p=a[m]|0;if(!((p<<24>>24|0)==120|(p<<24>>24|0)==88)){y=v;w=2374;break}p=k;n=(x=0,aF(c[(c[p>>2]|0)+44>>2]|0,r|0,48)|0);if(x){x=0;break L3104}q=c[j>>2]|0;c[j>>2]=q+4;c[q>>2]=n;n=v+2|0;q=(x=0,aF(c[(c[p>>2]|0)+44>>2]|0,r|0,a[m]|0)|0);if(x){x=0;break L3104}m=c[j>>2]|0;c[j>>2]=m+4;c[m>>2]=q;q=n;L3112:while(1){if(q>>>0>=f>>>0){z=q;A=n;break L3106}m=a[q]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}p=(x=0,au(12,2147483647,2800,0)|0);if(x){x=0;w=2371;break L3112}c[3894]=p}}while(0);p=(x=0,aF(70,m<<24>>24|0,c[3894]|0)|0);if(x){x=0;w=2357;break}if((p|0)==0){z=q;A=n;break L3106}else{q=q+1|0}}if((w|0)==2371){q=cu(-1,-1)|0;B=K;C=q;gI(o);bk(C|0)}else if((w|0)==2357){q=cu(-1,-1)|0;B=K;C=q;gI(o);bk(C|0)}}else{y=v;w=2374}}while(0);L3126:do{if((w|0)==2374){L3127:while(1){w=0;if(y>>>0>=f>>>0){z=y;A=v;break L3126}q=a[y]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}n=(x=0,au(12,2147483647,2800,0)|0);if(x){x=0;w=2379;break L3127}c[3894]=n}}while(0);m=(x=0,aF(26,q<<24>>24|0,c[3894]|0)|0);if(x){x=0;w=2356;break}if((m|0)==0){z=y;A=v;break L3126}else{y=y+1|0;w=2374}}if((w|0)==2356){m=cu(-1,-1)|0;B=K;C=m;gI(o);bk(C|0)}else if((w|0)==2379){m=cu(-1,-1)|0;B=K;C=m;gI(o);bk(C|0)}}}while(0);m=o;n=o;p=d[n]|0;if((p&1|0)==0){D=p>>>1}else{D=c[o+4>>2]|0}do{if((D|0)==0){p=c[j>>2]|0;E=c[(c[k>>2]|0)+48>>2]|0;x=0,aM(E|0,r|0,A|0,z|0,p|0)|0;if(x){x=0;break L3104}c[j>>2]=(c[j>>2]|0)+(z-A<<2)}else{do{if((A|0)!=(z|0)){p=z-1|0;if(A>>>0<p>>>0){F=A;G=p}else{break}do{p=a[F]|0;a[F]=a[G]|0;a[G]=p;F=F+1|0;G=G-1|0;}while(F>>>0<G>>>0)}}while(0);q=(x=0,as(c[(c[s>>2]|0)+16>>2]|0,t|0)|0);if(x){x=0;break L3104}L3154:do{if(A>>>0<z>>>0){p=m+1|0;E=o+4|0;H=o+8|0;I=k;J=0;L=0;M=A;while(1){N=(a[n]&1)==0;do{if((a[(N?p:c[H>>2]|0)+L|0]|0)>0){if((J|0)!=(a[(N?p:c[H>>2]|0)+L|0]|0)){O=L;P=J;break}Q=c[j>>2]|0;c[j>>2]=Q+4;c[Q>>2]=q;Q=d[n]|0;O=(L>>>0<(((Q&1|0)==0?Q>>>1:c[E>>2]|0)-1|0)>>>0)+L|0;P=0}else{O=L;P=J}}while(0);N=(x=0,aF(c[(c[I>>2]|0)+44>>2]|0,r|0,a[M]|0)|0);if(x){x=0;break}Q=c[j>>2]|0;c[j>>2]=Q+4;c[Q>>2]=N;N=M+1|0;if(N>>>0<z>>>0){J=P+1|0;L=O;M=N}else{break L3154}}M=cu(-1,-1)|0;B=K;C=M;gI(o);bk(C|0)}}while(0);q=g+(A-b<<2)|0;M=c[j>>2]|0;if((q|0)==(M|0)){break}L=M-4|0;if(q>>>0<L>>>0){R=q;S=L}else{break}do{L=c[R>>2]|0;c[R>>2]=c[S>>2];c[S>>2]=L;R=R+4|0;S=S-4|0;}while(R>>>0<S>>>0)}}while(0);L3172:do{if(z>>>0<f>>>0){n=k;m=z;while(1){L=a[m]|0;if(L<<24>>24==46){w=2405;break}q=(x=0,aF(c[(c[n>>2]|0)+44>>2]|0,r|0,L|0)|0);if(x){x=0;w=2354;break}L=c[j>>2]|0;c[j>>2]=L+4;c[L>>2]=q;q=m+1|0;if(q>>>0<f>>>0){m=q}else{T=q;break L3172}}if((w|0)==2354){n=cu(-1,-1)|0;B=K;C=n;gI(o);bk(C|0)}else if((w|0)==2405){n=(x=0,as(c[(c[s>>2]|0)+12>>2]|0,t|0)|0);if(x){x=0;break L3104}q=c[j>>2]|0;c[j>>2]=q+4;c[q>>2]=n;T=m+1|0;break}}else{T=z}}while(0);n=c[j>>2]|0;q=c[(c[k>>2]|0)+48>>2]|0;x=0,aM(q|0,r|0,T|0,f|0,n|0)|0;if(x){x=0;break}n=(c[j>>2]|0)+(u-T<<2)|0;c[j>>2]=n;if((e|0)==(f|0)){U=n;c[h>>2]=U;gI(o);i=l;return}U=g+(e-b<<2)|0;c[h>>2]=U;gI(o);i=l;return}}while(0);l=cu(-1,-1)|0;B=K;C=l;gI(o);bk(C|0)}function jB(b,d,e,f,g,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;j=+j;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;d=i;i=i+320|0;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;l=d+8|0;m=d+40|0;n=d+48|0;o=d+280|0;p=d+288|0;q=d+296|0;r=d+304|0;s=d+312|0;c[k>>2]=37;c[k+4>>2]=0;t=k;k=t+1|0;u=f+4|0;v=c[u>>2]|0;if((v&2048|0)==0){w=k}else{a[k]=43;w=t+2|0}if((v&1024|0)==0){y=w}else{a[w]=35;y=w+1|0}w=v&260;k=v>>>14;do{if((w|0)==260){a[y]=76;v=y+1|0;if((k&1|0)==0){a[v]=97;z=0;break}else{a[v]=65;z=0;break}}else{a[y]=46;a[y+1|0]=42;a[y+2|0]=76;v=y+3|0;if((w|0)==256){if((k&1|0)==0){a[v]=101;z=1;break}else{a[v]=69;z=1;break}}else if((w|0)==4){if((k&1|0)==0){a[v]=102;z=1;break}else{a[v]=70;z=1;break}}else{if((k&1|0)==0){a[v]=103;z=1;break}else{a[v]=71;z=1;break}}}}while(0);k=l|0;c[m>>2]=k;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;bk(l|0)}}}while(0);l=c[3894]|0;if(z){w=jg(k,30,l,t,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0;i=A;B=w}else{w=jg(k,30,l,t,(A=i,i=i+8|0,h[A>>3]=j,A)|0)|0;i=A;B=w}L3229:do{if((B|0)>29){w=(a[17696]|0)==0;L3232:do{if(z){do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L3232}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+16|0,c[A>>2]=c[f+8>>2],h[A+8>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=2469}else{x=0;F=2461}}else{do{if(w){if((bT(17696)|0)==0){break}l=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=l;break}else{x=0;l=cu(-1,-1)|0;C=K;D=l;break L3232}}}while(0);l=(x=0,aM(6,m|0,c[3894]|0,t|0,(A=i,i=i+8|0,h[A>>3]=j,A)|0)|0);i=A;if(!x){E=l;F=2469}else{x=0;F=2461}}}while(0);do{if((F|0)==2469){w=c[m>>2]|0;if((w|0)!=0){G=E;H=w;I=w;break L3229}x=0;aK(4);if(x){x=0;F=2461;break}w=c[m>>2]|0;G=E;H=w;I=w;break L3229}}while(0);if((F|0)==2461){w=cu(-1,-1)|0;C=K;D=w}J=C;L=D;M=L;N=0;O=M;P=J;bk(O|0)}else{G=B;H=0;I=c[m>>2]|0}}while(0);B=I+G|0;D=c[u>>2]&176;do{if((D|0)==16){u=a[I]|0;if((u<<24>>24|0)==45|(u<<24>>24|0)==43){Q=I+1|0;break}if(!((G|0)>1&u<<24>>24==48)){F=2478;break}u=a[I+1|0]|0;if(!((u<<24>>24|0)==120|(u<<24>>24|0)==88)){F=2478;break}Q=I+2|0}else if((D|0)==32){Q=B}else{F=2478}}while(0);if((F|0)==2478){Q=I}do{if((I|0)==(k|0)){R=n|0;S=0;T=k;F=2484}else{D=nN(G<<3)|0;u=D;if((D|0)!=0){R=u;S=u;T=I;F=2484;break}x=0;aK(4);if(x){x=0;U=0;F=2483;break}R=u;S=u;T=c[m>>2]|0;F=2484}}while(0);do{if((F|0)==2484){x=0;aq(96,q|0,f|0);if(x){x=0;U=S;F=2483;break}x=0;aB(26,T|0,Q|0,B|0,R|0,o|0,p|0,q|0);if(x){x=0;m=cu(-1,-1)|0;I=m;m=K;G=c[q>>2]|0;gf(G)|0;V=I;W=m;X=S;break}m=c[q>>2]|0;gf(m)|0;m=e|0;c[s>>2]=c[m>>2];x=0;aB(34,r|0,s|0,R|0,c[o>>2]|0,c[p>>2]|0,f|0,g|0);if(x){x=0;U=S;F=2483;break}I=c[r>>2]|0;c[m>>2]=I;c[b>>2]=I;if((S|0)!=0){nO(S)}if((H|0)==0){i=d;return}nO(H);i=d;return}}while(0);if((F|0)==2483){F=cu(-1,-1)|0;V=F;W=K;X=U}if((X|0)!=0){nO(X)}if((H|0)==0){J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}nO(H);J=W;L=V;M=L;N=0;O=M;P=J;bk(O|0)}function jC(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;d=i;i=i+216|0;j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=d|0;k=d+24|0;l=d+48|0;m=d+200|0;n=d+208|0;o=d+16|0;a[o]=a[4312]|0;a[o+1|0]=a[4313|0]|0;a[o+2|0]=a[4314|0]|0;a[o+3|0]=a[4315|0]|0;a[o+4|0]=a[4316|0]|0;a[o+5|0]=a[4317|0]|0;p=k|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}q=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=q;break}else{x=0;q=cu(-1,-1)|0;bk(q|0)}}}while(0);q=jg(p,20,c[3894]|0,o,(o=i,i=i+8|0,c[o>>2]=h,o)|0)|0;i=o;o=k+q|0;h=c[f+4>>2]&176;do{if((h|0)==16){r=a[p]|0;if((r<<24>>24|0)==45|(r<<24>>24|0)==43){s=k+1|0;break}if(!((q|0)>1&r<<24>>24==48)){t=2514;break}r=a[k+1|0]|0;if(!((r<<24>>24|0)==120|(r<<24>>24|0)==88)){t=2514;break}s=k+2|0}else if((h|0)==32){s=o}else{t=2514}}while(0);if((t|0)==2514){s=p}g3(m,f);t=m|0;m=c[t>>2]|0;do{if((c[4250]|0)!=-1){c[j>>2]=17e3;c[j+4>>2]=16;c[j+8>>2]=0;x=0;aJ(2,17e3,j|0,154);if(!x){break}else{x=0}u=cu(-1,-1)|0;v=K;w=c[t>>2]|0;y=w|0;z=gf(y)|0;bk(u|0)}}while(0);j=(c[4251]|0)-1|0;h=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-h>>2>>>0>j>>>0){r=c[h+(j<<2)>>2]|0;if((r|0)==0){break}A=r;B=c[t>>2]|0;gf(B)|0;B=l|0;C=c[(c[r>>2]|0)+48>>2]|0;dT[C&63](A,p,o,B)|0;A=l+(q<<2)|0;if((s|0)==(o|0)){D=A;E=e|0;F=c[E>>2]|0;G=n|0;c[G>>2]=F;jv(b,n,B,D,A,f,g);i=d;return}D=l+(s-k<<2)|0;E=e|0;F=c[E>>2]|0;G=n|0;c[G>>2]=F;jv(b,n,B,D,A,f,g);i=d;return}}while(0);d=c9(4)|0;ns(d);x=0;aJ(12,d|0,11128,210);if(x){x=0;u=cu(-1,-1)|0;v=K;w=c[t>>2]|0;y=w|0;z=gf(y)|0;bk(u|0)}}function jD(d,e,f,g,h,j,k,l,m){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0;n=i;i=i+48|0;o=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[o>>2];o=g;g=i;i=i+4|0;i=i+7&-8;c[g>>2]=c[o>>2];o=n|0;p=n+16|0;q=n+24|0;r=n+32|0;s=n+40|0;g3(p,h);t=p|0;p=c[t>>2]|0;do{if((c[4252]|0)!=-1){c[o>>2]=17008;c[o+4>>2]=16;c[o+8>>2]=0;x=0;aJ(2,17008,o|0,154);if(!x){break}else{x=0}u=cu(-1,-1)|0;v=K;w=c[t>>2]|0;y=w|0;z=gf(y)|0;bk(u|0)}}while(0);o=(c[4253]|0)-1|0;A=c[p+8>>2]|0;do{if((c[p+12>>2]|0)-A>>2>>>0>o>>>0){B=c[A+(o<<2)>>2]|0;if((B|0)==0){break}C=B;D=c[t>>2]|0;gf(D)|0;c[j>>2]=0;D=f|0;L8:do{if((l|0)==(m|0)){E=67}else{F=g|0;G=B;H=B;I=B+8|0;J=e;L=r|0;M=s|0;N=q|0;O=l;P=0;L10:while(1){Q=P;while(1){if((Q|0)!=0){E=67;break L8}R=c[D>>2]|0;do{if((R|0)==0){S=0}else{if((c[R+12>>2]|0)!=(c[R+16>>2]|0)){S=R;break}if((dz[c[(c[R>>2]|0)+36>>2]&255](R)|0)!=-1){S=R;break}c[D>>2]=0;S=0}}while(0);R=(S|0)==0;T=c[F>>2]|0;L20:do{if((T|0)==0){E=20}else{do{if((c[T+12>>2]|0)==(c[T+16>>2]|0)){if((dz[c[(c[T>>2]|0)+36>>2]&255](T)|0)!=-1){break}c[F>>2]=0;E=20;break L20}}while(0);if(R){U=T}else{E=21;break L10}}}while(0);if((E|0)==20){E=0;if(R){E=21;break L10}else{U=0}}if((dB[c[(c[G>>2]|0)+36>>2]&127](C,a[O]|0,0)|0)<<24>>24==37){E=24;break}T=a[O]|0;if(T<<24>>24>=0){V=c[I>>2]|0;if((b[V+(T<<24>>24<<1)>>1]&8192)!=0){W=O;E=35;break}}X=S+12|0;T=c[X>>2]|0;Y=S+16|0;if((T|0)==(c[Y>>2]|0)){Z=(dz[c[(c[S>>2]|0)+36>>2]&255](S)|0)&255}else{Z=a[T]|0}T=dM[c[(c[H>>2]|0)+12>>2]&127](C,Z)|0;if(T<<24>>24==(dM[c[(c[H>>2]|0)+12>>2]&127](C,a[O]|0)|0)<<24>>24){E=62;break}c[j>>2]=4;Q=4}L38:do{if((E|0)==24){E=0;Q=O+1|0;if((Q|0)==(m|0)){E=25;break L10}T=dB[c[(c[G>>2]|0)+36>>2]&127](C,a[Q]|0,0)|0;if((T<<24>>24|0)==69|(T<<24>>24|0)==48){_=O+2|0;if((_|0)==(m|0)){E=28;break L10}$=T;aa=dB[c[(c[G>>2]|0)+36>>2]&127](C,a[_]|0,0)|0;ab=_}else{$=0;aa=T;ab=Q}Q=c[(c[J>>2]|0)+36>>2]|0;c[L>>2]=S;c[M>>2]=U;dJ[Q&7](q,e,r,s,h,j,k,aa,$);c[D>>2]=c[N>>2];ac=ab+1|0}else if((E|0)==35){while(1){E=0;Q=W+1|0;if((Q|0)==(m|0)){ad=m;break}T=a[Q]|0;if(T<<24>>24<0){ad=Q;break}if((b[V+(T<<24>>24<<1)>>1]&8192)==0){ad=Q;break}else{W=Q;E=35}}R=S;Q=U;while(1){do{if((R|0)==0){ae=0}else{if((c[R+12>>2]|0)!=(c[R+16>>2]|0)){ae=R;break}if((dz[c[(c[R>>2]|0)+36>>2]&255](R)|0)!=-1){ae=R;break}c[D>>2]=0;ae=0}}while(0);T=(ae|0)==0;do{if((Q|0)==0){E=48}else{if((c[Q+12>>2]|0)!=(c[Q+16>>2]|0)){if(T){af=Q;break}else{ac=ad;break L38}}if((dz[c[(c[Q>>2]|0)+36>>2]&255](Q)|0)==-1){c[F>>2]=0;E=48;break}else{if(T^(Q|0)==0){af=Q;break}else{ac=ad;break L38}}}}while(0);if((E|0)==48){E=0;if(T){ac=ad;break L38}else{af=0}}_=ae+12|0;ag=c[_>>2]|0;ah=ae+16|0;if((ag|0)==(c[ah>>2]|0)){ai=(dz[c[(c[ae>>2]|0)+36>>2]&255](ae)|0)&255}else{ai=a[ag]|0}if(ai<<24>>24<0){ac=ad;break L38}if((b[(c[I>>2]|0)+(ai<<24>>24<<1)>>1]&8192)==0){ac=ad;break L38}ag=c[_>>2]|0;if((ag|0)==(c[ah>>2]|0)){ah=c[(c[ae>>2]|0)+40>>2]|0;dz[ah&255](ae)|0;R=ae;Q=af;continue}else{c[_>>2]=ag+1;R=ae;Q=af;continue}}}else if((E|0)==62){E=0;Q=c[X>>2]|0;if((Q|0)==(c[Y>>2]|0)){R=c[(c[S>>2]|0)+40>>2]|0;dz[R&255](S)|0}else{c[X>>2]=Q+1}ac=O+1|0}}while(0);if((ac|0)==(m|0)){E=67;break L8}O=ac;P=c[j>>2]|0}if((E|0)==21){c[j>>2]=4;aj=S;break}else if((E|0)==25){c[j>>2]=4;aj=S;break}else if((E|0)==28){c[j>>2]=4;aj=S;break}}}while(0);if((E|0)==67){aj=c[D>>2]|0}C=f|0;do{if((aj|0)!=0){if((c[aj+12>>2]|0)!=(c[aj+16>>2]|0)){break}if((dz[c[(c[aj>>2]|0)+36>>2]&255](aj)|0)!=-1){break}c[C>>2]=0}}while(0);D=c[C>>2]|0;B=(D|0)==0;P=g|0;O=c[P>>2]|0;L96:do{if((O|0)==0){E=77}else{do{if((c[O+12>>2]|0)==(c[O+16>>2]|0)){if((dz[c[(c[O>>2]|0)+36>>2]&255](O)|0)!=-1){break}c[P>>2]=0;E=77;break L96}}while(0);if(!B){break}ak=d|0;c[ak>>2]=D;i=n;return}}while(0);do{if((E|0)==77){if(B){break}ak=d|0;c[ak>>2]=D;i=n;return}}while(0);c[j>>2]=c[j>>2]|2;ak=d|0;c[ak>>2]=D;i=n;return}}while(0);n=c9(4)|0;ns(n);x=0;aJ(12,n|0,11128,210);if(x){x=0;u=cu(-1,-1)|0;v=K;w=c[t>>2]|0;y=w|0;z=gf(y)|0;bk(u|0)}}function jE(a){a=a|0;gd(a|0);nU(a);return}function jF(a){a=a|0;gd(a|0);return}function jG(a){a=a|0;return 2}function jH(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];jD(a,b,k,l,f,g,h,4296,4304);i=j;return}function jI(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=dz[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=o;e=a[o]|0;if((e&1)==0){p=f+1|0;q=f+1|0}else{f=c[o+8>>2]|0;p=f;q=f}f=e&255;if((f&1|0)==0){r=f>>>1}else{r=c[o+4>>2]|0}jD(b,d,l,m,g,h,j,q,p+r|0);i=k;return}function jJ(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;g3(m,f);f=m|0;m=c[f>>2]|0;do{if((c[4252]|0)!=-1){c[l>>2]=17008;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17008,l|0,154);if(!x){break}else{x=0}n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}while(0);l=(c[4253]|0)-1|0;s=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-s>>2>>>0>l>>>0){t=c[s+(l<<2)>>2]|0;if((t|0)==0){break}u=t;t=c[f>>2]|0;gf(t)|0;t=c[e>>2]|0;v=b+8|0;w=dz[c[c[v>>2]>>2]&255](v)|0;c[k>>2]=t;t=(iw(d,k,w,w+168|0,u,g,0)|0)-w|0;if((t|0)>=168){y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}c[h+24>>2]=((t|0)/12|0|0)%7|0;y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}}while(0);j=c9(4)|0;ns(j);x=0;aJ(12,j|0,11128,210);if(x){x=0;n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}function jK(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;g3(m,f);f=m|0;m=c[f>>2]|0;do{if((c[4252]|0)!=-1){c[l>>2]=17008;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17008,l|0,154);if(!x){break}else{x=0}n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}while(0);l=(c[4253]|0)-1|0;s=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-s>>2>>>0>l>>>0){t=c[s+(l<<2)>>2]|0;if((t|0)==0){break}u=t;t=c[f>>2]|0;gf(t)|0;t=c[e>>2]|0;v=b+8|0;w=dz[c[(c[v>>2]|0)+4>>2]&255](v)|0;c[k>>2]=t;t=(iw(d,k,w,w+288|0,u,g,0)|0)-w|0;if((t|0)>=288){y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}c[h+16>>2]=((t|0)/12|0|0)%12|0;y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}}while(0);j=c9(4)|0;ns(j);x=0;aJ(12,j|0,11128,210);if(x){x=0;n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}function jL(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;g3(l,f);f=l|0;l=c[f>>2]|0;do{if((c[4252]|0)!=-1){c[k>>2]=17008;c[k+4>>2]=16;c[k+8>>2]=0;x=0;aJ(2,17008,k|0,154);if(!x){break}else{x=0}m=cu(-1,-1)|0;n=K;o=c[f>>2]|0;p=o|0;q=gf(p)|0;bk(m|0)}}while(0);k=(c[4253]|0)-1|0;r=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-r>>2>>>0>k>>>0){s=c[r+(k<<2)>>2]|0;if((s|0)==0){break}t=s;s=c[f>>2]|0;gf(s)|0;c[j>>2]=c[e>>2];s=jQ(d,j,g,t,4)|0;if((c[g>>2]&4|0)!=0){u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=b;return}if((s|0)<69){y=s+2e3|0}else{y=(s-69|0)>>>0<31?s+1900|0:s}c[h+20>>2]=y-1900;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=b;return}}while(0);b=c9(4)|0;ns(b);x=0;aJ(12,b|0,11128,210);if(x){x=0;m=cu(-1,-1)|0;n=K;o=c[f>>2]|0;p=o|0;q=gf(p)|0;bk(m|0)}}function jM(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;y=l+88|0;z=l+96|0;A=l+112|0;B=l+120|0;C=l+128|0;D=l+136|0;E=l+144|0;F=l+152|0;G=l+160|0;H=l+168|0;I=l+176|0;J=l+184|0;L=l+192|0;M=l+200|0;N=l+208|0;O=l+216|0;P=l+224|0;Q=l+232|0;R=l+240|0;S=l+248|0;T=l+256|0;U=l+264|0;V=l+272|0;W=l+280|0;X=l+288|0;Y=l+296|0;Z=l+304|0;_=l+312|0;$=l+320|0;c[h>>2]=0;g3(A,g);aa=A|0;A=c[aa>>2]|0;do{if((c[4252]|0)!=-1){c[z>>2]=17008;c[z+4>>2]=16;c[z+8>>2]=0;x=0;aJ(2,17008,z|0,154);if(!x){break}else{x=0}ab=cu(-1,-1)|0;ac=K;ad=c[aa>>2]|0;ae=ad|0;af=gf(ae)|0;bk(ab|0)}}while(0);z=(c[4253]|0)-1|0;ag=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-ag>>2>>>0>z>>>0){ah=c[ag+(z<<2)>>2]|0;if((ah|0)==0){break}ai=ah;ah=c[aa>>2]|0;gf(ah)|0;L185:do{switch(k<<24>>24|0){case 97:case 65:{ah=c[f>>2]|0;aj=d+8|0;ak=dz[c[c[aj>>2]>>2]&255](aj)|0;c[y>>2]=ah;ah=(iw(e,y,ak,ak+168|0,ai,h,0)|0)-ak|0;if((ah|0)>=168){break L185}c[j+24>>2]=((ah|0)/12|0|0)%7|0;break};case 98:case 66:case 104:{ah=c[f>>2]|0;ak=d+8|0;aj=dz[c[(c[ak>>2]|0)+4>>2]&255](ak)|0;c[w>>2]=ah;ah=(iw(e,w,aj,aj+288|0,ai,h,0)|0)-aj|0;if((ah|0)>=288){break L185}c[j+16>>2]=((ah|0)/12|0|0)%12|0;break};case 99:{ah=d+8|0;aj=dz[c[(c[ah>>2]|0)+12>>2]&255](ah)|0;ah=e|0;c[C>>2]=c[ah>>2];c[D>>2]=c[f>>2];ak=aj;al=a[aj]|0;if((al&1)==0){am=ak+1|0;an=ak+1|0}else{ak=c[aj+8>>2]|0;am=ak;an=ak}ak=al&255;if((ak&1|0)==0){ao=ak>>>1}else{ao=c[aj+4>>2]|0}jD(B,d,C,D,g,h,j,an,am+ao|0);c[ah>>2]=c[B>>2];break};case 100:case 101:{ah=j+12|0;c[v>>2]=c[f>>2];aj=jQ(e,v,h,ai,2)|0;ak=c[h>>2]|0;do{if((ak&4|0)==0){if((aj-1|0)>>>0>=31){break}c[ah>>2]=aj;break L185}}while(0);c[h>>2]=ak|4;break};case 68:{aj=e|0;c[F>>2]=c[aj>>2];c[G>>2]=c[f>>2];jD(E,d,F,G,g,h,j,4288,4296);c[aj>>2]=c[E>>2];break};case 70:{aj=e|0;c[I>>2]=c[aj>>2];c[J>>2]=c[f>>2];jD(H,d,I,J,g,h,j,4280,4288);c[aj>>2]=c[H>>2];break};case 72:{c[u>>2]=c[f>>2];aj=jQ(e,u,h,ai,2)|0;ah=c[h>>2]|0;if((ah&4|0)==0&(aj|0)<24){c[j+8>>2]=aj;break L185}else{c[h>>2]=ah|4;break L185}break};case 73:{ah=j+8|0;c[t>>2]=c[f>>2];aj=jQ(e,t,h,ai,2)|0;al=c[h>>2]|0;do{if((al&4|0)==0){if((aj-1|0)>>>0>=12){break}c[ah>>2]=aj;break L185}}while(0);c[h>>2]=al|4;break};case 106:{c[s>>2]=c[f>>2];aj=jQ(e,s,h,ai,3)|0;ah=c[h>>2]|0;if((ah&4|0)==0&(aj|0)<366){c[j+28>>2]=aj;break L185}else{c[h>>2]=ah|4;break L185}break};case 109:{c[r>>2]=c[f>>2];ah=(jQ(e,r,h,ai,2)|0)-1|0;aj=c[h>>2]|0;if((aj&4|0)==0&(ah|0)<12){c[j+16>>2]=ah;break L185}else{c[h>>2]=aj|4;break L185}break};case 77:{c[q>>2]=c[f>>2];aj=jQ(e,q,h,ai,2)|0;ah=c[h>>2]|0;if((ah&4|0)==0&(aj|0)<60){c[j+4>>2]=aj;break L185}else{c[h>>2]=ah|4;break L185}break};case 110:case 116:{c[L>>2]=c[f>>2];jN(0,e,L,h,ai);break};case 112:{c[M>>2]=c[f>>2];jO(d,j+8|0,e,M,h,ai);break};case 82:{ah=e|0;c[R>>2]=c[ah>>2];c[S>>2]=c[f>>2];jD(Q,d,R,S,g,h,j,4256,4261);c[ah>>2]=c[Q>>2];break};case 83:{c[p>>2]=c[f>>2];ah=jQ(e,p,h,ai,2)|0;aj=c[h>>2]|0;if((aj&4|0)==0&(ah|0)<61){c[j>>2]=ah;break L185}else{c[h>>2]=aj|4;break L185}break};case 84:{aj=e|0;c[U>>2]=c[aj>>2];c[V>>2]=c[f>>2];jD(T,d,U,V,g,h,j,4248,4256);c[aj>>2]=c[T>>2];break};case 119:{c[o>>2]=c[f>>2];aj=jQ(e,o,h,ai,1)|0;ah=c[h>>2]|0;if((ah&4|0)==0&(aj|0)<7){c[j+24>>2]=aj;break L185}else{c[h>>2]=ah|4;break L185}break};case 120:{ah=c[(c[d>>2]|0)+20>>2]|0;c[W>>2]=c[e>>2];c[X>>2]=c[f>>2];dI[ah&127](b,d,W,X,g,h,j);i=l;return};case 88:{ah=d+8|0;aj=dz[c[(c[ah>>2]|0)+24>>2]&255](ah)|0;ah=e|0;c[Z>>2]=c[ah>>2];c[_>>2]=c[f>>2];ak=aj;ap=a[aj]|0;if((ap&1)==0){aq=ak+1|0;ar=ak+1|0}else{ak=c[aj+8>>2]|0;aq=ak;ar=ak}ak=ap&255;if((ak&1|0)==0){as=ak>>>1}else{as=c[aj+4>>2]|0}jD(Y,d,Z,_,g,h,j,ar,aq+as|0);c[ah>>2]=c[Y>>2];break};case 121:{c[n>>2]=c[f>>2];ah=jQ(e,n,h,ai,4)|0;if((c[h>>2]&4|0)!=0){break L185}if((ah|0)<69){at=ah+2e3|0}else{at=(ah-69|0)>>>0<31?ah+1900|0:ah}c[j+20>>2]=at-1900;break};case 89:{c[m>>2]=c[f>>2];ah=jQ(e,m,h,ai,4)|0;if((c[h>>2]&4|0)!=0){break L185}c[j+20>>2]=ah-1900;break};case 37:{c[$>>2]=c[f>>2];jP(0,e,$,h,ai);break};case 114:{ah=e|0;c[O>>2]=c[ah>>2];c[P>>2]=c[f>>2];jD(N,d,O,P,g,h,j,4264,4275);c[ah>>2]=c[N>>2];break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=c9(4)|0;ns(l);x=0;aJ(12,l|0,11128,210);if(x){x=0;ab=cu(-1,-1)|0;ac=K;ad=c[aa>>2]|0;ae=ad|0;af=gf(ae)|0;bk(ab|0)}}function jN(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;d=i;j=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[j>>2];j=e|0;e=f|0;f=h+8|0;L268:while(1){h=c[j>>2]|0;do{if((h|0)==0){k=0}else{if((c[h+12>>2]|0)!=(c[h+16>>2]|0)){k=h;break}if((dz[c[(c[h>>2]|0)+36>>2]&255](h)|0)==-1){c[j>>2]=0;k=0;break}else{k=c[j>>2]|0;break}}}while(0);h=(k|0)==0;l=c[e>>2]|0;L277:do{if((l|0)==0){m=227}else{do{if((c[l+12>>2]|0)==(c[l+16>>2]|0)){if((dz[c[(c[l>>2]|0)+36>>2]&255](l)|0)!=-1){break}c[e>>2]=0;m=227;break L277}}while(0);if(h){n=l;o=0}else{p=l;q=0;break L268}}}while(0);if((m|0)==227){m=0;if(h){p=0;q=1;break}else{n=0;o=1}}l=c[j>>2]|0;r=c[l+12>>2]|0;if((r|0)==(c[l+16>>2]|0)){s=(dz[c[(c[l>>2]|0)+36>>2]&255](l)|0)&255}else{s=a[r]|0}if(s<<24>>24<0){p=n;q=o;break}if((b[(c[f>>2]|0)+(s<<24>>24<<1)>>1]&8192)==0){p=n;q=o;break}r=c[j>>2]|0;l=r+12|0;t=c[l>>2]|0;if((t|0)==(c[r+16>>2]|0)){u=c[(c[r>>2]|0)+40>>2]|0;dz[u&255](r)|0;continue}else{c[l>>2]=t+1;continue}}o=c[j>>2]|0;do{if((o|0)==0){v=0}else{if((c[o+12>>2]|0)!=(c[o+16>>2]|0)){v=o;break}if((dz[c[(c[o>>2]|0)+36>>2]&255](o)|0)==-1){c[j>>2]=0;v=0;break}else{v=c[j>>2]|0;break}}}while(0);j=(v|0)==0;do{if(q){m=246}else{if((c[p+12>>2]|0)!=(c[p+16>>2]|0)){if(!(j^(p|0)==0)){break}i=d;return}if((dz[c[(c[p>>2]|0)+36>>2]&255](p)|0)==-1){c[e>>2]=0;m=246;break}if(!j){break}i=d;return}}while(0);do{if((m|0)==246){if(j){break}i=d;return}}while(0);c[g>>2]=c[g>>2]|2;i=d;return}function jO(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=dz[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=iw(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function jP(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0,o=0;b=i;h=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[h>>2];h=d|0;d=c[h>>2]|0;do{if((d|0)==0){j=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){j=d;break}if((dz[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[h>>2]=0;j=0;break}else{j=c[h>>2]|0;break}}}while(0);d=(j|0)==0;j=e|0;e=c[j>>2]|0;L351:do{if((e|0)==0){k=284}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((dz[c[(c[e>>2]|0)+36>>2]&255](e)|0)!=-1){break}c[j>>2]=0;k=284;break L351}}while(0);if(d){l=e;m=0}else{k=285}}}while(0);if((k|0)==284){if(d){k=285}else{l=0;m=1}}if((k|0)==285){c[f>>2]=c[f>>2]|6;i=b;return}d=c[h>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){n=(dz[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{n=a[e]|0}if((dB[c[(c[g>>2]|0)+36>>2]&127](g,n,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;i=b;return}n=c[h>>2]|0;g=n+12|0;e=c[g>>2]|0;if((e|0)==(c[n+16>>2]|0)){d=c[(c[n>>2]|0)+40>>2]|0;dz[d&255](n)|0}else{c[g>>2]=e+1}e=c[h>>2]|0;do{if((e|0)==0){o=0}else{if((c[e+12>>2]|0)!=(c[e+16>>2]|0)){o=e;break}if((dz[c[(c[e>>2]|0)+36>>2]&255](e)|0)==-1){c[h>>2]=0;o=0;break}else{o=c[h>>2]|0;break}}}while(0);h=(o|0)==0;do{if(m){k=304}else{if((c[l+12>>2]|0)!=(c[l+16>>2]|0)){if(!(h^(l|0)==0)){break}i=b;return}if((dz[c[(c[l>>2]|0)+36>>2]&255](l)|0)==-1){c[j>>2]=0;k=304;break}if(!h){break}i=b;return}}while(0);do{if((k|0)==304){if(h){break}i=b;return}}while(0);c[f>>2]=c[f>>2]|2;i=b;return}function jQ(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;j=i;k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=0}else{if((c[d+12>>2]|0)!=(c[d+16>>2]|0)){l=d;break}if((dz[c[(c[d>>2]|0)+36>>2]&255](d)|0)==-1){c[k>>2]=0;l=0;break}else{l=c[k>>2]|0;break}}}while(0);d=(l|0)==0;l=e|0;e=c[l>>2]|0;L405:do{if((e|0)==0){m=324}else{do{if((c[e+12>>2]|0)==(c[e+16>>2]|0)){if((dz[c[(c[e>>2]|0)+36>>2]&255](e)|0)!=-1){break}c[l>>2]=0;m=324;break L405}}while(0);if(d){n=e}else{m=325}}}while(0);if((m|0)==324){if(d){m=325}else{n=0}}if((m|0)==325){c[f>>2]=c[f>>2]|6;o=0;i=j;return o|0}d=c[k>>2]|0;e=c[d+12>>2]|0;if((e|0)==(c[d+16>>2]|0)){p=(dz[c[(c[d>>2]|0)+36>>2]&255](d)|0)&255}else{p=a[e]|0}do{if(p<<24>>24>=0){e=g+8|0;if((b[(c[e>>2]|0)+(p<<24>>24<<1)>>1]&2048)==0){break}d=g;q=(dB[c[(c[d>>2]|0)+36>>2]&127](g,p,0)|0)<<24>>24;r=c[k>>2]|0;s=r+12|0;t=c[s>>2]|0;if((t|0)==(c[r+16>>2]|0)){u=c[(c[r>>2]|0)+40>>2]|0;dz[u&255](r)|0;v=q;w=h;x=n}else{c[s>>2]=t+1;v=q;w=h;x=n}while(1){y=v-48|0;q=w-1|0;t=c[k>>2]|0;do{if((t|0)==0){z=0}else{if((c[t+12>>2]|0)!=(c[t+16>>2]|0)){z=t;break}if((dz[c[(c[t>>2]|0)+36>>2]&255](t)|0)==-1){c[k>>2]=0;z=0;break}else{z=c[k>>2]|0;break}}}while(0);t=(z|0)==0;if((x|0)==0){A=z;B=0}else{do{if((c[x+12>>2]|0)==(c[x+16>>2]|0)){if((dz[c[(c[x>>2]|0)+36>>2]&255](x)|0)!=-1){C=x;break}c[l>>2]=0;C=0}else{C=x}}while(0);A=c[k>>2]|0;B=C}D=(B|0)==0;if(!((t^D)&(q|0)>0)){m=354;break}s=c[A+12>>2]|0;if((s|0)==(c[A+16>>2]|0)){E=(dz[c[(c[A>>2]|0)+36>>2]&255](A)|0)&255}else{E=a[s]|0}if(E<<24>>24<0){o=y;m=372;break}if((b[(c[e>>2]|0)+(E<<24>>24<<1)>>1]&2048)==0){o=y;m=373;break}s=((dB[c[(c[d>>2]|0)+36>>2]&127](g,E,0)|0)<<24>>24)+(y*10|0)|0;r=c[k>>2]|0;u=r+12|0;F=c[u>>2]|0;if((F|0)==(c[r+16>>2]|0)){G=c[(c[r>>2]|0)+40>>2]|0;dz[G&255](r)|0;v=s;w=q;x=B;continue}else{c[u>>2]=F+1;v=s;w=q;x=B;continue}}if((m|0)==354){do{if((A|0)==0){H=0}else{if((c[A+12>>2]|0)!=(c[A+16>>2]|0)){H=A;break}if((dz[c[(c[A>>2]|0)+36>>2]&255](A)|0)==-1){c[k>>2]=0;H=0;break}else{H=c[k>>2]|0;break}}}while(0);d=(H|0)==0;L462:do{if(D){m=364}else{do{if((c[B+12>>2]|0)==(c[B+16>>2]|0)){if((dz[c[(c[B>>2]|0)+36>>2]&255](B)|0)!=-1){break}c[l>>2]=0;m=364;break L462}}while(0);if(d){o=y}else{break}i=j;return o|0}}while(0);do{if((m|0)==364){if(d){break}else{o=y}i=j;return o|0}}while(0);c[f>>2]=c[f>>2]|2;o=y;i=j;return o|0}else if((m|0)==372){i=j;return o|0}else if((m|0)==373){i=j;return o|0}}}while(0);c[f>>2]=c[f>>2]|4;o=0;i=j;return o|0}function jR(a,b,d,e,f,g,h,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0;l=i;i=i+48|0;m=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[m>>2];m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=l|0;n=l+16|0;o=l+24|0;p=l+32|0;q=l+40|0;g3(n,f);r=n|0;n=c[r>>2]|0;do{if((c[4250]|0)!=-1){c[m>>2]=17e3;c[m+4>>2]=16;c[m+8>>2]=0;x=0;aJ(2,17e3,m|0,154);if(!x){break}else{x=0}s=cu(-1,-1)|0;t=K;u=c[r>>2]|0;v=u|0;w=gf(v)|0;bk(s|0)}}while(0);m=(c[4251]|0)-1|0;y=c[n+8>>2]|0;do{if((c[n+12>>2]|0)-y>>2>>>0>m>>>0){z=c[y+(m<<2)>>2]|0;if((z|0)==0){break}A=z;B=c[r>>2]|0;gf(B)|0;c[g>>2]=0;B=d|0;L486:do{if((j|0)==(k|0)){C=444}else{D=e|0;E=z;F=z;G=z;H=b;I=p|0;J=q|0;L=o|0;M=j;N=0;L488:while(1){O=N;while(1){if((O|0)!=0){C=444;break L486}P=c[B>>2]|0;do{if((P|0)==0){Q=0}else{R=c[P+12>>2]|0;if((R|0)==(c[P+16>>2]|0)){S=dz[c[(c[P>>2]|0)+36>>2]&255](P)|0}else{S=c[R>>2]|0}if((S|0)!=-1){Q=P;break}c[B>>2]=0;Q=0}}while(0);P=(Q|0)==0;R=c[D>>2]|0;do{if((R|0)==0){C=396}else{T=c[R+12>>2]|0;if((T|0)==(c[R+16>>2]|0)){U=dz[c[(c[R>>2]|0)+36>>2]&255](R)|0}else{U=c[T>>2]|0}if((U|0)==-1){c[D>>2]=0;C=396;break}else{if(P^(R|0)==0){V=R;break}else{C=398;break L488}}}}while(0);if((C|0)==396){C=0;if(P){C=398;break L488}else{V=0}}if((dB[c[(c[E>>2]|0)+52>>2]&127](A,c[M>>2]|0,0)|0)<<24>>24==37){C=401;break}if(dB[c[(c[F>>2]|0)+12>>2]&127](A,8192,c[M>>2]|0)|0){W=M;C=411;break}X=Q+12|0;R=c[X>>2]|0;Y=Q+16|0;if((R|0)==(c[Y>>2]|0)){Z=dz[c[(c[Q>>2]|0)+36>>2]&255](Q)|0}else{Z=c[R>>2]|0}R=dM[c[(c[G>>2]|0)+28>>2]&127](A,Z)|0;if((R|0)==(dM[c[(c[G>>2]|0)+28>>2]&127](A,c[M>>2]|0)|0)){C=439;break}c[g>>2]=4;O=4}L520:do{if((C|0)==401){C=0;O=M+4|0;if((O|0)==(k|0)){C=402;break L488}R=dB[c[(c[E>>2]|0)+52>>2]&127](A,c[O>>2]|0,0)|0;if((R<<24>>24|0)==69|(R<<24>>24|0)==48){T=M+8|0;if((T|0)==(k|0)){C=405;break L488}_=R;$=dB[c[(c[E>>2]|0)+52>>2]&127](A,c[T>>2]|0,0)|0;aa=T}else{_=0;$=R;aa=O}O=c[(c[H>>2]|0)+36>>2]|0;c[I>>2]=Q;c[J>>2]=V;dJ[O&7](o,b,p,q,f,g,h,$,_);c[B>>2]=c[L>>2];ab=aa+4|0}else if((C|0)==411){while(1){C=0;O=W+4|0;if((O|0)==(k|0)){ac=k;break}if(dB[c[(c[F>>2]|0)+12>>2]&127](A,8192,c[O>>2]|0)|0){W=O;C=411}else{ac=O;break}}P=Q;O=V;while(1){do{if((P|0)==0){ad=0}else{R=c[P+12>>2]|0;if((R|0)==(c[P+16>>2]|0)){ae=dz[c[(c[P>>2]|0)+36>>2]&255](P)|0}else{ae=c[R>>2]|0}if((ae|0)!=-1){ad=P;break}c[B>>2]=0;ad=0}}while(0);R=(ad|0)==0;do{if((O|0)==0){C=426}else{T=c[O+12>>2]|0;if((T|0)==(c[O+16>>2]|0)){af=dz[c[(c[O>>2]|0)+36>>2]&255](O)|0}else{af=c[T>>2]|0}if((af|0)==-1){c[D>>2]=0;C=426;break}else{if(R^(O|0)==0){ag=O;break}else{ab=ac;break L520}}}}while(0);if((C|0)==426){C=0;if(R){ab=ac;break L520}else{ag=0}}T=ad+12|0;ah=c[T>>2]|0;ai=ad+16|0;if((ah|0)==(c[ai>>2]|0)){aj=dz[c[(c[ad>>2]|0)+36>>2]&255](ad)|0}else{aj=c[ah>>2]|0}if(!(dB[c[(c[F>>2]|0)+12>>2]&127](A,8192,aj)|0)){ab=ac;break L520}ah=c[T>>2]|0;if((ah|0)==(c[ai>>2]|0)){ai=c[(c[ad>>2]|0)+40>>2]|0;dz[ai&255](ad)|0;P=ad;O=ag;continue}else{c[T>>2]=ah+4;P=ad;O=ag;continue}}}else if((C|0)==439){C=0;O=c[X>>2]|0;if((O|0)==(c[Y>>2]|0)){P=c[(c[Q>>2]|0)+40>>2]|0;dz[P&255](Q)|0}else{c[X>>2]=O+4}ab=M+4|0}}while(0);if((ab|0)==(k|0)){C=444;break L486}M=ab;N=c[g>>2]|0}if((C|0)==398){c[g>>2]=4;ak=Q;break}else if((C|0)==402){c[g>>2]=4;ak=Q;break}else if((C|0)==405){c[g>>2]=4;ak=Q;break}}}while(0);if((C|0)==444){ak=c[B>>2]|0}A=d|0;do{if((ak|0)!=0){z=c[ak+12>>2]|0;if((z|0)==(c[ak+16>>2]|0)){al=dz[c[(c[ak>>2]|0)+36>>2]&255](ak)|0}else{al=c[z>>2]|0}if((al|0)!=-1){break}c[A>>2]=0}}while(0);B=c[A>>2]|0;z=(B|0)==0;N=e|0;M=c[N>>2]|0;do{if((M|0)==0){C=457}else{F=c[M+12>>2]|0;if((F|0)==(c[M+16>>2]|0)){am=dz[c[(c[M>>2]|0)+36>>2]&255](M)|0}else{am=c[F>>2]|0}if((am|0)==-1){c[N>>2]=0;C=457;break}if(!(z^(M|0)==0)){break}an=a|0;c[an>>2]=B;i=l;return}}while(0);do{if((C|0)==457){if(z){break}an=a|0;c[an>>2]=B;i=l;return}}while(0);c[g>>2]=c[g>>2]|2;an=a|0;c[an>>2]=B;i=l;return}}while(0);l=c9(4)|0;ns(l);x=0;aJ(12,l|0,11128,210);if(x){x=0;s=cu(-1,-1)|0;t=K;u=c[r>>2]|0;v=u|0;w=gf(v)|0;bk(s|0)}}function jS(a){a=a|0;gd(a|0);nU(a);return}function jT(a){a=a|0;gd(a|0);return}function jU(a){a=a|0;return 2}function jV(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0;j=i;i=i+16|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];jR(a,b,k,l,f,g,h,4216,4248);i=j;return}function jW(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=k|0;m=k+8|0;n=d+8|0;o=dz[c[(c[n>>2]|0)+20>>2]&255](n)|0;c[l>>2]=c[e>>2];c[m>>2]=c[f>>2];f=a[o]|0;if((f&1)==0){p=o+4|0;q=o+4|0}else{e=c[o+8>>2]|0;p=e;q=e}e=f&255;if((e&1|0)==0){r=e>>>1}else{r=c[o+4>>2]|0}jR(b,d,l,m,g,h,j,q,p+(r<<2)|0);i=k;return}function jX(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;g3(m,f);f=m|0;m=c[f>>2]|0;do{if((c[4250]|0)!=-1){c[l>>2]=17e3;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17e3,l|0,154);if(!x){break}else{x=0}n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}while(0);l=(c[4251]|0)-1|0;s=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-s>>2>>>0>l>>>0){t=c[s+(l<<2)>>2]|0;if((t|0)==0){break}u=t;t=c[f>>2]|0;gf(t)|0;t=c[e>>2]|0;v=b+8|0;w=dz[c[c[v>>2]>>2]&255](v)|0;c[k>>2]=t;t=(iZ(d,k,w,w+168|0,u,g,0)|0)-w|0;if((t|0)>=168){y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}c[h+24>>2]=((t|0)/12|0|0)%7|0;y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}}while(0);j=c9(4)|0;ns(j);x=0;aJ(12,j|0,11128,210);if(x){x=0;n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}function jY(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0;j=i;i=i+32|0;k=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[k>>2];k=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[k>>2];k=j|0;l=j+8|0;m=j+24|0;g3(m,f);f=m|0;m=c[f>>2]|0;do{if((c[4250]|0)!=-1){c[l>>2]=17e3;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17e3,l|0,154);if(!x){break}else{x=0}n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}while(0);l=(c[4251]|0)-1|0;s=c[m+8>>2]|0;do{if((c[m+12>>2]|0)-s>>2>>>0>l>>>0){t=c[s+(l<<2)>>2]|0;if((t|0)==0){break}u=t;t=c[f>>2]|0;gf(t)|0;t=c[e>>2]|0;v=b+8|0;w=dz[c[(c[v>>2]|0)+4>>2]&255](v)|0;c[k>>2]=t;t=(iZ(d,k,w,w+288|0,u,g,0)|0)-w|0;if((t|0)>=288){y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}c[h+16>>2]=((t|0)/12|0|0)%12|0;y=d|0;z=c[y>>2]|0;A=a|0;c[A>>2]=z;i=j;return}}while(0);j=c9(4)|0;ns(j);x=0;aJ(12,j|0,11128,210);if(x){x=0;n=cu(-1,-1)|0;o=K;p=c[f>>2]|0;q=p|0;r=gf(q)|0;bk(n|0)}}function jZ(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0;b=i;i=i+32|0;j=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[j>>2];j=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[j>>2];j=b|0;k=b+8|0;l=b+24|0;g3(l,f);f=l|0;l=c[f>>2]|0;do{if((c[4250]|0)!=-1){c[k>>2]=17e3;c[k+4>>2]=16;c[k+8>>2]=0;x=0;aJ(2,17e3,k|0,154);if(!x){break}else{x=0}m=cu(-1,-1)|0;n=K;o=c[f>>2]|0;p=o|0;q=gf(p)|0;bk(m|0)}}while(0);k=(c[4251]|0)-1|0;r=c[l+8>>2]|0;do{if((c[l+12>>2]|0)-r>>2>>>0>k>>>0){s=c[r+(k<<2)>>2]|0;if((s|0)==0){break}t=s;s=c[f>>2]|0;gf(s)|0;c[j>>2]=c[e>>2];s=j2(d,j,g,t,4)|0;if((c[g>>2]&4|0)!=0){u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=b;return}if((s|0)<69){y=s+2e3|0}else{y=(s-69|0)>>>0<31?s+1900|0:s}c[h+20>>2]=y-1900;u=d|0;v=c[u>>2]|0;w=a|0;c[w>>2]=v;i=b;return}}while(0);b=c9(4)|0;ns(b);x=0;aJ(12,b|0,11128,210);if(x){x=0;m=cu(-1,-1)|0;n=K;o=c[f>>2]|0;p=o|0;q=gf(p)|0;bk(m|0)}}function j_(b,d,e,f,g,h,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0;l=i;i=i+328|0;m=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[m>>2];m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=l|0;n=l+8|0;o=l+16|0;p=l+24|0;q=l+32|0;r=l+40|0;s=l+48|0;t=l+56|0;u=l+64|0;v=l+72|0;w=l+80|0;y=l+88|0;z=l+96|0;A=l+112|0;B=l+120|0;C=l+128|0;D=l+136|0;E=l+144|0;F=l+152|0;G=l+160|0;H=l+168|0;I=l+176|0;J=l+184|0;L=l+192|0;M=l+200|0;N=l+208|0;O=l+216|0;P=l+224|0;Q=l+232|0;R=l+240|0;S=l+248|0;T=l+256|0;U=l+264|0;V=l+272|0;W=l+280|0;X=l+288|0;Y=l+296|0;Z=l+304|0;_=l+312|0;$=l+320|0;c[h>>2]=0;g3(A,g);aa=A|0;A=c[aa>>2]|0;do{if((c[4250]|0)!=-1){c[z>>2]=17e3;c[z+4>>2]=16;c[z+8>>2]=0;x=0;aJ(2,17e3,z|0,154);if(!x){break}else{x=0}ab=cu(-1,-1)|0;ac=K;ad=c[aa>>2]|0;ae=ad|0;af=gf(ae)|0;bk(ab|0)}}while(0);z=(c[4251]|0)-1|0;ag=c[A+8>>2]|0;do{if((c[A+12>>2]|0)-ag>>2>>>0>z>>>0){ah=c[ag+(z<<2)>>2]|0;if((ah|0)==0){break}ai=ah;ah=c[aa>>2]|0;gf(ah)|0;L675:do{switch(k<<24>>24|0){case 112:{c[M>>2]=c[f>>2];j0(d,j+8|0,e,M,h,ai);break};case 114:{ah=e|0;c[O>>2]=c[ah>>2];c[P>>2]=c[f>>2];jR(N,d,O,P,g,h,j,4136,4180);c[ah>>2]=c[N>>2];break};case 82:{ah=e|0;c[R>>2]=c[ah>>2];c[S>>2]=c[f>>2];jR(Q,d,R,S,g,h,j,4112,4132);c[ah>>2]=c[Q>>2];break};case 83:{c[p>>2]=c[f>>2];ah=j2(e,p,h,ai,2)|0;aj=c[h>>2]|0;if((aj&4|0)==0&(ah|0)<61){c[j>>2]=ah;break L675}else{c[h>>2]=aj|4;break L675}break};case 68:{aj=e|0;c[F>>2]=c[aj>>2];c[G>>2]=c[f>>2];jR(E,d,F,G,g,h,j,4184,4216);c[aj>>2]=c[E>>2];break};case 70:{aj=e|0;c[I>>2]=c[aj>>2];c[J>>2]=c[f>>2];jR(H,d,I,J,g,h,j,4048,4080);c[aj>>2]=c[H>>2];break};case 72:{c[u>>2]=c[f>>2];aj=j2(e,u,h,ai,2)|0;ah=c[h>>2]|0;if((ah&4|0)==0&(aj|0)<24){c[j+8>>2]=aj;break L675}else{c[h>>2]=ah|4;break L675}break};case 98:case 66:case 104:{ah=c[f>>2]|0;aj=d+8|0;ak=dz[c[(c[aj>>2]|0)+4>>2]&255](aj)|0;c[w>>2]=ah;ah=(iZ(e,w,ak,ak+288|0,ai,h,0)|0)-ak|0;if((ah|0)>=288){break L675}c[j+16>>2]=((ah|0)/12|0|0)%12|0;break};case 106:{c[s>>2]=c[f>>2];ah=j2(e,s,h,ai,3)|0;ak=c[h>>2]|0;if((ak&4|0)==0&(ah|0)<366){c[j+28>>2]=ah;break L675}else{c[h>>2]=ak|4;break L675}break};case 100:case 101:{ak=j+12|0;c[v>>2]=c[f>>2];ah=j2(e,v,h,ai,2)|0;aj=c[h>>2]|0;do{if((aj&4|0)==0){if((ah-1|0)>>>0>=31){break}c[ak>>2]=ah;break L675}}while(0);c[h>>2]=aj|4;break};case 120:{ah=c[(c[d>>2]|0)+20>>2]|0;c[W>>2]=c[e>>2];c[X>>2]=c[f>>2];dI[ah&127](b,d,W,X,g,h,j);i=l;return};case 97:case 65:{ah=c[f>>2]|0;ak=d+8|0;al=dz[c[c[ak>>2]>>2]&255](ak)|0;c[y>>2]=ah;ah=(iZ(e,y,al,al+168|0,ai,h,0)|0)-al|0;if((ah|0)>=168){break L675}c[j+24>>2]=((ah|0)/12|0|0)%7|0;break};case 99:{ah=d+8|0;al=dz[c[(c[ah>>2]|0)+12>>2]&255](ah)|0;ah=e|0;c[C>>2]=c[ah>>2];c[D>>2]=c[f>>2];ak=a[al]|0;if((ak&1)==0){am=al+4|0;an=al+4|0}else{ao=c[al+8>>2]|0;am=ao;an=ao}ao=ak&255;if((ao&1|0)==0){ap=ao>>>1}else{ap=c[al+4>>2]|0}jR(B,d,C,D,g,h,j,an,am+(ap<<2)|0);c[ah>>2]=c[B>>2];break};case 88:{ah=d+8|0;al=dz[c[(c[ah>>2]|0)+24>>2]&255](ah)|0;ah=e|0;c[Z>>2]=c[ah>>2];c[_>>2]=c[f>>2];ao=a[al]|0;if((ao&1)==0){aq=al+4|0;ar=al+4|0}else{ak=c[al+8>>2]|0;aq=ak;ar=ak}ak=ao&255;if((ak&1|0)==0){as=ak>>>1}else{as=c[al+4>>2]|0}jR(Y,d,Z,_,g,h,j,ar,aq+(as<<2)|0);c[ah>>2]=c[Y>>2];break};case 121:{c[n>>2]=c[f>>2];ah=j2(e,n,h,ai,4)|0;if((c[h>>2]&4|0)!=0){break L675}if((ah|0)<69){at=ah+2e3|0}else{at=(ah-69|0)>>>0<31?ah+1900|0:ah}c[j+20>>2]=at-1900;break};case 73:{ah=j+8|0;c[t>>2]=c[f>>2];al=j2(e,t,h,ai,2)|0;ak=c[h>>2]|0;do{if((ak&4|0)==0){if((al-1|0)>>>0>=12){break}c[ah>>2]=al;break L675}}while(0);c[h>>2]=ak|4;break};case 77:{c[q>>2]=c[f>>2];al=j2(e,q,h,ai,2)|0;ah=c[h>>2]|0;if((ah&4|0)==0&(al|0)<60){c[j+4>>2]=al;break L675}else{c[h>>2]=ah|4;break L675}break};case 89:{c[m>>2]=c[f>>2];ah=j2(e,m,h,ai,4)|0;if((c[h>>2]&4|0)!=0){break L675}c[j+20>>2]=ah-1900;break};case 37:{c[$>>2]=c[f>>2];j1(0,e,$,h,ai);break};case 109:{c[r>>2]=c[f>>2];ah=(j2(e,r,h,ai,2)|0)-1|0;al=c[h>>2]|0;if((al&4|0)==0&(ah|0)<12){c[j+16>>2]=ah;break L675}else{c[h>>2]=al|4;break L675}break};case 110:case 116:{c[L>>2]=c[f>>2];j$(0,e,L,h,ai);break};case 84:{al=e|0;c[U>>2]=c[al>>2];c[V>>2]=c[f>>2];jR(T,d,U,V,g,h,j,4080,4112);c[al>>2]=c[T>>2];break};case 119:{c[o>>2]=c[f>>2];al=j2(e,o,h,ai,1)|0;ah=c[h>>2]|0;if((ah&4|0)==0&(al|0)<7){c[j+24>>2]=al;break L675}else{c[h>>2]=ah|4;break L675}break};default:{c[h>>2]=c[h>>2]|4}}}while(0);c[b>>2]=c[e>>2];i=l;return}}while(0);l=c9(4)|0;ns(l);x=0;aJ(12,l|0,11128,210);if(x){x=0;ab=cu(-1,-1)|0;ac=K;ad=c[aa>>2]|0;ae=ad|0;af=gf(ae)|0;bk(ab|0)}}
function j$(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=d|0;d=f;L758:while(1){h=c[g>>2]|0;do{if((h|0)==0){j=1}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){l=dz[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[g>>2]=0;j=1;break}else{j=(c[g>>2]|0)==0;break}}}while(0);h=c[b>>2]|0;do{if((h|0)==0){m=611}else{k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){n=dz[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{n=c[k>>2]|0}if((n|0)==-1){c[b>>2]=0;m=611;break}else{k=(h|0)==0;if(j^k){o=h;p=k;break}else{q=h;r=k;break L758}}}}while(0);if((m|0)==611){m=0;if(j){q=0;r=1;break}else{o=0;p=1}}h=c[g>>2]|0;k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0)){s=dz[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{s=c[k>>2]|0}if(!(dB[c[(c[d>>2]|0)+12>>2]&127](f,8192,s)|0)){q=o;r=p;break}k=c[g>>2]|0;h=k+12|0;t=c[h>>2]|0;if((t|0)==(c[k+16>>2]|0)){u=c[(c[k>>2]|0)+40>>2]|0;dz[u&255](k)|0;continue}else{c[h>>2]=t+4;continue}}p=c[g>>2]|0;do{if((p|0)==0){v=1}else{o=c[p+12>>2]|0;if((o|0)==(c[p+16>>2]|0)){w=dz[c[(c[p>>2]|0)+36>>2]&255](p)|0}else{w=c[o>>2]|0}if((w|0)==-1){c[g>>2]=0;v=1;break}else{v=(c[g>>2]|0)==0;break}}}while(0);do{if(r){m=633}else{g=c[q+12>>2]|0;if((g|0)==(c[q+16>>2]|0)){x=dz[c[(c[q>>2]|0)+36>>2]&255](q)|0}else{x=c[g>>2]|0}if((x|0)==-1){c[b>>2]=0;m=633;break}if(!(v^(q|0)==0)){break}i=a;return}}while(0);do{if((m|0)==633){if(v){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function j0(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0;j=i;i=i+8|0;k=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[k>>2];k=j|0;l=a+8|0;a=dz[c[(c[l>>2]|0)+8>>2]&255](l)|0;l=d[a]|0;if((l&1|0)==0){m=l>>>1}else{m=c[a+4>>2]|0}l=d[a+12|0]|0;if((l&1|0)==0){n=l>>>1}else{n=c[a+16>>2]|0}if((m|0)==(-n|0)){c[g>>2]=c[g>>2]|4;i=j;return}c[k>>2]=c[f>>2];f=iZ(e,k,a,a+24|0,h,g,0)|0;g=f-a|0;do{if((f|0)==(a|0)){if((c[b>>2]|0)!=12){break}c[b>>2]=0;i=j;return}}while(0);if((g|0)!=12){i=j;return}g=c[b>>2]|0;if((g|0)>=12){i=j;return}c[b>>2]=g+12;i=j;return}function j1(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;a=i;g=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[g>>2];g=b|0;b=c[g>>2]|0;do{if((b|0)==0){h=1}else{j=c[b+12>>2]|0;if((j|0)==(c[b+16>>2]|0)){k=dz[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{k=c[j>>2]|0}if((k|0)==-1){c[g>>2]=0;h=1;break}else{h=(c[g>>2]|0)==0;break}}}while(0);k=d|0;d=c[k>>2]|0;do{if((d|0)==0){l=673}else{b=c[d+12>>2]|0;if((b|0)==(c[d+16>>2]|0)){m=dz[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{m=c[b>>2]|0}if((m|0)==-1){c[k>>2]=0;l=673;break}else{b=(d|0)==0;if(h^b){n=d;o=b;break}else{l=675;break}}}}while(0);if((l|0)==673){if(h){l=675}else{n=0;o=1}}if((l|0)==675){c[e>>2]=c[e>>2]|6;i=a;return}h=c[g>>2]|0;d=c[h+12>>2]|0;if((d|0)==(c[h+16>>2]|0)){p=dz[c[(c[h>>2]|0)+36>>2]&255](h)|0}else{p=c[d>>2]|0}if((dB[c[(c[f>>2]|0)+52>>2]&127](f,p,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;i=a;return}p=c[g>>2]|0;f=p+12|0;d=c[f>>2]|0;if((d|0)==(c[p+16>>2]|0)){h=c[(c[p>>2]|0)+40>>2]|0;dz[h&255](p)|0}else{c[f>>2]=d+4}d=c[g>>2]|0;do{if((d|0)==0){q=1}else{f=c[d+12>>2]|0;if((f|0)==(c[d+16>>2]|0)){r=dz[c[(c[d>>2]|0)+36>>2]&255](d)|0}else{r=c[f>>2]|0}if((r|0)==-1){c[g>>2]=0;q=1;break}else{q=(c[g>>2]|0)==0;break}}}while(0);do{if(o){l=697}else{g=c[n+12>>2]|0;if((g|0)==(c[n+16>>2]|0)){s=dz[c[(c[n>>2]|0)+36>>2]&255](n)|0}else{s=c[g>>2]|0}if((s|0)==-1){c[k>>2]=0;l=697;break}if(!(q^(n|0)==0)){break}i=a;return}}while(0);do{if((l|0)==697){if(q){break}i=a;return}}while(0);c[e>>2]=c[e>>2]|2;i=a;return}function j2(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;g=i;h=b;b=i;i=i+4|0;i=i+7&-8;c[b>>2]=c[h>>2];h=a|0;a=c[h>>2]|0;do{if((a|0)==0){j=1}else{k=c[a+12>>2]|0;if((k|0)==(c[a+16>>2]|0)){l=dz[c[(c[a>>2]|0)+36>>2]&255](a)|0}else{l=c[k>>2]|0}if((l|0)==-1){c[h>>2]=0;j=1;break}else{j=(c[h>>2]|0)==0;break}}}while(0);l=b|0;b=c[l>>2]|0;do{if((b|0)==0){m=719}else{a=c[b+12>>2]|0;if((a|0)==(c[b+16>>2]|0)){n=dz[c[(c[b>>2]|0)+36>>2]&255](b)|0}else{n=c[a>>2]|0}if((n|0)==-1){c[l>>2]=0;m=719;break}else{if(j^(b|0)==0){o=b;break}else{m=721;break}}}}while(0);if((m|0)==719){if(j){m=721}else{o=0}}if((m|0)==721){c[d>>2]=c[d>>2]|6;p=0;i=g;return p|0}j=c[h>>2]|0;b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0)){q=dz[c[(c[j>>2]|0)+36>>2]&255](j)|0}else{q=c[b>>2]|0}b=e;if(!(dB[c[(c[b>>2]|0)+12>>2]&127](e,2048,q)|0)){c[d>>2]=c[d>>2]|4;p=0;i=g;return p|0}j=e;n=(dB[c[(c[j>>2]|0)+52>>2]&127](e,q,0)|0)<<24>>24;q=c[h>>2]|0;a=q+12|0;k=c[a>>2]|0;if((k|0)==(c[q+16>>2]|0)){r=c[(c[q>>2]|0)+40>>2]|0;dz[r&255](q)|0;s=n;t=f;u=o}else{c[a>>2]=k+4;s=n;t=f;u=o}while(1){v=s-48|0;o=t-1|0;f=c[h>>2]|0;do{if((f|0)==0){w=0}else{n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0)){x=dz[c[(c[f>>2]|0)+36>>2]&255](f)|0}else{x=c[n>>2]|0}if((x|0)==-1){c[h>>2]=0;w=0;break}else{w=c[h>>2]|0;break}}}while(0);f=(w|0)==0;if((u|0)==0){y=w;z=0}else{n=c[u+12>>2]|0;if((n|0)==(c[u+16>>2]|0)){A=dz[c[(c[u>>2]|0)+36>>2]&255](u)|0}else{A=c[n>>2]|0}if((A|0)==-1){c[l>>2]=0;B=0}else{B=u}y=c[h>>2]|0;z=B}C=(z|0)==0;if(!((f^C)&(o|0)>0)){break}f=c[y+12>>2]|0;if((f|0)==(c[y+16>>2]|0)){D=dz[c[(c[y>>2]|0)+36>>2]&255](y)|0}else{D=c[f>>2]|0}if(!(dB[c[(c[b>>2]|0)+12>>2]&127](e,2048,D)|0)){p=v;m=774;break}f=((dB[c[(c[j>>2]|0)+52>>2]&127](e,D,0)|0)<<24>>24)+(v*10|0)|0;n=c[h>>2]|0;k=n+12|0;a=c[k>>2]|0;if((a|0)==(c[n+16>>2]|0)){q=c[(c[n>>2]|0)+40>>2]|0;dz[q&255](n)|0;s=f;t=o;u=z;continue}else{c[k>>2]=a+4;s=f;t=o;u=z;continue}}if((m|0)==774){i=g;return p|0}do{if((y|0)==0){E=1}else{u=c[y+12>>2]|0;if((u|0)==(c[y+16>>2]|0)){F=dz[c[(c[y>>2]|0)+36>>2]&255](y)|0}else{F=c[u>>2]|0}if((F|0)==-1){c[h>>2]=0;E=1;break}else{E=(c[h>>2]|0)==0;break}}}while(0);do{if(C){m=765}else{h=c[z+12>>2]|0;if((h|0)==(c[z+16>>2]|0)){G=dz[c[(c[z>>2]|0)+36>>2]&255](z)|0}else{G=c[h>>2]|0}if((G|0)==-1){c[l>>2]=0;m=765;break}if(E^(z|0)==0){p=v}else{break}i=g;return p|0}}while(0);do{if((m|0)==765){if(E){break}else{p=v}i=g;return p|0}}while(0);c[d>>2]=c[d>>2]|2;p=v;i=g;return p|0}function j3(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}g=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=g;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if((f|0)==(c[3894]|0)){h=b|0;gd(h);nU(d);return}x=0;ap(312,c[e>>2]|0);if(!x){h=b|0;gd(h);nU(d);return}else{x=0}cu(-1,-1,0)|0;cA()}function j4(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+8|0;e=c[d>>2]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}f=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=f;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if((e|0)==(c[3894]|0)){g=b|0;gd(g);return}x=0;ap(312,c[d>>2]|0);if(!x){g=b|0;gd(g);return}else{x=0}cu(-1,-1,0)|0;cA()}function j5(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;g=i;i=i+112|0;f=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[f>>2];f=g|0;l=g+8|0;m=l|0;n=f|0;a[n]=37;o=f+1|0;a[o]=j;p=f+2|0;a[p]=k;a[f+3|0]=0;if(k<<24>>24!=0){a[o]=k;a[p]=j}j=b6(m|0,100,n|0,h|0,c[d+8>>2]|0)|0;d=l+j|0;l=c[e>>2]|0;if((j|0)==0){q=l;r=b|0;c[r>>2]=q;i=g;return}else{s=l;t=m}while(1){m=a[t]|0;if((s|0)==0){u=0}else{l=s+24|0;j=c[l>>2]|0;if((j|0)==(c[s+28>>2]|0)){v=dM[c[(c[s>>2]|0)+52>>2]&127](s,m&255)|0}else{c[l>>2]=j+1;a[j]=m;v=m&255}u=(v|0)==-1?0:s}m=t+1|0;if((m|0)==(d|0)){q=u;break}else{s=u;t=m}}r=b|0;c[r>>2]=q;i=g;return}function j6(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;d=b;e=b+8|0;f=c[e>>2]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}g=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=g;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if((f|0)==(c[3894]|0)){h=b|0;gd(h);nU(d);return}x=0;ap(312,c[e>>2]|0);if(!x){h=b|0;gd(h);nU(d);return}else{x=0}cu(-1,-1,0)|0;cA()}function j7(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+8|0;e=c[d>>2]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}f=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=f;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if((e|0)==(c[3894]|0)){g=b|0;gd(g);return}x=0;ap(312,c[d>>2]|0);if(!x){g=b|0;gd(g);return}else{x=0}cu(-1,-1,0)|0;cA()}function j8(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;f=i;i=i+408|0;e=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[e>>2];e=f|0;k=f+400|0;l=e|0;c[k>>2]=e+400;j9(b+8|0,l,k,g,h,j);j=c[k>>2]|0;k=c[d>>2]|0;if((l|0)==(j|0)){m=k;n=a|0;c[n>>2]=m;i=f;return}else{o=k;p=l}while(1){l=c[p>>2]|0;if((o|0)==0){q=0}else{k=o+24|0;d=c[k>>2]|0;if((d|0)==(c[o+28>>2]|0)){r=dM[c[(c[o>>2]|0)+52>>2]&127](o,l)|0}else{c[k>>2]=d+4;c[d>>2]=l;r=l}q=(r|0)==-1?0:o}l=p+4|0;if((l|0)==(j|0)){m=q;break}else{o=q;p=l}}n=a|0;c[n>>2]=m;i=f;return}function j9(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;j=i;i=i+120|0;k=j|0;l=j+112|0;m=i;i=i+4|0;i=i+7&-8;n=j+8|0;o=k|0;a[o]=37;p=k+1|0;a[p]=g;q=k+2|0;a[q]=h;a[k+3|0]=0;if(h<<24>>24!=0){a[p]=h;a[q]=g}g=b|0;b6(n|0,100,o|0,f|0,c[g>>2]|0)|0;c[l>>2]=0;c[l+4>>2]=0;c[m>>2]=n;n=(c[e>>2]|0)-d>>2;f=cP(c[g>>2]|0)|0;g=(x=0,aM(32,d|0,m|0,n|0,l|0)|0);if(x){x=0;l=cu(-1,-1)|0;if((f|0)==0){bk(l|0)}x=0,as(48,f|0)|0;if(!x){bk(l|0)}else{x=0;cu(-1,-1,0)|0;cA()}}do{if((f|0)!=0){x=0,as(48,f|0)|0;if(!x){break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if((g|0)==-1){kX(1672)}else{c[e>>2]=d+(g<<2);i=j;return}}function ka(a){a=a|0;gd(a|0);nU(a);return}function kb(a){a=a|0;gd(a|0);return}function kc(a){a=a|0;return 127}function kd(a){a=a|0;return 127}function ke(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kf(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kg(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kh(a,b){a=a|0;b=b|0;gH(a,1,45);return}function ki(a){a=a|0;return 0}function kj(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kk(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kl(a){a=a|0;gd(a|0);nU(a);return}function km(a){a=a|0;gd(a|0);return}function kn(a){a=a|0;return 127}function ko(a){a=a|0;return 127}function kp(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kq(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kr(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function ks(a,b){a=a|0;b=b|0;gH(a,1,45);return}function kt(a){a=a|0;return 0}function ku(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kv(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kw(a){a=a|0;gd(a|0);nU(a);return}function kx(a){a=a|0;gd(a|0);return}function ky(a){a=a|0;return 2147483647}function kz(a){a=a|0;return 2147483647}function kA(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kB(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kC(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kD(a,b){a=a|0;b=b|0;gU(a,1,45);return}function kE(a){a=a|0;return 0}function kF(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kG(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kH(a){a=a|0;gd(a|0);nU(a);return}function kI(a){a=a|0;gd(a|0);return}function kJ(a){a=a|0;return 2147483647}function kK(a){a=a|0;return 2147483647}function kL(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kM(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kN(a,b){a=a|0;b=b|0;n0(a|0,0,12);return}function kO(a,b){a=a|0;b=b|0;gU(a,1,45);return}function kP(a){a=a|0;return 0}function kQ(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kR(b,c){b=b|0;c=c|0;c=b;C=67109634;a[c]=C&255;C=C>>8;a[c+1|0]=C&255;C=C>>8;a[c+2|0]=C&255;C=C>>8;a[c+3|0]=C&255;return}function kS(a){a=a|0;gd(a|0);nU(a);return}function kT(a){a=a|0;gd(a|0);return}function kU(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0;d=i;i=i+280|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=d+160|0;t=d+176|0;u=m|0;v=n|0;c[v>>2]=u;w=n+4|0;c[w>>2]=276;y=m+100|0;x=0;aq(96,p|0,h|0);do{if(!x){m=p|0;z=c[m>>2]|0;if((c[4252]|0)==-1){A=917}else{c[l>>2]=17008;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17008,l|0,154);if(!x){A=917}else{x=0;A=928}}L1164:do{if((A|0)==917){B=(c[4253]|0)-1|0;C=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-C>>2>>>0>B>>>0){D=c[C+(B<<2)>>2]|0;if((D|0)==0){break}E=D;a[q]=0;F=f|0;c[r>>2]=c[F>>2];G=(x=0,at(2,e|0,r|0,g|0,p|0,c[h+4>>2]|0,j|0,q|0,E|0,n|0,o|0,y|0)|0);if(x){x=0;A=928;break L1164}L1170:do{if(G){H=s|0;I=c[(c[D>>2]|0)+32>>2]|0;x=0,aM(I|0,E|0,4032,4042,H|0)|0;if(x){x=0;A=928;break L1164}I=t|0;J=c[o>>2]|0;L=c[v>>2]|0;M=J-L|0;do{if((M|0)>98){N=nN(M+2|0)|0;if((N|0)!=0){O=N;P=N;A=932;break}x=0;aK(4);if(!x){O=0;P=0;A=932}else{x=0;Q=0;A=929}}else{O=I;P=0;A=932}}while(0);do{if((A|0)==932){if((a[q]&1)==0){R=O}else{a[O]=45;R=O+1|0}if(L>>>0<J>>>0){M=s+10|0;N=s;S=R;T=L;while(1){U=H;while(1){if((U|0)==(M|0)){V=M;break}if((a[U]|0)==(a[T]|0)){V=U;break}else{U=U+1|0}}a[S]=a[4032+(V-N)|0]|0;U=T+1|0;W=S+1|0;if(U>>>0<(c[o>>2]|0)>>>0){S=W;T=U}else{X=W;break}}}else{X=R}a[X]=0;T=cS(I|0,3088,(S=i,i=i+8|0,c[S>>2]=k,S)|0)|0;i=S;if((T|0)==1){if((P|0)==0){break L1170}nO(P);break L1170}T=c9(8)|0;x=0;aq(76,T|0,2976);if(x){x=0;S=cu(-1,-1)|0;N=K;by(T|0);Y=N;Z=S;_=P;break}x=0;aJ(12,T|0,11160,30);if(x){x=0;Q=P;A=929;break}}}while(0);if((A|0)==929){I=cu(-1,-1)|0;Y=K;Z=I;_=Q}I=Z;H=Y;if((_|0)==0){$=H;aa=I;break L1164}nO(_);$=H;aa=I;break L1164}}while(0);E=e|0;D=c[E>>2]|0;do{if((D|0)==0){ab=0}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){ab=D;break}G=(x=0,as(c[(c[D>>2]|0)+36>>2]|0,D|0)|0);if(x){x=0;A=928;break L1164}if((G|0)!=-1){ab=D;break}c[E>>2]=0;ab=0}}while(0);E=(ab|0)==0;D=c[F>>2]|0;do{if((D|0)==0){A=958}else{if((c[D+12>>2]|0)!=(c[D+16>>2]|0)){if(E){break}else{A=960;break}}G=(x=0,as(c[(c[D>>2]|0)+36>>2]|0,D|0)|0);if(x){x=0;A=928;break L1164}if((G|0)==-1){c[F>>2]=0;A=958;break}else{if(E^(D|0)==0){break}else{A=960;break}}}}while(0);if((A|0)==958){if(E){A=960}}if((A|0)==960){c[j>>2]=c[j>>2]|2}c[b>>2]=ab;D=c[m>>2]|0;gf(D)|0;D=c[v>>2]|0;c[v>>2]=0;if((D|0)==0){i=d;return}x=0;ap(c[w>>2]|0,D|0);if(!x){i=d;return}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);B=c9(4)|0;ns(B);x=0;aJ(12,B|0,11128,210);if(x){x=0;A=928;break}}}while(0);if((A|0)==928){z=cu(-1,-1)|0;$=K;aa=z}z=c[m>>2]|0;gf(z)|0;z=c[v>>2]|0;c[v>>2]=0;if((z|0)==0){ac=aa;ad=$}else{ae=z;af=aa;ag=$;break}ah=ac;ai=0;aj=ah;ak=ad;bk(aj|0)}else{x=0;z=cu(-1,-1)|0;c[v>>2]=0;ae=u;af=z;ag=K}}while(0);x=0;ap(c[w>>2]|0,ae|0);if(!x){ac=af;ad=ag;ah=ac;ai=0;aj=ah;ak=ad;bk(aj|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function kV(a){a=a|0;return}function kW(e,f,g,h,j,k,l,m,n,o,p){e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;var q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ar=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aF=0,aG=0,aH=0,aI=0,aJ=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0;q=i;i=i+440|0;r=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[r>>2];r=q|0;s=q+400|0;t=q+408|0;u=q+416|0;v=q+424|0;w=v;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=i;i=i+4|0;i=i+7&-8;E=r|0;n0(w|0,0,12);F=y;G=z;H=A;I=B;n0(F|0,0,12);n0(G|0,0,12);n0(H|0,0,12);n0(I|0,0,12);x=0;aE(2,g|0,h|0,s|0,t|0,u|0,v|0,y|0,z|0,A|0,C|0);L1242:do{if(!x){h=n|0;c[o>>2]=c[h>>2];g=e|0;J=f|0;L=m+8|0;M=A+1|0;N=A+4|0;O=A+8|0;P=z+1|0;Q=z+4|0;R=z+8|0;S=(j&512|0)!=0;T=y+1|0;U=y+4|0;V=y+8|0;W=B+1|0;X=B+4|0;Y=B+8|0;Z=s+3|0;_=v+4|0;$=n+4|0;aa=p;ab=276;ac=E;ad=E;ae=r+400|0;af=0;ag=0;L1245:while(1){ah=c[g>>2]|0;do{if((ah|0)==0){ai=0}else{if((c[ah+12>>2]|0)!=(c[ah+16>>2]|0)){ai=ah;break}aj=(x=0,as(c[(c[ah>>2]|0)+36>>2]|0,ah|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}if((aj|0)==-1){c[g>>2]=0;ai=0;break}else{ai=c[g>>2]|0;break}}}while(0);ah=(ai|0)==0;aj=c[J>>2]|0;do{if((aj|0)==0){am=988}else{if((c[aj+12>>2]|0)!=(c[aj+16>>2]|0)){if(ah){an=aj;break}else{ao=ab;ar=ac;at=ad;au=af;am=1247;break L1245}}av=(x=0,as(c[(c[aj>>2]|0)+36>>2]|0,aj|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}if((av|0)==-1){c[J>>2]=0;am=988;break}else{if(ah){an=aj;break}else{ao=ab;ar=ac;at=ad;au=af;am=1247;break L1245}}}}while(0);if((am|0)==988){am=0;if(ah){ao=ab;ar=ac;at=ad;au=af;am=1247;break}else{an=0}}L1267:do{switch(a[s+ag|0]|0){case 3:{aj=a[G]|0;av=aj&255;aw=(av&1|0)==0?av>>>1:c[Q>>2]|0;av=a[H]|0;ax=av&255;ay=(ax&1|0)==0?ax>>>1:c[N>>2]|0;if((aw|0)==(-ay|0)){az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}ax=(aw|0)==0;aw=c[g>>2]|0;aG=c[aw+12>>2]|0;aH=c[aw+16>>2]|0;aI=(aG|0)==(aH|0);if(!(ax|(ay|0)==0)){if(aI){ay=(x=0,as(c[(c[aw>>2]|0)+36>>2]|0,aw|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}aJ=c[g>>2]|0;aL=ay&255;aM=a[G]|0;aN=aJ;aO=c[aJ+12>>2]|0;aP=c[aJ+16>>2]|0}else{aL=a[aG]|0;aM=aj;aN=aw;aO=aG;aP=aH}aH=aN+12|0;aJ=(aO|0)==(aP|0);if(aL<<24>>24==(a[(aM&1)==0?P:c[R>>2]|0]|0)){if(aJ){ay=c[(c[aN>>2]|0)+40>>2]|0;x=0,as(ay|0,aN|0)|0;if(x){x=0;ak=ac;al=ab;am=997;break L1245}}else{c[aH>>2]=aO+1}aH=d[G]|0;az=((aH&1|0)==0?aH>>>1:c[Q>>2]|0)>>>0>1?z:af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}if(aJ){aJ=(x=0,as(c[(c[aN>>2]|0)+36>>2]|0,aN|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}aQ=aJ&255}else{aQ=a[aO]|0}if(aQ<<24>>24!=(a[(a[H]&1)==0?M:c[O>>2]|0]|0)){am=1083;break L1245}aJ=c[g>>2]|0;aH=aJ+12|0;ay=c[aH>>2]|0;if((ay|0)==(c[aJ+16>>2]|0)){aR=c[(c[aJ>>2]|0)+40>>2]|0;x=0,as(aR|0,aJ|0)|0;if(x){x=0;ak=ac;al=ab;am=997;break L1245}}else{c[aH>>2]=ay+1}a[l]=1;ay=d[H]|0;az=((ay&1|0)==0?ay>>>1:c[N>>2]|0)>>>0>1?A:af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}if(ax){if(aI){ax=(x=0,as(c[(c[aw>>2]|0)+36>>2]|0,aw|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}aS=ax&255;aT=a[H]|0}else{aS=a[aG]|0;aT=av}if(aS<<24>>24!=(a[(aT&1)==0?M:c[O>>2]|0]|0)){az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}av=c[g>>2]|0;ax=av+12|0;ay=c[ax>>2]|0;if((ay|0)==(c[av+16>>2]|0)){aH=c[(c[av>>2]|0)+40>>2]|0;x=0,as(aH|0,av|0)|0;if(x){x=0;ak=ac;al=ab;am=997;break L1245}}else{c[ax>>2]=ay+1}a[l]=1;ay=d[H]|0;az=((ay&1|0)==0?ay>>>1:c[N>>2]|0)>>>0>1?A:af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}if(aI){aI=(x=0,as(c[(c[aw>>2]|0)+36>>2]|0,aw|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}aU=aI&255;aV=a[G]|0}else{aU=a[aG]|0;aV=aj}if(aU<<24>>24!=(a[(aV&1)==0?P:c[R>>2]|0]|0)){a[l]=1;az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}aj=c[g>>2]|0;aG=aj+12|0;aI=c[aG>>2]|0;if((aI|0)==(c[aj+16>>2]|0)){aw=c[(c[aj>>2]|0)+40>>2]|0;x=0,as(aw|0,aj|0)|0;if(x){x=0;ak=ac;al=ab;am=997;break L1245}}else{c[aG>>2]=aI+1}aI=d[G]|0;az=((aI&1|0)==0?aI>>>1:c[Q>>2]|0)>>>0>1?z:af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break};case 2:{if(!((af|0)!=0|ag>>>0<2)){if((ag|0)==2){aW=(a[Z]|0)!=0}else{aW=0}if(!(S|aW)){az=0;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}}aI=a[F]|0;aG=c[V>>2]|0;aj=(aI&1)==0?T:aG;L1327:do{if((ag|0)==0){aX=aj;aY=aI;aZ=aG}else{if((d[s+(ag-1)|0]|0)>=2){aX=aj;aY=aI;aZ=aG;break}aw=aI&255;L1330:do{if((((aw&1|0)==0?aw>>>1:c[U>>2]|0)|0)==0){a_=aj;a$=aI;a0=aG}else{ay=aj;while(1){ax=a[ay]|0;av=(x=0,as(86,ax|0)|0);if(x){x=0;am=994;break L1245}if((av|0)==0){break}if((b[(c[L>>2]|0)+(ax<<1)>>1]&8192)==0){break}ax=ay+1|0;av=a[F]|0;aH=c[V>>2]|0;aJ=av&255;if((ax|0)==(((av&1)==0?T:aH)+((aJ&1|0)==0?aJ>>>1:c[U>>2]|0)|0)){a_=ax;a$=av;a0=aH;break L1330}else{ay=ax}}a_=ay;a$=a[F]|0;a0=c[V>>2]|0}}while(0);aw=(a$&1)==0?T:a0;ax=a_-aw|0;aH=a[I]|0;av=aH&255;aJ=(av&1|0)==0?av>>>1:c[X>>2]|0;if(ax>>>0>aJ>>>0){aX=aw;aY=a$;aZ=a0;break}av=(aH&1)==0?W:c[Y>>2]|0;aH=av+aJ|0;if((a_|0)==(aw|0)){aX=a_;aY=a$;aZ=a0;break}aR=av+(aJ-ax)|0;ax=aw;while(1){if((a[aR]|0)!=(a[ax]|0)){aX=aw;aY=a$;aZ=a0;break L1327}aJ=aR+1|0;if((aJ|0)==(aH|0)){aX=a_;aY=a$;aZ=a0;break}else{aR=aJ;ax=ax+1|0}}}}while(0);aj=aY&255;L1344:do{if((aX|0)==(((aY&1)==0?T:aZ)+((aj&1|0)==0?aj>>>1:c[U>>2]|0)|0)){a1=aX}else{aG=an;aI=aX;while(1){ax=c[g>>2]|0;do{if((ax|0)==0){a2=0}else{if((c[ax+12>>2]|0)!=(c[ax+16>>2]|0)){a2=ax;break}aR=(x=0,as(c[(c[ax>>2]|0)+36>>2]|0,ax|0)|0);if(x){x=0;am=995;break L1245}if((aR|0)==-1){c[g>>2]=0;a2=0;break}else{a2=c[g>>2]|0;break}}}while(0);ax=(a2|0)==0;do{if((aG|0)==0){am=1114}else{if((c[aG+12>>2]|0)!=(c[aG+16>>2]|0)){if(ax){a3=aG;break}else{a1=aI;break L1344}}ay=(x=0,as(c[(c[aG>>2]|0)+36>>2]|0,aG|0)|0);if(x){x=0;am=995;break L1245}if((ay|0)==-1){c[J>>2]=0;am=1114;break}else{if(ax){a3=aG;break}else{a1=aI;break L1344}}}}while(0);if((am|0)==1114){am=0;if(ax){a1=aI;break L1344}else{a3=0}}ay=c[g>>2]|0;aR=c[ay+12>>2]|0;if((aR|0)==(c[ay+16>>2]|0)){aH=(x=0,as(c[(c[ay>>2]|0)+36>>2]|0,ay|0)|0);if(x){x=0;am=995;break L1245}a4=aH&255}else{a4=a[aR]|0}if(a4<<24>>24!=(a[aI]|0)){a1=aI;break L1344}aR=c[g>>2]|0;aH=aR+12|0;ay=c[aH>>2]|0;if((ay|0)==(c[aR+16>>2]|0)){aw=c[(c[aR>>2]|0)+40>>2]|0;x=0,as(aw|0,aR|0)|0;if(x){x=0;am=995;break L1245}}else{c[aH>>2]=ay+1}ay=aI+1|0;aH=a[F]|0;aR=aH&255;if((ay|0)==(((aH&1)==0?T:c[V>>2]|0)+((aR&1|0)==0?aR>>>1:c[U>>2]|0)|0)){a1=ay;break}else{aG=a3;aI=ay}}}}while(0);if(!S){az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1267}aj=a[F]|0;aI=aj&255;if((a1|0)==(((aj&1)==0?T:c[V>>2]|0)+((aI&1|0)==0?aI>>>1:c[U>>2]|0)|0)){az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa}else{am=1127;break L1245}break};case 1:{if((ag|0)==3){ao=ab;ar=ac;at=ad;au=af;am=1247;break L1245}aI=c[g>>2]|0;aj=c[aI+12>>2]|0;if((aj|0)==(c[aI+16>>2]|0)){aG=(x=0,as(c[(c[aI>>2]|0)+36>>2]|0,aI|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}a5=aG&255}else{a5=a[aj]|0}aj=a5<<24>>24;aG=(x=0,as(86,aj|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}if((aG|0)==0){am=1015;break L1245}if((b[(c[L>>2]|0)+(aj<<1)>>1]&8192)==0){am=1015;break L1245}aj=c[g>>2]|0;aG=aj+12|0;aI=c[aG>>2]|0;if((aI|0)==(c[aj+16>>2]|0)){ay=(x=0,as(c[(c[aj>>2]|0)+40>>2]|0,aj|0)|0);if(x){x=0;ak=ac;al=ab;am=997;break L1245}a6=ay&255}else{c[aG>>2]=aI+1;a6=a[aI]|0}x=0;aq(120,B|0,a6|0);if(!x){am=1016}else{x=0;ak=ac;al=ab;am=997;break L1245}break};case 0:{am=1016;break};case 4:{aI=0;aG=ae;ay=ad;aj=ac;aR=ab;aH=aa;L1394:while(1){aw=c[g>>2]|0;do{if((aw|0)==0){a7=0}else{if((c[aw+12>>2]|0)!=(c[aw+16>>2]|0)){a7=aw;break}aJ=(x=0,as(c[(c[aw>>2]|0)+36>>2]|0,aw|0)|0);if(x){x=0;a8=aj;a9=aR;am=992;break L1245}if((aJ|0)==-1){c[g>>2]=0;a7=0;break}else{a7=c[g>>2]|0;break}}}while(0);aw=(a7|0)==0;aJ=c[J>>2]|0;do{if((aJ|0)==0){am=1140}else{if((c[aJ+12>>2]|0)!=(c[aJ+16>>2]|0)){if(aw){break}else{break L1394}}av=(x=0,as(c[(c[aJ>>2]|0)+36>>2]|0,aJ|0)|0);if(x){x=0;a8=aj;a9=aR;am=992;break L1245}if((av|0)==-1){c[J>>2]=0;am=1140;break}else{if(aw){break}else{break L1394}}}}while(0);if((am|0)==1140){am=0;if(aw){break}}aJ=c[g>>2]|0;av=c[aJ+12>>2]|0;if((av|0)==(c[aJ+16>>2]|0)){ba=(x=0,as(c[(c[aJ>>2]|0)+36>>2]|0,aJ|0)|0);if(x){x=0;a8=aj;a9=aR;am=992;break L1245}bb=ba&255}else{bb=a[av]|0}av=bb<<24>>24;ba=(x=0,as(86,av|0)|0);if(x){x=0;a8=aj;a9=aR;am=992;break L1245}do{if((ba|0)==0){am=1160}else{if((b[(c[L>>2]|0)+(av<<1)>>1]&2048)==0){am=1160;break}aJ=c[o>>2]|0;if((aJ|0)==(aH|0)){bc=(c[$>>2]|0)!=276;bd=c[h>>2]|0;be=aH-bd|0;bf=be>>>0<2147483647?be<<1:-1;bg=nP(bc?bd:0,bf)|0;if((bg|0)==0){x=0;aK(4);if(x){x=0;a8=aj;a9=aR;am=992;break L1245}}do{if(bc){c[h>>2]=bg;bh=bg}else{bd=c[h>>2]|0;c[h>>2]=bg;if((bd|0)==0){bh=bg;break}x=0;ap(c[$>>2]|0,bd|0);if(x){x=0;am=1157;break L1245}bh=c[h>>2]|0}}while(0);c[$>>2]=132;bg=bh+be|0;c[o>>2]=bg;bi=(c[h>>2]|0)+bf|0;bj=bg}else{bi=aH;bj=aJ}c[o>>2]=bj+1;a[bj]=bb;bl=aI+1|0;bm=aG;bn=ay;bo=aj;bp=aR;bq=bi}}while(0);if((am|0)==1160){am=0;av=d[w]|0;if((((av&1|0)==0?av>>>1:c[_>>2]|0)|0)==0|(aI|0)==0){break}if(bb<<24>>24!=(a[u]|0)){break}if((ay|0)==(aG|0)){av=ay-aj|0;ba=av>>>0<2147483647?av<<1:-1;aw=av>>2;if((aR|0)==276){br=0}else{br=aj}av=nP(br,ba)|0;bg=av;if((av|0)==0){x=0;aK(4);if(x){x=0;a8=aj;a9=aR;am=992;break L1245}}bs=bg+(ba>>>2<<2)|0;bt=bg+(aw<<2)|0;bu=bg;bv=132}else{bs=aG;bt=ay;bu=aj;bv=aR}c[bt>>2]=aI;bl=0;bm=bs;bn=bt+4|0;bo=bu;bp=bv;bq=aH}bg=c[g>>2]|0;aw=bg+12|0;ba=c[aw>>2]|0;if((ba|0)==(c[bg+16>>2]|0)){av=c[(c[bg>>2]|0)+40>>2]|0;x=0,as(av|0,bg|0)|0;if(!x){aI=bl;aG=bm;ay=bn;aj=bo;aR=bp;aH=bq;continue}else{x=0;a8=bo;a9=bp;am=992;break L1245}}else{c[aw>>2]=ba+1;aI=bl;aG=bm;ay=bn;aj=bo;aR=bp;aH=bq;continue}}if((aj|0)==(ay|0)|(aI|0)==0){bw=aG;bx=ay;by=aj;bz=aR}else{if((ay|0)==(aG|0)){ba=ay-aj|0;aw=ba>>>0<2147483647?ba<<1:-1;bg=ba>>2;if((aR|0)==276){bA=0}else{bA=aj}ba=nP(bA,aw)|0;av=ba;if((ba|0)==0){x=0;aK(4);if(x){x=0;ak=aj;al=aR;am=997;break L1245}}bB=av+(aw>>>2<<2)|0;bC=av+(bg<<2)|0;bD=av;bE=132}else{bB=aG;bC=ay;bD=aj;bE=aR}c[bC>>2]=aI;bw=bB;bx=bC+4|0;by=bD;bz=bE}if((c[C>>2]|0)>0){av=c[g>>2]|0;do{if((av|0)==0){bF=0}else{if((c[av+12>>2]|0)!=(c[av+16>>2]|0)){bF=av;break}bg=(x=0,as(c[(c[av>>2]|0)+36>>2]|0,av|0)|0);if(x){x=0;ak=by;al=bz;am=997;break L1245}if((bg|0)==-1){c[g>>2]=0;bF=0;break}else{bF=c[g>>2]|0;break}}}while(0);av=(bF|0)==0;aI=c[J>>2]|0;do{if((aI|0)==0){am=1193}else{if((c[aI+12>>2]|0)!=(c[aI+16>>2]|0)){if(av){bG=aI;break}else{am=1200;break L1245}}aR=(x=0,as(c[(c[aI>>2]|0)+36>>2]|0,aI|0)|0);if(x){x=0;ak=by;al=bz;am=997;break L1245}if((aR|0)==-1){c[J>>2]=0;am=1193;break}else{if(av){bG=aI;break}else{am=1200;break L1245}}}}while(0);if((am|0)==1193){am=0;if(av){am=1200;break L1245}else{bG=0}}aI=c[g>>2]|0;aR=c[aI+12>>2]|0;if((aR|0)==(c[aI+16>>2]|0)){aj=(x=0,as(c[(c[aI>>2]|0)+36>>2]|0,aI|0)|0);if(x){x=0;ak=by;al=bz;am=997;break L1245}bH=aj&255}else{bH=a[aR]|0}if(bH<<24>>24!=(a[t]|0)){am=1200;break L1245}aR=c[g>>2]|0;aj=aR+12|0;aI=c[aj>>2]|0;if((aI|0)==(c[aR+16>>2]|0)){ay=c[(c[aR>>2]|0)+40>>2]|0;x=0,as(ay|0,aR|0)|0;if(!x){bI=aH;bJ=bG}else{x=0;ak=by;al=bz;am=997;break L1245}}else{c[aj>>2]=aI+1;bI=aH;bJ=bG}while(1){aI=c[g>>2]|0;do{if((aI|0)==0){bK=0}else{if((c[aI+12>>2]|0)!=(c[aI+16>>2]|0)){bK=aI;break}aj=(x=0,as(c[(c[aI>>2]|0)+36>>2]|0,aI|0)|0);if(x){x=0;am=993;break L1245}if((aj|0)==-1){c[g>>2]=0;bK=0;break}else{bK=c[g>>2]|0;break}}}while(0);aI=(bK|0)==0;do{if((bJ|0)==0){am=1216}else{if((c[bJ+12>>2]|0)!=(c[bJ+16>>2]|0)){if(aI){bL=bJ;break}else{am=1225;break L1245}}aj=(x=0,as(c[(c[bJ>>2]|0)+36>>2]|0,bJ|0)|0);if(x){x=0;am=993;break L1245}if((aj|0)==-1){c[J>>2]=0;am=1216;break}else{if(aI){bL=bJ;break}else{am=1225;break L1245}}}}while(0);if((am|0)==1216){am=0;if(aI){am=1225;break L1245}else{bL=0}}aj=c[g>>2]|0;aR=c[aj+12>>2]|0;if((aR|0)==(c[aj+16>>2]|0)){ay=(x=0,as(c[(c[aj>>2]|0)+36>>2]|0,aj|0)|0);if(x){x=0;am=993;break L1245}bM=ay&255}else{bM=a[aR]|0}aR=bM<<24>>24;ay=(x=0,as(86,aR|0)|0);if(x){x=0;am=993;break L1245}if((ay|0)==0){am=1225;break L1245}if((b[(c[L>>2]|0)+(aR<<1)>>1]&2048)==0){am=1225;break L1245}aR=c[o>>2]|0;if((aR|0)==(bI|0)){ay=(c[$>>2]|0)!=276;aj=c[h>>2]|0;aG=bI-aj|0;bg=aG>>>0<2147483647?aG<<1:-1;aw=nP(ay?aj:0,bg)|0;if((aw|0)==0){x=0;aK(4);if(x){x=0;am=993;break L1245}}do{if(ay){c[h>>2]=aw;bN=aw}else{aj=c[h>>2]|0;c[h>>2]=aw;if((aj|0)==0){bN=aw;break}x=0;ap(c[$>>2]|0,aj|0);if(x){x=0;am=1234;break L1245}bN=c[h>>2]|0}}while(0);c[$>>2]=132;aw=bN+aG|0;c[o>>2]=aw;bO=(c[h>>2]|0)+bg|0;bP=aw}else{bO=bI;bP=aR}aw=c[g>>2]|0;ay=c[aw+12>>2]|0;if((ay|0)==(c[aw+16>>2]|0)){aI=(x=0,as(c[(c[aw>>2]|0)+36>>2]|0,aw|0)|0);if(x){x=0;am=993;break L1245}bQ=aI&255;bR=c[o>>2]|0}else{bQ=a[ay]|0;bR=bP}c[o>>2]=bR+1;a[bR]=bQ;ay=(c[C>>2]|0)-1|0;c[C>>2]=ay;aI=c[g>>2]|0;aw=aI+12|0;aj=c[aw>>2]|0;if((aj|0)==(c[aI+16>>2]|0)){ba=c[(c[aI>>2]|0)+40>>2]|0;x=0,as(ba|0,aI|0)|0;if(x){x=0;am=993;break L1245}}else{c[aw>>2]=aj+1}if((ay|0)>0){bI=bO;bJ=bL}else{bS=bO;break}}}else{bS=aH}if((c[o>>2]|0)==(c[h>>2]|0)){am=1245;break L1245}else{az=af;aA=bw;aB=bx;aC=by;aD=bz;aF=bS}break};default:{az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa}}}while(0);L1550:do{if((am|0)==1016){am=0;if((ag|0)==3){ao=ab;ar=ac;at=ad;au=af;am=1247;break L1245}else{bT=an}while(1){ah=c[g>>2]|0;do{if((ah|0)==0){bU=0}else{if((c[ah+12>>2]|0)!=(c[ah+16>>2]|0)){bU=ah;break}av=(x=0,as(c[(c[ah>>2]|0)+36>>2]|0,ah|0)|0);if(x){x=0;am=996;break L1245}if((av|0)==-1){c[g>>2]=0;bU=0;break}else{bU=c[g>>2]|0;break}}}while(0);ah=(bU|0)==0;do{if((bT|0)==0){am=1029}else{if((c[bT+12>>2]|0)!=(c[bT+16>>2]|0)){if(ah){bV=bT;break}else{az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1550}}aR=(x=0,as(c[(c[bT>>2]|0)+36>>2]|0,bT|0)|0);if(x){x=0;am=996;break L1245}if((aR|0)==-1){c[J>>2]=0;am=1029;break}else{if(ah){bV=bT;break}else{az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1550}}}}while(0);if((am|0)==1029){am=0;if(ah){az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1550}else{bV=0}}aR=c[g>>2]|0;bg=c[aR+12>>2]|0;if((bg|0)==(c[aR+16>>2]|0)){aG=(x=0,as(c[(c[aR>>2]|0)+36>>2]|0,aR|0)|0);if(x){x=0;am=996;break L1245}bW=aG&255}else{bW=a[bg]|0}bg=bW<<24>>24;aG=(x=0,as(86,bg|0)|0);if(x){x=0;am=996;break L1245}if((aG|0)==0){az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1550}if((b[(c[L>>2]|0)+(bg<<1)>>1]&8192)==0){az=af;aA=ae;aB=ad;aC=ac;aD=ab;aF=aa;break L1550}bg=c[g>>2]|0;aG=bg+12|0;aR=c[aG>>2]|0;if((aR|0)==(c[bg+16>>2]|0)){av=(x=0,as(c[(c[bg>>2]|0)+40>>2]|0,bg|0)|0);if(x){x=0;am=996;break L1245}bX=av&255}else{c[aG>>2]=aR+1;bX=a[aR]|0}x=0;aq(120,B|0,bX|0);if(!x){bT=bV}else{x=0;am=996;break L1245}}}}while(0);aH=ag+1|0;if(aH>>>0<4){aa=aF;ab=aD;ac=aC;ad=aB;ae=aA;af=az;ag=aH}else{ao=aD;ar=aC;at=aB;au=az;am=1247;break}}L1588:do{if((am|0)==993){ag=cu(-1,-1)|0;bY=K;bZ=ag;b_=by;b$=bz;break L1242}else if((am|0)==994){ag=cu(-1,-1)|0;bY=K;bZ=ag;b_=ac;b$=ab;break L1242}else if((am|0)==997){ag=cu(-1,-1)|0;bY=K;bZ=ag;b_=ak;b$=al;break L1242}else if((am|0)==992){ag=cu(-1,-1)|0;bY=K;bZ=ag;b_=a8;b$=a9;break L1242}else if((am|0)==1083){c[k>>2]=c[k>>2]|4;b0=0;b1=ac;b2=ab}else if((am|0)==995){ag=cu(-1,-1)|0;bY=K;bZ=ag;b_=ac;b$=ab;break L1242}else if((am|0)==996){ag=cu(-1,-1)|0;bY=K;bZ=ag;b_=ac;b$=ab;break L1242}else if((am|0)==1015){c[k>>2]=c[k>>2]|4;b0=0;b1=ac;b2=ab}else if((am|0)==1127){c[k>>2]=c[k>>2]|4;b0=0;b1=ac;b2=ab}else if((am|0)==1157){cu(-1,-1,0)|0;cA();return 0}else if((am|0)==1200){c[k>>2]=c[k>>2]|4;b0=0;b1=by;b2=bz}else if((am|0)==1225){c[k>>2]=c[k>>2]|4;b0=0;b1=by;b2=bz}else if((am|0)==1234){cu(-1,-1,0)|0;cA();return 0}else if((am|0)==1245){c[k>>2]=c[k>>2]|4;b0=0;b1=by;b2=bz}else if((am|0)==1247){L1604:do{if((au|0)!=0){ag=au;af=au+1|0;ae=au+8|0;ad=au+4|0;aa=1;L1606:while(1){L=d[ag]|0;if((L&1|0)==0){b3=L>>>1}else{b3=c[ad>>2]|0}if(aa>>>0>=b3>>>0){break L1604}L=c[g>>2]|0;do{if((L|0)==0){b4=0}else{if((c[L+12>>2]|0)!=(c[L+16>>2]|0)){b4=L;break}h=(x=0,as(c[(c[L>>2]|0)+36>>2]|0,L|0)|0);if(x){x=0;am=991;break L1606}if((h|0)==-1){c[g>>2]=0;b4=0;break}else{b4=c[g>>2]|0;break}}}while(0);L=(b4|0)==0;ah=c[J>>2]|0;do{if((ah|0)==0){am=1265}else{if((c[ah+12>>2]|0)!=(c[ah+16>>2]|0)){if(L){break}else{am=1274;break L1606}}h=(x=0,as(c[(c[ah>>2]|0)+36>>2]|0,ah|0)|0);if(x){x=0;am=991;break L1606}if((h|0)==-1){c[J>>2]=0;am=1265;break}else{if(L){break}else{am=1274;break L1606}}}}while(0);if((am|0)==1265){am=0;if(L){am=1274;break}}ah=c[g>>2]|0;h=c[ah+12>>2]|0;if((h|0)==(c[ah+16>>2]|0)){$=(x=0,as(c[(c[ah>>2]|0)+36>>2]|0,ah|0)|0);if(x){x=0;am=991;break}b5=$&255}else{b5=a[h]|0}if((a[ag]&1)==0){b6=af}else{b6=c[ae>>2]|0}if(b5<<24>>24!=(a[b6+aa|0]|0)){am=1274;break}h=aa+1|0;$=c[g>>2]|0;ah=$+12|0;_=c[ah>>2]|0;if((_|0)==(c[$+16>>2]|0)){U=c[(c[$>>2]|0)+40>>2]|0;x=0,as(U|0,$|0)|0;if(!x){aa=h;continue}else{x=0;am=991;break}}else{c[ah>>2]=_+1;aa=h;continue}}if((am|0)==991){aa=cu(-1,-1)|0;bY=K;bZ=aa;b_=ar;b$=ao;break L1242}else if((am|0)==1274){c[k>>2]=c[k>>2]|4;b0=0;b1=ar;b2=ao;break L1588}}}while(0);if((ar|0)==(at|0)){b0=1;b1=at;b2=ao;break}c[D>>2]=0;iB(v,ar,at,D);if((c[D>>2]|0)==0){b0=1;b1=ar;b2=ao;break}c[k>>2]=c[k>>2]|4;b0=0;b1=ar;b2=ao}}while(0);gI(B);gI(A);gI(z);gI(y);gI(v);if((b1|0)==0){i=q;return b0|0}x=0;ap(b2|0,b1|0);if(!x){i=q;return b0|0}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else{x=0;g=cu(-1,-1)|0;bY=K;bZ=g;b_=E;b$=276}}while(0);gI(B);gI(A);gI(z);gI(y);gI(v);if((b_|0)==0){bk(bZ|0)}x=0;ap(b$|0,b_|0);if(!x){bk(bZ|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}return 0}function kX(a){a=a|0;var b=0;b=c9(8)|0;x=0;aq(76,b|0,a|0);if(!x){ca(b|0,11160,30)}else{x=0;a=cu(-1,-1)|0;by(b|0);bk(a|0)}}function kY(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;d=i;i=i+160|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+120|0;o=d+128|0;p=d+136|0;q=d+144|0;r=d+152|0;s=m|0;t=n|0;c[t>>2]=s;u=n+4|0;c[u>>2]=276;v=m+100|0;x=0;aq(96,p|0,h|0);do{if(!x){m=p|0;w=c[m>>2]|0;if((c[4252]|0)==-1){y=1296}else{c[l>>2]=17008;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17008,l|0,154);if(!x){y=1296}else{x=0}}L1675:do{if((y|0)==1296){z=(c[4253]|0)-1|0;A=c[w+8>>2]|0;do{if((c[w+12>>2]|0)-A>>2>>>0>z>>>0){B=c[A+(z<<2)>>2]|0;if((B|0)==0){break}C=B;a[q]=0;D=f|0;E=c[D>>2]|0;c[r>>2]=E;F=(x=0,at(2,e|0,r|0,g|0,p|0,c[h+4>>2]|0,j|0,q|0,C|0,n|0,o|0,v|0)|0);if(x){x=0;break L1675}if(F){F=k;if((a[F]&1)==0){a[k+1|0]=0;a[F]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}F=B;if((a[q]&1)!=0){B=(x=0,aF(c[(c[F>>2]|0)+28>>2]|0,C|0,45)|0);if(x){x=0;break L1675}x=0;aq(120,k|0,B|0);if(x){x=0;break L1675}}B=(x=0,aF(c[(c[F>>2]|0)+28>>2]|0,C|0,48)|0);if(x){x=0;break L1675}C=c[o>>2]|0;F=C-1|0;G=c[t>>2]|0;while(1){if(G>>>0>=F>>>0){break}if((a[G]|0)==B<<24>>24){G=G+1|0}else{break}}x=0,au(52,k|0,G|0,C|0)|0;if(x){x=0;break L1675}}B=e|0;F=c[B>>2]|0;do{if((F|0)==0){H=0}else{if((c[F+12>>2]|0)!=(c[F+16>>2]|0)){H=F;break}I=(x=0,as(c[(c[F>>2]|0)+36>>2]|0,F|0)|0);if(x){x=0;break L1675}if((I|0)!=-1){H=F;break}c[B>>2]=0;H=0}}while(0);B=(H|0)==0;do{if((E|0)==0){y=1325}else{if((c[E+12>>2]|0)!=(c[E+16>>2]|0)){if(B){break}else{y=1327;break}}F=(x=0,as(c[(c[E>>2]|0)+36>>2]|0,E|0)|0);if(x){x=0;break L1675}if((F|0)==-1){c[D>>2]=0;y=1325;break}else{if(B^(E|0)==0){break}else{y=1327;break}}}}while(0);if((y|0)==1325){if(B){y=1327}}if((y|0)==1327){c[j>>2]=c[j>>2]|2}c[b>>2]=H;E=c[m>>2]|0;gf(E)|0;E=c[t>>2]|0;c[t>>2]=0;if((E|0)==0){i=d;return}x=0;ap(c[u>>2]|0,E|0);if(!x){i=d;return}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);z=c9(4)|0;ns(z);x=0;aJ(12,z|0,11128,210);if(x){x=0;break}}}while(0);w=cu(-1,-1)|0;z=w;w=K;A=c[m>>2]|0;gf(A)|0;A=c[t>>2]|0;c[t>>2]=0;if((A|0)==0){J=w;L=z}else{M=A;N=w;O=z;break}P=L;Q=0;R=P;S=J;bk(R|0)}else{x=0;z=cu(-1,-1)|0;c[t>>2]=0;M=s;N=K;O=z}}while(0);x=0;ap(c[u>>2]|0,M|0);if(!x){J=N;L=O;P=L;Q=0;R=P;S=J;bk(R|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function kZ(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=10;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g|0;if((e|0)==(d|0)){return b|0}if((k-j|0)>>>0<h>>>0){gS(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+1|0}else{n=c[b+8>>2]|0}m=e+(j-g)|0;g=d;d=n+j|0;while(1){a[d]=a[g]|0;l=g+1|0;if((l|0)==(e|0)){break}else{g=l;d=d+1|0}}a[n+m|0]=0;m=j+h|0;if((a[f]&1)==0){a[f]=m<<1&255;return b|0}else{c[b+4>>2]=m;return b|0}return 0}function k_(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+12|0;i=i+7&-8;D=B;E=i;i=i+12|0;i=i+7&-8;F=E;G=i;i=i+12|0;i=i+7&-8;H=G;I=i;i=i+12|0;i=i+7&-8;J=I;if(b){b=c[d>>2]|0;if((c[4370]|0)!=-1){c[p>>2]=17480;c[p+4>>2]=16;c[p+8>>2]=0;gD(17480,p,154)}p=(c[4371]|0)-1|0;K=c[b+8>>2]|0;if((c[b+12>>2]|0)-K>>2>>>0<=p>>>0){L=c9(4)|0;M=L;ns(M);ca(L|0,11128,210)}b=c[K+(p<<2)>>2]|0;if((b|0)==0){L=c9(4)|0;M=L;ns(M);ca(L|0,11128,210)}L=b;dx[c[(c[b>>2]|0)+44>>2]&255](q,L);M=e;C=c[q>>2]|0;a[M]=C&255;C=C>>8;a[M+1|0]=C&255;C=C>>8;a[M+2|0]=C&255;C=C>>8;a[M+3|0]=C&255;M=b;dx[c[(c[M>>2]|0)+32>>2]&255](r,L);q=l;if((a[q]&1)==0){a[l+1|0]=0;a[q]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}x=0;aq(4,l|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];n0(s|0,0,12);gI(r);dx[c[(c[M>>2]|0)+28>>2]&255](t,L);r=k;if((a[r]&1)==0){a[k+1|0]=0;a[r]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}x=0;aq(4,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];n0(u|0,0,12);gI(t);t=b;a[f]=dz[c[(c[t>>2]|0)+12>>2]&255](L)|0;a[g]=dz[c[(c[t>>2]|0)+16>>2]&255](L)|0;dx[c[(c[M>>2]|0)+20>>2]&255](v,L);t=h;if((a[t]&1)==0){a[h+1|0]=0;a[t]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}x=0;aq(4,h|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[t>>2]=c[w>>2];c[t+4>>2]=c[w+4>>2];c[t+8>>2]=c[w+8>>2];n0(w|0,0,12);gI(v);dx[c[(c[M>>2]|0)+24>>2]&255](y,L);M=j;if((a[M]&1)==0){a[j+1|0]=0;a[M]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}x=0;aq(4,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[M>>2]=c[z>>2];c[M+4>>2]=c[z+4>>2];c[M+8>>2]=c[z+8>>2];n0(z|0,0,12);gI(y);N=dz[c[(c[b>>2]|0)+36>>2]&255](L)|0;c[m>>2]=N;i=n;return}else{L=c[d>>2]|0;if((c[4372]|0)!=-1){c[o>>2]=17488;c[o+4>>2]=16;c[o+8>>2]=0;gD(17488,o,154)}o=(c[4373]|0)-1|0;d=c[L+8>>2]|0;if((c[L+12>>2]|0)-d>>2>>>0<=o>>>0){O=c9(4)|0;P=O;ns(P);ca(O|0,11128,210)}L=c[d+(o<<2)>>2]|0;if((L|0)==0){O=c9(4)|0;P=O;ns(P);ca(O|0,11128,210)}O=L;dx[c[(c[L>>2]|0)+44>>2]&255](A,O);P=e;C=c[A>>2]|0;a[P]=C&255;C=C>>8;a[P+1|0]=C&255;C=C>>8;a[P+2|0]=C&255;C=C>>8;a[P+3|0]=C&255;P=L;dx[c[(c[P>>2]|0)+32>>2]&255](B,O);A=l;if((a[A]&1)==0){a[l+1|0]=0;a[A]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}x=0;aq(4,l|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[A>>2]=c[D>>2];c[A+4>>2]=c[D+4>>2];c[A+8>>2]=c[D+8>>2];n0(D|0,0,12);gI(B);dx[c[(c[P>>2]|0)+28>>2]&255](E,O);B=k;if((a[B]&1)==0){a[k+1|0]=0;a[B]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}x=0;aq(4,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[B>>2]=c[F>>2];c[B+4>>2]=c[F+4>>2];c[B+8>>2]=c[F+8>>2];n0(F|0,0,12);gI(E);E=L;a[f]=dz[c[(c[E>>2]|0)+12>>2]&255](O)|0;a[g]=dz[c[(c[E>>2]|0)+16>>2]&255](O)|0;dx[c[(c[P>>2]|0)+20>>2]&255](G,O);E=h;if((a[E]&1)==0){a[h+1|0]=0;a[E]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}x=0;aq(4,h|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[E>>2]=c[H>>2];c[E+4>>2]=c[H+4>>2];c[E+8>>2]=c[H+8>>2];n0(H|0,0,12);gI(G);dx[c[(c[P>>2]|0)+24>>2]&255](I,O);P=j;if((a[P]&1)==0){a[j+1|0]=0;a[P]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}x=0;aq(4,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[P>>2]=c[J>>2];c[P+4>>2]=c[J+4>>2];c[P+8>>2]=c[J+8>>2];n0(J|0,0,12);gI(I);N=dz[c[(c[L>>2]|0)+36>>2]&255](O)|0;c[m>>2]=N;i=n;return}}function k$(a){a=a|0;gd(a|0);nU(a);return}function k0(a){a=a|0;gd(a|0);return}function k1(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0;d=i;i=i+600|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=d+456|0;t=d+496|0;u=m|0;v=n|0;c[v>>2]=u;w=n+4|0;c[w>>2]=276;y=m+400|0;x=0;aq(96,p|0,h|0);do{if(!x){m=p|0;z=c[m>>2]|0;if((c[4250]|0)==-1){A=1425}else{c[l>>2]=17e3;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17e3,l|0,154);if(!x){A=1425}else{x=0;A=1436}}L1844:do{if((A|0)==1425){B=(c[4251]|0)-1|0;C=c[z+8>>2]|0;do{if((c[z+12>>2]|0)-C>>2>>>0>B>>>0){D=c[C+(B<<2)>>2]|0;if((D|0)==0){break}E=D;a[q]=0;F=f|0;c[r>>2]=c[F>>2];G=(x=0,at(4,e|0,r|0,g|0,p|0,c[h+4>>2]|0,j|0,q|0,E|0,n|0,o|0,y|0)|0);if(x){x=0;A=1436;break L1844}L1850:do{if(G){H=s|0;I=c[(c[D>>2]|0)+48>>2]|0;x=0,aM(I|0,E|0,4016,4026,H|0)|0;if(x){x=0;A=1436;break L1844}I=t|0;J=c[o>>2]|0;L=c[v>>2]|0;M=J-L|0;do{if((M|0)>392){N=nN((M>>2)+2|0)|0;if((N|0)!=0){O=N;P=N;A=1440;break}x=0;aK(4);if(!x){O=0;P=0;A=1440}else{x=0;Q=0;A=1437}}else{O=I;P=0;A=1440}}while(0);do{if((A|0)==1440){if((a[q]&1)==0){R=O}else{a[O]=45;R=O+1|0}if(L>>>0<J>>>0){M=s+40|0;N=s;S=R;T=L;while(1){U=H;while(1){if((U|0)==(M|0)){V=M;break}if((c[U>>2]|0)==(c[T>>2]|0)){V=U;break}else{U=U+4|0}}a[S]=a[4016+(V-N>>2)|0]|0;U=T+4|0;W=S+1|0;if(U>>>0<(c[o>>2]|0)>>>0){S=W;T=U}else{X=W;break}}}else{X=R}a[X]=0;T=cS(I|0,3088,(S=i,i=i+8|0,c[S>>2]=k,S)|0)|0;i=S;if((T|0)==1){if((P|0)==0){break L1850}nO(P);break L1850}T=c9(8)|0;x=0;aq(76,T|0,2976);if(x){x=0;S=cu(-1,-1)|0;N=K;by(T|0);Y=N;Z=S;_=P;break}x=0;aJ(12,T|0,11160,30);if(x){x=0;Q=P;A=1437;break}}}while(0);if((A|0)==1437){I=cu(-1,-1)|0;Y=K;Z=I;_=Q}I=Z;H=Y;if((_|0)==0){$=H;aa=I;break L1844}nO(_);$=H;aa=I;break L1844}}while(0);E=e|0;D=c[E>>2]|0;do{if((D|0)==0){ab=0}else{G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){I=(x=0,as(c[(c[D>>2]|0)+36>>2]|0,D|0)|0);if(!x){ac=I}else{x=0;A=1436;break L1844}}else{ac=c[G>>2]|0}if((ac|0)!=-1){ab=D;break}c[E>>2]=0;ab=0}}while(0);E=(ab|0)==0;D=c[F>>2]|0;do{if((D|0)==0){A=1467}else{G=c[D+12>>2]|0;if((G|0)==(c[D+16>>2]|0)){I=(x=0,as(c[(c[D>>2]|0)+36>>2]|0,D|0)|0);if(!x){ad=I}else{x=0;A=1436;break L1844}}else{ad=c[G>>2]|0}if((ad|0)==-1){c[F>>2]=0;A=1467;break}else{if(E^(D|0)==0){break}else{A=1469;break}}}}while(0);if((A|0)==1467){if(E){A=1469}}if((A|0)==1469){c[j>>2]=c[j>>2]|2}c[b>>2]=ab;D=c[m>>2]|0;gf(D)|0;D=c[v>>2]|0;c[v>>2]=0;if((D|0)==0){i=d;return}x=0;ap(c[w>>2]|0,D|0);if(!x){i=d;return}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);B=c9(4)|0;ns(B);x=0;aJ(12,B|0,11128,210);if(x){x=0;A=1436;break}}}while(0);if((A|0)==1436){z=cu(-1,-1)|0;$=K;aa=z}z=c[m>>2]|0;gf(z)|0;z=c[v>>2]|0;c[v>>2]=0;if((z|0)==0){ae=aa;af=$}else{ag=z;ah=aa;ai=$;break}aj=ae;ak=0;al=aj;am=af;bk(al|0)}else{x=0;z=cu(-1,-1)|0;c[v>>2]=0;ag=u;ah=z;ai=K}}while(0);x=0;ap(c[w>>2]|0,ag|0);if(!x){ae=ah;af=ai;aj=ae;ak=0;al=aj;am=af;bk(al|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function k2(b,e,f,g,h,j,k,l,m,n,o){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ar=0,at=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aF=0,aG=0,aH=0,aI=0,aL=0,aM=0,aN=0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bW=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0;p=i;i=i+448|0;q=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[q>>2];q=p|0;r=p+8|0;s=p+408|0;t=p+416|0;u=p+424|0;v=p+432|0;w=v;y=i;i=i+12|0;i=i+7&-8;z=i;i=i+12|0;i=i+7&-8;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+12|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=i;i=i+4|0;i=i+7&-8;c[q>>2]=o;o=r|0;n0(w|0,0,12);E=y;F=z;G=A;H=B;n0(E|0,0,12);n0(F|0,0,12);n0(G|0,0,12);n0(H|0,0,12);x=0;aE(4,f|0,g|0,s|0,t|0,u|0,v|0,y|0,z|0,A|0,C|0);L1923:do{if(!x){g=m|0;c[n>>2]=c[g>>2];f=b|0;I=e|0;J=l;L=A+4|0;M=A+8|0;N=z+4|0;O=z+8|0;P=(h&512|0)!=0;Q=y+4|0;R=y+8|0;S=B+4|0;T=B+8|0;U=s+3|0;V=v+4|0;W=276;X=o;Y=o;Z=r+400|0;_=0;$=0;L1925:while(1){aa=c[f>>2]|0;do{if((aa|0)==0){ab=1}else{ac=c[aa+12>>2]|0;if((ac|0)==(c[aa+16>>2]|0)){ad=(x=0,as(c[(c[aa>>2]|0)+36>>2]|0,aa|0)|0);if(!x){ae=ad}else{x=0;af=X;ag=W;ah=1506;break L1925}}else{ae=c[ac>>2]|0}if((ae|0)==-1){c[f>>2]=0;ab=1;break}else{ab=(c[f>>2]|0)==0;break}}}while(0);aa=c[I>>2]|0;do{if((aa|0)==0){ah=1497}else{ac=c[aa+12>>2]|0;if((ac|0)==(c[aa+16>>2]|0)){ad=(x=0,as(c[(c[aa>>2]|0)+36>>2]|0,aa|0)|0);if(!x){ai=ad}else{x=0;af=X;ag=W;ah=1506;break L1925}}else{ai=c[ac>>2]|0}if((ai|0)==-1){c[I>>2]=0;ah=1497;break}else{if(ab^(aa|0)==0){aj=aa;break}else{ak=W;al=X;am=Y;an=_;ah=1737;break L1925}}}}while(0);if((ah|0)==1497){ah=0;if(ab){ak=W;al=X;am=Y;an=_;ah=1737;break}else{aj=0}}L1949:do{switch(a[s+$|0]|0){case 1:{if(($|0)==3){ak=W;al=X;am=Y;an=_;ah=1737;break L1925}aa=c[f>>2]|0;ac=c[aa+12>>2]|0;if((ac|0)==(c[aa+16>>2]|0)){ad=(x=0,as(c[(c[aa>>2]|0)+36>>2]|0,aa|0)|0);if(!x){ao=ad}else{x=0;af=X;ag=W;ah=1506;break L1925}}else{ao=c[ac>>2]|0}ac=(x=0,au(c[(c[J>>2]|0)+12>>2]|0,l|0,8192,ao|0)|0);if(x){x=0;af=X;ag=W;ah=1506;break L1925}if(!ac){ah=1521;break L1925}ac=c[f>>2]|0;ad=ac+12|0;aa=c[ad>>2]|0;if((aa|0)==(c[ac+16>>2]|0)){ar=(x=0,as(c[(c[ac>>2]|0)+40>>2]|0,ac|0)|0);if(!x){at=ar}else{x=0;af=X;ag=W;ah=1506;break L1925}}else{c[ad>>2]=aa+4;at=c[aa>>2]|0}x=0;aq(20,B|0,at|0);if(!x){ah=1522}else{x=0;af=X;ag=W;ah=1506;break L1925}break};case 0:{ah=1522;break};case 3:{aa=a[F]|0;ad=aa&255;ar=(ad&1|0)==0;ac=a[G]|0;av=ac&255;aw=(av&1|0)==0;if(((ar?ad>>>1:c[N>>2]|0)|0)==(-(aw?av>>>1:c[L>>2]|0)|0)){ax=_;ay=Z;az=Y;aA=X;aB=W;break L1949}do{if(((ar?ad>>>1:c[N>>2]|0)|0)!=0){if(((aw?av>>>1:c[L>>2]|0)|0)==0){break}aC=c[f>>2]|0;aD=c[aC+12>>2]|0;if((aD|0)==(c[aC+16>>2]|0)){aF=(x=0,as(c[(c[aC>>2]|0)+36>>2]|0,aC|0)|0);if(x){x=0;af=X;ag=W;ah=1506;break L1925}aG=aF;aH=a[F]|0}else{aG=c[aD>>2]|0;aH=aa}aD=c[f>>2]|0;aF=aD+12|0;aC=c[aF>>2]|0;aI=(aC|0)==(c[aD+16>>2]|0);if((aG|0)==(c[((aH&1)==0?N:c[O>>2]|0)>>2]|0)){if(aI){aL=c[(c[aD>>2]|0)+40>>2]|0;x=0,as(aL|0,aD|0)|0;if(x){x=0;af=X;ag=W;ah=1506;break L1925}}else{c[aF>>2]=aC+4}aF=d[F]|0;ax=((aF&1|0)==0?aF>>>1:c[N>>2]|0)>>>0>1?z:_;ay=Z;az=Y;aA=X;aB=W;break L1949}if(aI){aI=(x=0,as(c[(c[aD>>2]|0)+36>>2]|0,aD|0)|0);if(!x){aM=aI}else{x=0;af=X;ag=W;ah=1506;break L1925}}else{aM=c[aC>>2]|0}if((aM|0)!=(c[((a[G]&1)==0?L:c[M>>2]|0)>>2]|0)){ah=1587;break L1925}aC=c[f>>2]|0;aI=aC+12|0;aD=c[aI>>2]|0;if((aD|0)==(c[aC+16>>2]|0)){aF=c[(c[aC>>2]|0)+40>>2]|0;x=0,as(aF|0,aC|0)|0;if(x){x=0;af=X;ag=W;ah=1506;break L1925}}else{c[aI>>2]=aD+4}a[k]=1;aD=d[G]|0;ax=((aD&1|0)==0?aD>>>1:c[L>>2]|0)>>>0>1?A:_;ay=Z;az=Y;aA=X;aB=W;break L1949}}while(0);av=c[f>>2]|0;aw=c[av+12>>2]|0;aD=(aw|0)==(c[av+16>>2]|0);if(((ar?ad>>>1:c[N>>2]|0)|0)==0){if(aD){aI=(x=0,as(c[(c[av>>2]|0)+36>>2]|0,av|0)|0);if(x){x=0;af=X;ag=W;ah=1506;break L1925}aN=aI;aO=a[G]|0}else{aN=c[aw>>2]|0;aO=ac}if((aN|0)!=(c[((aO&1)==0?L:c[M>>2]|0)>>2]|0)){ax=_;ay=Z;az=Y;aA=X;aB=W;break L1949}aI=c[f>>2]|0;aC=aI+12|0;aF=c[aC>>2]|0;if((aF|0)==(c[aI+16>>2]|0)){aL=c[(c[aI>>2]|0)+40>>2]|0;x=0,as(aL|0,aI|0)|0;if(x){x=0;af=X;ag=W;ah=1506;break L1925}}else{c[aC>>2]=aF+4}a[k]=1;aF=d[G]|0;ax=((aF&1|0)==0?aF>>>1:c[L>>2]|0)>>>0>1?A:_;ay=Z;az=Y;aA=X;aB=W;break L1949}if(aD){aD=(x=0,as(c[(c[av>>2]|0)+36>>2]|0,av|0)|0);if(x){x=0;af=X;ag=W;ah=1506;break L1925}aP=aD;aQ=a[F]|0}else{aP=c[aw>>2]|0;aQ=aa}if((aP|0)!=(c[((aQ&1)==0?N:c[O>>2]|0)>>2]|0)){a[k]=1;ax=_;ay=Z;az=Y;aA=X;aB=W;break L1949}aw=c[f>>2]|0;aD=aw+12|0;av=c[aD>>2]|0;if((av|0)==(c[aw+16>>2]|0)){aF=c[(c[aw>>2]|0)+40>>2]|0;x=0,as(aF|0,aw|0)|0;if(x){x=0;af=X;ag=W;ah=1506;break L1925}}else{c[aD>>2]=av+4}av=d[F]|0;ax=((av&1|0)==0?av>>>1:c[N>>2]|0)>>>0>1?z:_;ay=Z;az=Y;aA=X;aB=W;break};case 2:{if(!((_|0)!=0|$>>>0<2)){if(($|0)==2){aR=(a[U]|0)!=0}else{aR=0}if(!(P|aR)){ax=0;ay=Z;az=Y;aA=X;aB=W;break L1949}}av=a[E]|0;aD=(av&1)==0?Q:c[R>>2]|0;L2021:do{if(($|0)==0){aS=aD;aT=av;aU=aj}else{if((d[s+($-1)|0]|0)<2){aV=aD;aW=av}else{aS=aD;aT=av;aU=aj;break}while(1){aw=aW&255;if((aV|0)==(((aW&1)==0?Q:c[R>>2]|0)+(((aw&1|0)==0?aw>>>1:c[Q>>2]|0)<<2)|0)){aX=aW;break}aw=(x=0,au(c[(c[J>>2]|0)+12>>2]|0,l|0,8192,c[aV>>2]|0)|0);if(x){x=0;ah=1503;break L1925}if(!aw){ah=1598;break}aV=aV+4|0;aW=a[E]|0}if((ah|0)==1598){ah=0;aX=a[E]|0}aw=(aX&1)==0;aF=aV-(aw?Q:c[R>>2]|0)>>2;aC=a[H]|0;aI=aC&255;aL=(aI&1|0)==0;L2031:do{if(aF>>>0<=(aL?aI>>>1:c[S>>2]|0)>>>0){aY=(aC&1)==0;aZ=(aY?S:c[T>>2]|0)+((aL?aI>>>1:c[S>>2]|0)-aF<<2)|0;a_=(aY?S:c[T>>2]|0)+((aL?aI>>>1:c[S>>2]|0)<<2)|0;if((aZ|0)==(a_|0)){aS=aV;aT=aX;aU=aj;break L2021}else{a$=aZ;a0=aw?Q:c[R>>2]|0}while(1){if((c[a$>>2]|0)!=(c[a0>>2]|0)){break L2031}aZ=a$+4|0;if((aZ|0)==(a_|0)){aS=aV;aT=aX;aU=aj;break L2021}a$=aZ;a0=a0+4|0}}}while(0);aS=aw?Q:c[R>>2]|0;aT=aX;aU=aj}}while(0);L2038:while(1){av=aT&255;if((aS|0)==(((aT&1)==0?Q:c[R>>2]|0)+(((av&1|0)==0?av>>>1:c[Q>>2]|0)<<2)|0)){break}av=c[f>>2]|0;do{if((av|0)==0){a1=1}else{aD=c[av+12>>2]|0;if((aD|0)==(c[av+16>>2]|0)){aa=(x=0,as(c[(c[av>>2]|0)+36>>2]|0,av|0)|0);if(!x){a2=aa}else{x=0;ah=1504;break L1925}}else{a2=c[aD>>2]|0}if((a2|0)==-1){c[f>>2]=0;a1=1;break}else{a1=(c[f>>2]|0)==0;break}}}while(0);do{if((aU|0)==0){ah=1619}else{av=c[aU+12>>2]|0;if((av|0)==(c[aU+16>>2]|0)){aw=(x=0,as(c[(c[aU>>2]|0)+36>>2]|0,aU|0)|0);if(!x){a3=aw}else{x=0;ah=1504;break L1925}}else{a3=c[av>>2]|0}if((a3|0)==-1){c[I>>2]=0;ah=1619;break}else{if(a1^(aU|0)==0){a4=aU;break}else{break L2038}}}}while(0);if((ah|0)==1619){ah=0;if(a1){break}else{a4=0}}av=c[f>>2]|0;aw=c[av+12>>2]|0;if((aw|0)==(c[av+16>>2]|0)){aD=(x=0,as(c[(c[av>>2]|0)+36>>2]|0,av|0)|0);if(!x){a5=aD}else{x=0;ah=1504;break L1925}}else{a5=c[aw>>2]|0}if((a5|0)!=(c[aS>>2]|0)){break}aw=c[f>>2]|0;aD=aw+12|0;av=c[aD>>2]|0;if((av|0)==(c[aw+16>>2]|0)){aa=c[(c[aw>>2]|0)+40>>2]|0;x=0,as(aa|0,aw|0)|0;if(x){x=0;ah=1504;break L1925}}else{c[aD>>2]=av+4}aS=aS+4|0;aT=a[E]|0;aU=a4}if(!P){ax=_;ay=Z;az=Y;aA=X;aB=W;break L1949}av=a[E]|0;aD=av&255;if((aS|0)==(((av&1)==0?Q:c[R>>2]|0)+(((aD&1|0)==0?aD>>>1:c[Q>>2]|0)<<2)|0)){ax=_;ay=Z;az=Y;aA=X;aB=W}else{ah=1631;break L1925}break};case 4:{aD=0;av=Z;aw=Y;aa=X;ac=W;L2074:while(1){ad=c[f>>2]|0;do{if((ad|0)==0){a6=1}else{ar=c[ad+12>>2]|0;if((ar|0)==(c[ad+16>>2]|0)){aI=(x=0,as(c[(c[ad>>2]|0)+36>>2]|0,ad|0)|0);if(!x){a7=aI}else{x=0;a8=aa;a9=ac;ah=1501;break L1925}}else{a7=c[ar>>2]|0}if((a7|0)==-1){c[f>>2]=0;a6=1;break}else{a6=(c[f>>2]|0)==0;break}}}while(0);ad=c[I>>2]|0;do{if((ad|0)==0){ah=1645}else{ar=c[ad+12>>2]|0;if((ar|0)==(c[ad+16>>2]|0)){aI=(x=0,as(c[(c[ad>>2]|0)+36>>2]|0,ad|0)|0);if(!x){ba=aI}else{x=0;a8=aa;a9=ac;ah=1501;break L1925}}else{ba=c[ar>>2]|0}if((ba|0)==-1){c[I>>2]=0;ah=1645;break}else{if(a6^(ad|0)==0){break}else{break L2074}}}}while(0);if((ah|0)==1645){ah=0;if(a6){break}}ad=c[f>>2]|0;ar=c[ad+12>>2]|0;if((ar|0)==(c[ad+16>>2]|0)){aI=(x=0,as(c[(c[ad>>2]|0)+36>>2]|0,ad|0)|0);if(!x){bb=aI}else{x=0;a8=aa;a9=ac;ah=1501;break L1925}}else{bb=c[ar>>2]|0}ar=(x=0,au(c[(c[J>>2]|0)+12>>2]|0,l|0,2048,bb|0)|0);if(x){x=0;a8=aa;a9=ac;ah=1501;break L1925}if(ar){ar=c[n>>2]|0;if((ar|0)==(c[q>>2]|0)){x=0;aJ(4,m|0,n|0,q|0);if(x){x=0;a8=aa;a9=ac;ah=1501;break L1925}bc=c[n>>2]|0}else{bc=ar}c[n>>2]=bc+4;c[bc>>2]=bb;bd=aD+1|0;be=av;bf=aw;bg=aa;bh=ac}else{ar=d[w]|0;if((((ar&1|0)==0?ar>>>1:c[V>>2]|0)|0)==0|(aD|0)==0){break}if((bb|0)!=(c[u>>2]|0)){break}if((aw|0)==(av|0)){ar=(ac|0)!=276;aI=aw-aa|0;ad=aI>>>0<2147483647?aI<<1:-1;aL=aI>>2;if(ar){bi=aa}else{bi=0}ar=nP(bi,ad)|0;aI=ar;if((ar|0)==0){x=0;aK(4);if(x){x=0;a8=aa;a9=ac;ah=1501;break L1925}}bj=aI+(ad>>>2<<2)|0;bl=aI+(aL<<2)|0;bm=aI;bn=132}else{bj=av;bl=aw;bm=aa;bn=ac}c[bl>>2]=aD;bd=0;be=bj;bf=bl+4|0;bg=bm;bh=bn}aI=c[f>>2]|0;aL=aI+12|0;ad=c[aL>>2]|0;if((ad|0)==(c[aI+16>>2]|0)){ar=c[(c[aI>>2]|0)+40>>2]|0;x=0,as(ar|0,aI|0)|0;if(!x){aD=bd;av=be;aw=bf;aa=bg;ac=bh;continue}else{x=0;a8=bg;a9=bh;ah=1501;break L1925}}else{c[aL>>2]=ad+4;aD=bd;av=be;aw=bf;aa=bg;ac=bh;continue}}if((aa|0)==(aw|0)|(aD|0)==0){bo=av;bp=aw;bq=aa;br=ac}else{if((aw|0)==(av|0)){ad=(ac|0)!=276;aL=aw-aa|0;aI=aL>>>0<2147483647?aL<<1:-1;ar=aL>>2;if(ad){bs=aa}else{bs=0}ad=nP(bs,aI)|0;aL=ad;if((ad|0)==0){x=0;aK(4);if(x){x=0;af=aa;ag=ac;ah=1506;break L1925}}bt=aL+(aI>>>2<<2)|0;bu=aL+(ar<<2)|0;bv=aL;bw=132}else{bt=av;bu=aw;bv=aa;bw=ac}c[bu>>2]=aD;bo=bt;bp=bu+4|0;bq=bv;br=bw}aL=c[C>>2]|0;if((aL|0)>0){ar=c[f>>2]|0;do{if((ar|0)==0){bx=1}else{aI=c[ar+12>>2]|0;if((aI|0)==(c[ar+16>>2]|0)){ad=(x=0,as(c[(c[ar>>2]|0)+36>>2]|0,ar|0)|0);if(!x){by=ad}else{x=0;af=bq;ag=br;ah=1506;break L1925}}else{by=c[aI>>2]|0}if((by|0)==-1){c[f>>2]=0;bx=1;break}else{bx=(c[f>>2]|0)==0;break}}}while(0);ar=c[I>>2]|0;do{if((ar|0)==0){ah=1694}else{aD=c[ar+12>>2]|0;if((aD|0)==(c[ar+16>>2]|0)){ac=(x=0,as(c[(c[ar>>2]|0)+36>>2]|0,ar|0)|0);if(!x){bz=ac}else{x=0;af=bq;ag=br;ah=1506;break L1925}}else{bz=c[aD>>2]|0}if((bz|0)==-1){c[I>>2]=0;ah=1694;break}else{if(bx^(ar|0)==0){bA=ar;break}else{ah=1700;break L1925}}}}while(0);if((ah|0)==1694){ah=0;if(bx){ah=1700;break L1925}else{bA=0}}ar=c[f>>2]|0;aD=c[ar+12>>2]|0;if((aD|0)==(c[ar+16>>2]|0)){ac=(x=0,as(c[(c[ar>>2]|0)+36>>2]|0,ar|0)|0);if(!x){bB=ac}else{x=0;af=bq;ag=br;ah=1506;break L1925}}else{bB=c[aD>>2]|0}if((bB|0)!=(c[t>>2]|0)){ah=1700;break L1925}aD=c[f>>2]|0;ac=aD+12|0;ar=c[ac>>2]|0;if((ar|0)==(c[aD+16>>2]|0)){aa=c[(c[aD>>2]|0)+40>>2]|0;x=0,as(aa|0,aD|0)|0;if(!x){bC=bA;bD=aL}else{x=0;af=bq;ag=br;ah=1506;break L1925}}else{c[ac>>2]=ar+4;bC=bA;bD=aL}while(1){ar=c[f>>2]|0;do{if((ar|0)==0){bE=1}else{ac=c[ar+12>>2]|0;if((ac|0)==(c[ar+16>>2]|0)){aD=(x=0,as(c[(c[ar>>2]|0)+36>>2]|0,ar|0)|0);if(!x){bF=aD}else{x=0;ah=1502;break L1925}}else{bF=c[ac>>2]|0}if((bF|0)==-1){c[f>>2]=0;bE=1;break}else{bE=(c[f>>2]|0)==0;break}}}while(0);do{if((bC|0)==0){ah=1717}else{ar=c[bC+12>>2]|0;if((ar|0)==(c[bC+16>>2]|0)){ac=(x=0,as(c[(c[bC>>2]|0)+36>>2]|0,bC|0)|0);if(!x){bG=ac}else{x=0;ah=1502;break L1925}}else{bG=c[ar>>2]|0}if((bG|0)==-1){c[I>>2]=0;ah=1717;break}else{if(bE^(bC|0)==0){bH=bC;break}else{ah=1724;break L1925}}}}while(0);if((ah|0)==1717){ah=0;if(bE){ah=1724;break L1925}else{bH=0}}ar=c[f>>2]|0;ac=c[ar+12>>2]|0;if((ac|0)==(c[ar+16>>2]|0)){aD=(x=0,as(c[(c[ar>>2]|0)+36>>2]|0,ar|0)|0);if(!x){bI=aD}else{x=0;ah=1502;break L1925}}else{bI=c[ac>>2]|0}ac=(x=0,au(c[(c[J>>2]|0)+12>>2]|0,l|0,2048,bI|0)|0);if(x){x=0;ah=1502;break L1925}if(!ac){ah=1724;break L1925}if((c[n>>2]|0)==(c[q>>2]|0)){x=0;aJ(4,m|0,n|0,q|0);if(x){x=0;ah=1502;break L1925}}ac=c[f>>2]|0;aD=c[ac+12>>2]|0;if((aD|0)==(c[ac+16>>2]|0)){ar=(x=0,as(c[(c[ac>>2]|0)+36>>2]|0,ac|0)|0);if(!x){bJ=ar}else{x=0;ah=1502;break L1925}}else{bJ=c[aD>>2]|0}aD=c[n>>2]|0;c[n>>2]=aD+4;c[aD>>2]=bJ;aD=bD-1|0;c[C>>2]=aD;ar=c[f>>2]|0;ac=ar+12|0;aa=c[ac>>2]|0;if((aa|0)==(c[ar+16>>2]|0)){aw=c[(c[ar>>2]|0)+40>>2]|0;x=0,as(aw|0,ar|0)|0;if(x){x=0;ah=1502;break L1925}}else{c[ac>>2]=aa+4}if((aD|0)>0){bC=bH;bD=aD}else{break}}}if((c[n>>2]|0)==(c[g>>2]|0)){ah=1735;break L1925}else{ax=_;ay=bo;az=bp;aA=bq;aB=br}break};default:{ax=_;ay=Z;az=Y;aA=X;aB=W}}}while(0);L2218:do{if((ah|0)==1522){ah=0;if(($|0)==3){ak=W;al=X;am=Y;an=_;ah=1737;break L1925}else{bK=aj}while(1){aL=c[f>>2]|0;do{if((aL|0)==0){bL=1}else{aD=c[aL+12>>2]|0;if((aD|0)==(c[aL+16>>2]|0)){aa=(x=0,as(c[(c[aL>>2]|0)+36>>2]|0,aL|0)|0);if(!x){bM=aa}else{x=0;ah=1505;break L1925}}else{bM=c[aD>>2]|0}if((bM|0)==-1){c[f>>2]=0;bL=1;break}else{bL=(c[f>>2]|0)==0;break}}}while(0);do{if((bK|0)==0){ah=1536}else{aL=c[bK+12>>2]|0;if((aL|0)==(c[bK+16>>2]|0)){aD=(x=0,as(c[(c[bK>>2]|0)+36>>2]|0,bK|0)|0);if(!x){bN=aD}else{x=0;ah=1505;break L1925}}else{bN=c[aL>>2]|0}if((bN|0)==-1){c[I>>2]=0;ah=1536;break}else{if(bL^(bK|0)==0){bO=bK;break}else{ax=_;ay=Z;az=Y;aA=X;aB=W;break L2218}}}}while(0);if((ah|0)==1536){ah=0;if(bL){ax=_;ay=Z;az=Y;aA=X;aB=W;break L2218}else{bO=0}}aL=c[f>>2]|0;aD=c[aL+12>>2]|0;if((aD|0)==(c[aL+16>>2]|0)){aa=(x=0,as(c[(c[aL>>2]|0)+36>>2]|0,aL|0)|0);if(!x){bP=aa}else{x=0;ah=1505;break L1925}}else{bP=c[aD>>2]|0}aD=(x=0,au(c[(c[J>>2]|0)+12>>2]|0,l|0,8192,bP|0)|0);if(x){x=0;ah=1505;break L1925}if(!aD){ax=_;ay=Z;az=Y;aA=X;aB=W;break L2218}aD=c[f>>2]|0;aa=aD+12|0;aL=c[aa>>2]|0;if((aL|0)==(c[aD+16>>2]|0)){ac=(x=0,as(c[(c[aD>>2]|0)+40>>2]|0,aD|0)|0);if(!x){bQ=ac}else{x=0;ah=1505;break L1925}}else{c[aa>>2]=aL+4;bQ=c[aL>>2]|0}x=0;aq(20,B|0,bQ|0);if(!x){bK=bO}else{x=0;ah=1505;break L1925}}}}while(0);aL=$+1|0;if(aL>>>0<4){W=aB;X=aA;Y=az;Z=ay;_=ax;$=aL}else{ak=aB;al=aA;am=az;an=ax;ah=1737;break}}L2255:do{if((ah|0)==1700){c[j>>2]=c[j>>2]|4;bR=0;bS=bq;bT=br}else if((ah|0)==1735){c[j>>2]=c[j>>2]|4;bR=0;bS=bq;bT=br}else if((ah|0)==1737){L2259:do{if((an|0)!=0){$=an;_=an+4|0;Z=an+8|0;Y=1;L2261:while(1){J=d[$]|0;if((J&1|0)==0){bU=J>>>1}else{bU=c[_>>2]|0}if(Y>>>0>=bU>>>0){break L2259}J=c[f>>2]|0;do{if((J|0)==0){bV=1}else{g=c[J+12>>2]|0;if((g|0)==(c[J+16>>2]|0)){V=(x=0,as(c[(c[J>>2]|0)+36>>2]|0,J|0)|0);if(!x){bW=V}else{x=0;ah=1500;break L2261}}else{bW=c[g>>2]|0}if((bW|0)==-1){c[f>>2]=0;bV=1;break}else{bV=(c[f>>2]|0)==0;break}}}while(0);J=c[I>>2]|0;do{if((J|0)==0){ah=1756}else{g=c[J+12>>2]|0;if((g|0)==(c[J+16>>2]|0)){V=(x=0,as(c[(c[J>>2]|0)+36>>2]|0,J|0)|0);if(!x){bX=V}else{x=0;ah=1500;break L2261}}else{bX=c[g>>2]|0}if((bX|0)==-1){c[I>>2]=0;ah=1756;break}else{if(bV^(J|0)==0){break}else{ah=1764;break L2261}}}}while(0);if((ah|0)==1756){ah=0;if(bV){ah=1764;break}}J=c[f>>2]|0;g=c[J+12>>2]|0;if((g|0)==(c[J+16>>2]|0)){V=(x=0,as(c[(c[J>>2]|0)+36>>2]|0,J|0)|0);if(!x){bY=V}else{x=0;ah=1500;break}}else{bY=c[g>>2]|0}if((a[$]&1)==0){bZ=_}else{bZ=c[Z>>2]|0}if((bY|0)!=(c[bZ+(Y<<2)>>2]|0)){ah=1764;break}g=Y+1|0;V=c[f>>2]|0;J=V+12|0;Q=c[J>>2]|0;if((Q|0)==(c[V+16>>2]|0)){R=c[(c[V>>2]|0)+40>>2]|0;x=0,as(R|0,V|0)|0;if(!x){Y=g;continue}else{x=0;ah=1500;break}}else{c[J>>2]=Q+4;Y=g;continue}}if((ah|0)==1764){c[j>>2]=c[j>>2]|4;bR=0;bS=al;bT=ak;break L2255}else if((ah|0)==1500){Y=cu(-1,-1)|0;b_=K;b$=Y;b0=al;b1=ak;break L1923}}}while(0);if((al|0)==(am|0)){bR=1;bS=am;bT=ak;break}c[D>>2]=0;iB(v,al,am,D);if((c[D>>2]|0)==0){bR=1;bS=al;bT=ak;break}c[j>>2]=c[j>>2]|4;bR=0;bS=al;bT=ak}else if((ah|0)==1724){c[j>>2]=c[j>>2]|4;bR=0;bS=bq;bT=br}else if((ah|0)==1501){Y=cu(-1,-1)|0;b_=K;b$=Y;b0=a8;b1=a9;break L1923}else if((ah|0)==1502){Y=cu(-1,-1)|0;b_=K;b$=Y;b0=bq;b1=br;break L1923}else if((ah|0)==1503){Y=cu(-1,-1)|0;b_=K;b$=Y;b0=X;b1=W;break L1923}else if((ah|0)==1504){Y=cu(-1,-1)|0;b_=K;b$=Y;b0=X;b1=W;break L1923}else if((ah|0)==1505){Y=cu(-1,-1)|0;b_=K;b$=Y;b0=X;b1=W;break L1923}else if((ah|0)==1506){Y=cu(-1,-1)|0;b_=K;b$=Y;b0=af;b1=ag;break L1923}else if((ah|0)==1521){c[j>>2]=c[j>>2]|4;bR=0;bS=X;bT=W}else if((ah|0)==1587){c[j>>2]=c[j>>2]|4;bR=0;bS=X;bT=W}else if((ah|0)==1631){c[j>>2]=c[j>>2]|4;bR=0;bS=X;bT=W}}while(0);gV(B);gV(A);gV(z);gV(y);gI(v);if((bS|0)==0){i=p;return bR|0}x=0;ap(bT|0,bS|0);if(!x){i=p;return bR|0}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else{x=0;W=cu(-1,-1)|0;b_=K;b$=W;b0=o;b1=276}}while(0);gV(B);gV(A);gV(z);gV(y);gI(v);if((b0|0)==0){bk(b$|0)}x=0;ap(b1|0,b0|0);if(!x){bk(b$|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}return 0}function k3(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+456|0;l=e;e=i;i=i+4|0;i=i+7&-8;c[e>>2]=c[l>>2];l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=d|0;m=d+16|0;n=d+416|0;o=d+424|0;p=d+432|0;q=d+440|0;r=d+448|0;s=m|0;t=n|0;c[t>>2]=s;u=n+4|0;c[u>>2]=276;v=m+400|0;x=0;aq(96,p|0,h|0);do{if(!x){m=p|0;w=c[m>>2]|0;if((c[4250]|0)==-1){y=1783}else{c[l>>2]=17e3;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17e3,l|0,154);if(!x){y=1783}else{x=0}}L2338:do{if((y|0)==1783){z=(c[4251]|0)-1|0;A=c[w+8>>2]|0;do{if((c[w+12>>2]|0)-A>>2>>>0>z>>>0){B=c[A+(z<<2)>>2]|0;if((B|0)==0){break}C=B;a[q]=0;D=f|0;E=c[D>>2]|0;c[r>>2]=E;F=(x=0,at(4,e|0,r|0,g|0,p|0,c[h+4>>2]|0,j|0,q|0,C|0,n|0,o|0,v|0)|0);if(x){x=0;break L2338}if(F){F=k;if((a[F]&1)==0){c[k+4>>2]=0;a[F]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}F=B;if((a[q]&1)!=0){B=(x=0,aF(c[(c[F>>2]|0)+44>>2]|0,C|0,45)|0);if(x){x=0;break L2338}x=0;aq(20,k|0,B|0);if(x){x=0;break L2338}}B=(x=0,aF(c[(c[F>>2]|0)+44>>2]|0,C|0,48)|0);if(x){x=0;break L2338}C=c[o>>2]|0;F=C-4|0;G=c[t>>2]|0;while(1){if(G>>>0>=F>>>0){break}if((c[G>>2]|0)==(B|0)){G=G+4|0}else{break}}x=0,au(14,k|0,G|0,C|0)|0;if(x){x=0;break L2338}}B=e|0;F=c[B>>2]|0;do{if((F|0)==0){H=0}else{I=c[F+12>>2]|0;if((I|0)==(c[F+16>>2]|0)){J=(x=0,as(c[(c[F>>2]|0)+36>>2]|0,F|0)|0);if(!x){L=J}else{x=0;break L2338}}else{L=c[I>>2]|0}if((L|0)!=-1){H=F;break}c[B>>2]=0;H=0}}while(0);B=(H|0)==0;do{if((E|0)==0){y=1813}else{F=c[E+12>>2]|0;if((F|0)==(c[E+16>>2]|0)){C=(x=0,as(c[(c[E>>2]|0)+36>>2]|0,E|0)|0);if(!x){M=C}else{x=0;break L2338}}else{M=c[F>>2]|0}if((M|0)==-1){c[D>>2]=0;y=1813;break}else{if(B^(E|0)==0){break}else{y=1815;break}}}}while(0);if((y|0)==1813){if(B){y=1815}}if((y|0)==1815){c[j>>2]=c[j>>2]|2}c[b>>2]=H;E=c[m>>2]|0;gf(E)|0;E=c[t>>2]|0;c[t>>2]=0;if((E|0)==0){i=d;return}x=0;ap(c[u>>2]|0,E|0);if(!x){i=d;return}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);z=c9(4)|0;ns(z);x=0;aJ(12,z|0,11128,210);if(x){x=0;break}}}while(0);w=cu(-1,-1)|0;z=w;w=K;A=c[m>>2]|0;gf(A)|0;A=c[t>>2]|0;c[t>>2]=0;if((A|0)==0){N=w;O=z}else{P=A;Q=w;R=z;break}S=O;T=0;U=S;V=N;bk(U|0)}else{x=0;z=cu(-1,-1)|0;c[t>>2]=0;P=s;Q=K;R=z}}while(0);x=0;ap(c[u>>2]|0,P|0);if(!x){N=Q;O=R;S=O;T=0;U=S;V=N;bk(U|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function k4(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;f=b;g=d;h=a[f]|0;i=h&255;if((i&1|0)==0){j=i>>>1}else{j=c[b+4>>2]|0}if((h&1)==0){k=1;l=h}else{h=c[b>>2]|0;k=(h&-2)-1|0;l=h&255}h=e-g>>2;if((h|0)==0){return b|0}if((k-j|0)>>>0<h>>>0){g$(b,k,j+h-k|0,j,j,0,0);m=a[f]|0}else{m=l}if((m&1)==0){n=b+4|0}else{n=c[b+8>>2]|0}m=n+(j<<2)|0;if((d|0)==(e|0)){o=m}else{l=j+((e-4+(-g|0)|0)>>>2)+1|0;g=d;d=m;while(1){c[d>>2]=c[g>>2];m=g+4|0;if((m|0)==(e|0)){break}else{g=m;d=d+4|0}}o=n+(l<<2)|0}c[o>>2]=0;o=j+h|0;if((a[f]&1)==0){a[f]=o<<1&255;return b|0}else{c[b+4>>2]=o;return b|0}return 0}function k5(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;n=i;i=i+56|0;o=n|0;p=n+16|0;q=n+32|0;r=n+40|0;s=r;t=i;i=i+12|0;i=i+7&-8;u=t;v=i;i=i+12|0;i=i+7&-8;w=v;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+12|0;i=i+7&-8;D=B;E=i;i=i+12|0;i=i+7&-8;F=E;G=i;i=i+12|0;i=i+7&-8;H=G;I=i;i=i+12|0;i=i+7&-8;J=I;if(b){b=c[d>>2]|0;if((c[4366]|0)!=-1){c[p>>2]=17464;c[p+4>>2]=16;c[p+8>>2]=0;gD(17464,p,154)}p=(c[4367]|0)-1|0;K=c[b+8>>2]|0;if((c[b+12>>2]|0)-K>>2>>>0<=p>>>0){L=c9(4)|0;M=L;ns(M);ca(L|0,11128,210)}b=c[K+(p<<2)>>2]|0;if((b|0)==0){L=c9(4)|0;M=L;ns(M);ca(L|0,11128,210)}L=b;dx[c[(c[b>>2]|0)+44>>2]&255](q,L);M=e;C=c[q>>2]|0;a[M]=C&255;C=C>>8;a[M+1|0]=C&255;C=C>>8;a[M+2|0]=C&255;C=C>>8;a[M+3|0]=C&255;M=b;dx[c[(c[M>>2]|0)+32>>2]&255](r,L);q=l;if((a[q]&1)==0){c[l+4>>2]=0;a[q]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}x=0;aq(70,l|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[q>>2]=c[s>>2];c[q+4>>2]=c[s+4>>2];c[q+8>>2]=c[s+8>>2];n0(s|0,0,12);gV(r);dx[c[(c[M>>2]|0)+28>>2]&255](t,L);r=k;if((a[r]&1)==0){c[k+4>>2]=0;a[r]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}x=0;aq(70,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[r>>2]=c[u>>2];c[r+4>>2]=c[u+4>>2];c[r+8>>2]=c[u+8>>2];n0(u|0,0,12);gV(t);t=b;c[f>>2]=dz[c[(c[t>>2]|0)+12>>2]&255](L)|0;c[g>>2]=dz[c[(c[t>>2]|0)+16>>2]&255](L)|0;dx[c[(c[b>>2]|0)+20>>2]&255](v,L);b=h;if((a[b]&1)==0){a[h+1|0]=0;a[b]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}x=0;aq(4,h|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[b>>2]=c[w>>2];c[b+4>>2]=c[w+4>>2];c[b+8>>2]=c[w+8>>2];n0(w|0,0,12);gI(v);dx[c[(c[M>>2]|0)+24>>2]&255](y,L);M=j;if((a[M]&1)==0){c[j+4>>2]=0;a[M]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}x=0;aq(70,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[M>>2]=c[z>>2];c[M+4>>2]=c[z+4>>2];c[M+8>>2]=c[z+8>>2];n0(z|0,0,12);gV(y);N=dz[c[(c[t>>2]|0)+36>>2]&255](L)|0;c[m>>2]=N;i=n;return}else{L=c[d>>2]|0;if((c[4368]|0)!=-1){c[o>>2]=17472;c[o+4>>2]=16;c[o+8>>2]=0;gD(17472,o,154)}o=(c[4369]|0)-1|0;d=c[L+8>>2]|0;if((c[L+12>>2]|0)-d>>2>>>0<=o>>>0){O=c9(4)|0;P=O;ns(P);ca(O|0,11128,210)}L=c[d+(o<<2)>>2]|0;if((L|0)==0){O=c9(4)|0;P=O;ns(P);ca(O|0,11128,210)}O=L;dx[c[(c[L>>2]|0)+44>>2]&255](A,O);P=e;C=c[A>>2]|0;a[P]=C&255;C=C>>8;a[P+1|0]=C&255;C=C>>8;a[P+2|0]=C&255;C=C>>8;a[P+3|0]=C&255;P=L;dx[c[(c[P>>2]|0)+32>>2]&255](B,O);A=l;if((a[A]&1)==0){c[l+4>>2]=0;a[A]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}x=0;aq(70,l|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[A>>2]=c[D>>2];c[A+4>>2]=c[D+4>>2];c[A+8>>2]=c[D+8>>2];n0(D|0,0,12);gV(B);dx[c[(c[P>>2]|0)+28>>2]&255](E,O);B=k;if((a[B]&1)==0){c[k+4>>2]=0;a[B]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}x=0;aq(70,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[B>>2]=c[F>>2];c[B+4>>2]=c[F+4>>2];c[B+8>>2]=c[F+8>>2];n0(F|0,0,12);gV(E);E=L;c[f>>2]=dz[c[(c[E>>2]|0)+12>>2]&255](O)|0;c[g>>2]=dz[c[(c[E>>2]|0)+16>>2]&255](O)|0;dx[c[(c[L>>2]|0)+20>>2]&255](G,O);L=h;if((a[L]&1)==0){a[h+1|0]=0;a[L]=0}else{a[c[h+8>>2]|0]=0;c[h+4>>2]=0}x=0;aq(4,h|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[L>>2]=c[H>>2];c[L+4>>2]=c[H+4>>2];c[L+8>>2]=c[H+8>>2];n0(H|0,0,12);gI(G);dx[c[(c[P>>2]|0)+24>>2]&255](I,O);P=j;if((a[P]&1)==0){c[j+4>>2]=0;a[P]=0}else{c[c[j+8>>2]>>2]=0;c[j+4>>2]=0}x=0;aq(70,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[P>>2]=c[J>>2];c[P+4>>2]=c[J+4>>2];c[P+8>>2]=c[J+8>>2];n0(J|0,0,12);gV(I);N=dz[c[(c[E>>2]|0)+36>>2]&255](O)|0;c[m>>2]=N;i=n;return}}function k6(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=a+4|0;f=(c[e>>2]|0)!=276;g=a|0;a=c[g>>2]|0;h=a;i=(c[d>>2]|0)-h|0;j=i>>>0<2147483647?i<<1:-1;i=(c[b>>2]|0)-h>>2;if(f){k=a}else{k=0}a=nP(k,j)|0;k=a;if((a|0)==0){nZ()}do{if(f){c[g>>2]=k;l=k}else{a=c[g>>2]|0;c[g>>2]=k;if((a|0)==0){l=k;break}x=0;ap(c[e>>2]|0,a|0);if(!x){l=c[g>>2]|0;break}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);c[e>>2]=132;c[b>>2]=l+(i<<2);c[d>>2]=(c[g>>2]|0)+(j>>>2<<2);return}function k7(a){a=a|0;gd(a|0);nU(a);return}function k8(a){a=a|0;gd(a|0);return}function k9(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,ar=0;e=i;i=i+280|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+232|0;p=e+240|0;q=e+248|0;r=e+256|0;s=e+264|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;y=w;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+100|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=i;i=i+4|0;i=i+7&-8;E=e+16|0;c[n>>2]=E;F=e+128|0;G=ck(E|0,100,2920,(E=i,i=i+8|0,h[E>>3]=l,E)|0)|0;i=E;L2523:do{if(G>>>0>99){do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}H=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=H;break}else{x=0;H=cu(-1,-1)|0;I=K;J=H;L=0;M=0;N=1934;break L2523}}}while(0);H=(x=0,aM(6,n|0,c[3894]|0,2920,(E=i,i=i+8|0,h[E>>3]=l,E)|0)|0);i=E;if(x){x=0;O=0;P=0;N=1933;break}Q=c[n>>2]|0;if((Q|0)==0){x=0;aK(4);if(x){x=0;O=0;P=0;N=1933;break}R=c[n>>2]|0}else{R=Q}Q=nN(H)|0;if((Q|0)!=0){S=Q;T=H;U=R;V=Q;N=1937;break}x=0;aK(4);if(!x){S=0;T=H;U=R;V=0;N=1937}else{x=0;O=R;P=0;N=1933}}else{S=F;T=G;U=0;V=0;N=1937}}while(0);do{if((N|0)==1937){x=0;aq(96,o|0,j|0);if(x){x=0;O=U;P=V;N=1933;break}G=o|0;F=c[G>>2]|0;if((c[4252]|0)==-1){N=1940}else{c[m>>2]=17008;c[m+4>>2]=16;c[m+8>>2]=0;x=0;aJ(2,17008,m|0,154);if(!x){N=1940}else{x=0;N=1967}}L2543:do{if((N|0)==1940){R=(c[4253]|0)-1|0;E=c[F+8>>2]|0;do{if((c[F+12>>2]|0)-E>>2>>>0>R>>>0){H=c[E+(R<<2)>>2]|0;if((H|0)==0){break}Q=H;W=c[n>>2]|0;X=W+T|0;Y=c[(c[H>>2]|0)+32>>2]|0;x=0,aM(Y|0,Q|0,W|0,X|0,S|0)|0;if(x){x=0;N=1967;break L2543}if((T|0)==0){Z=0}else{Z=(a[c[n>>2]|0]|0)==45}n0(t|0,0,12);n0(v|0,0,12);n0(y|0,0,12);x=0;aE(8,g|0,Z|0,o|0,p|0,q|0,r|0,s|0,u|0,w|0,z|0);L2552:do{if(!x){X=A|0;W=c[z>>2]|0;if((T|0)>(W|0)){Y=d[y]|0;if((Y&1|0)==0){_=Y>>>1}else{_=c[w+4>>2]|0}Y=d[v]|0;if((Y&1|0)==0){$=Y>>>1}else{$=c[u+4>>2]|0}aa=(T-W<<1|1)+_+$|0}else{Y=d[y]|0;if((Y&1|0)==0){ab=Y>>>1}else{ab=c[w+4>>2]|0}Y=d[v]|0;if((Y&1|0)==0){ac=Y>>>1}else{ac=c[u+4>>2]|0}aa=ab+2+ac|0}Y=aa+W|0;do{if(Y>>>0>100){H=nN(Y)|0;if((H|0)!=0){ad=H;ae=H;break}x=0;aK(4);if(!x){ad=0;ae=0;break}else{x=0}H=cu(-1,-1)|0;af=K;ag=H;break L2552}else{ad=X;ae=0}}while(0);x=0;aw(4,ad|0,B|0,C|0,c[j+4>>2]|0,S|0,S+T|0,Q|0,Z|0,p|0,a[q]|0,a[r]|0,s|0,u|0,w|0,W|0);do{if(!x){c[D>>2]=c[f>>2];x=0;aB(28,b|0,D|0,ad|0,c[B>>2]|0,c[C>>2]|0,j|0,k|0);if(x){x=0;break}if((ae|0)!=0){nO(ae)}gI(w);gI(u);gI(s);X=c[G>>2]|0;gf(X)|0;if((V|0)!=0){nO(V)}if((U|0)==0){i=e;return}nO(U);i=e;return}else{x=0}}while(0);W=cu(-1,-1)|0;X=W;W=K;if((ae|0)==0){af=W;ag=X;break}nO(ae);af=W;ag=X}else{x=0;X=cu(-1,-1)|0;af=K;ag=X}}while(0);gI(w);gI(u);gI(s);ah=af;ai=ag;break L2543}}while(0);R=c9(4)|0;ns(R);x=0;aJ(12,R|0,11128,210);if(x){x=0;N=1967;break}}}while(0);if((N|0)==1967){F=cu(-1,-1)|0;ah=K;ai=F}F=c[G>>2]|0;gf(F)|0;aj=ah;ak=ai;al=U;am=V}}while(0);if((N|0)==1933){V=cu(-1,-1)|0;I=K;J=V;L=O;M=P;N=1934}if((N|0)==1934){aj=I;ak=J;al=L;am=M}if((am|0)!=0){nO(am)}if((al|0)==0){an=ak;ao=0;ap=an;ar=aj;bk(ap|0)}nO(al);an=ak;ao=0;ap=an;ar=aj;bk(ap|0)}function la(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;y=w;z=i;i=i+12|0;i=i+7&-8;A=z;B=i;i=i+12|0;i=i+7&-8;D=B;E=i;i=i+4|0;i=i+7&-8;F=E;G=i;i=i+12|0;i=i+7&-8;H=G;I=i;i=i+4|0;i=i+7&-8;J=I;K=i;i=i+12|0;i=i+7&-8;L=K;M=i;i=i+12|0;i=i+7&-8;N=M;O=i;i=i+12|0;i=i+7&-8;P=O;Q=c[e>>2]|0;if(b){if((c[4370]|0)!=-1){c[p>>2]=17480;c[p+4>>2]=16;c[p+8>>2]=0;gD(17480,p,154)}p=(c[4371]|0)-1|0;b=c[Q+8>>2]|0;if((c[Q+12>>2]|0)-b>>2>>>0<=p>>>0){R=c9(4)|0;S=R;ns(S);ca(R|0,11128,210)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){R=c9(4)|0;S=R;ns(S);ca(R|0,11128,210)}R=e;S=c[e>>2]|0;do{if(d){dx[c[S+44>>2]&255](r,R);p=f;C=c[q>>2]|0;a[p]=C&255;C=C>>8;a[p+1|0]=C&255;C=C>>8;a[p+2|0]=C&255;C=C>>8;a[p+3|0]=C&255;dx[c[(c[e>>2]|0)+32>>2]&255](s,R);p=l;if((a[p]&1)==0){a[l+1|0]=0;a[p]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}x=0;aq(4,l|0,0);if(!x){c[p>>2]=c[t>>2];c[p+4>>2]=c[t+4>>2];c[p+8>>2]=c[t+8>>2];n0(t|0,0,12);gI(s);break}else{x=0;cu(-1,-1,0)|0;cA()}}else{dx[c[S+40>>2]&255](v,R);p=f;C=c[u>>2]|0;a[p]=C&255;C=C>>8;a[p+1|0]=C&255;C=C>>8;a[p+2|0]=C&255;C=C>>8;a[p+3|0]=C&255;dx[c[(c[e>>2]|0)+28>>2]&255](w,R);p=l;if((a[p]&1)==0){a[l+1|0]=0;a[p]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}x=0;aq(4,l|0,0);if(!x){c[p>>2]=c[y>>2];c[p+4>>2]=c[y+4>>2];c[p+8>>2]=c[y+8>>2];n0(y|0,0,12);gI(w);break}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);w=e;a[g]=dz[c[(c[w>>2]|0)+12>>2]&255](R)|0;a[h]=dz[c[(c[w>>2]|0)+16>>2]&255](R)|0;w=e;dx[c[(c[w>>2]|0)+20>>2]&255](z,R);y=j;if((a[y]&1)==0){a[j+1|0]=0;a[y]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}x=0;aq(4,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[y>>2]=c[A>>2];c[y+4>>2]=c[A+4>>2];c[y+8>>2]=c[A+8>>2];n0(A|0,0,12);gI(z);dx[c[(c[w>>2]|0)+24>>2]&255](B,R);w=k;if((a[w]&1)==0){a[k+1|0]=0;a[w]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}x=0;aq(4,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[w>>2]=c[D>>2];c[w+4>>2]=c[D+4>>2];c[w+8>>2]=c[D+8>>2];n0(D|0,0,12);gI(B);T=dz[c[(c[e>>2]|0)+36>>2]&255](R)|0;c[m>>2]=T;i=n;return}else{if((c[4372]|0)!=-1){c[o>>2]=17488;c[o+4>>2]=16;c[o+8>>2]=0;gD(17488,o,154)}o=(c[4373]|0)-1|0;R=c[Q+8>>2]|0;if((c[Q+12>>2]|0)-R>>2>>>0<=o>>>0){U=c9(4)|0;V=U;ns(V);ca(U|0,11128,210)}Q=c[R+(o<<2)>>2]|0;if((Q|0)==0){U=c9(4)|0;V=U;ns(V);ca(U|0,11128,210)}U=Q;V=c[Q>>2]|0;do{if(d){dx[c[V+44>>2]&255](F,U);o=f;C=c[E>>2]|0;a[o]=C&255;C=C>>8;a[o+1|0]=C&255;C=C>>8;a[o+2|0]=C&255;C=C>>8;a[o+3|0]=C&255;dx[c[(c[Q>>2]|0)+32>>2]&255](G,U);o=l;if((a[o]&1)==0){a[l+1|0]=0;a[o]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}x=0;aq(4,l|0,0);if(!x){c[o>>2]=c[H>>2];c[o+4>>2]=c[H+4>>2];c[o+8>>2]=c[H+8>>2];n0(H|0,0,12);gI(G);break}else{x=0;cu(-1,-1,0)|0;cA()}}else{dx[c[V+40>>2]&255](J,U);o=f;C=c[I>>2]|0;a[o]=C&255;C=C>>8;a[o+1|0]=C&255;C=C>>8;a[o+2|0]=C&255;C=C>>8;a[o+3|0]=C&255;dx[c[(c[Q>>2]|0)+28>>2]&255](K,U);o=l;if((a[o]&1)==0){a[l+1|0]=0;a[o]=0}else{a[c[l+8>>2]|0]=0;c[l+4>>2]=0}x=0;aq(4,l|0,0);if(!x){c[o>>2]=c[L>>2];c[o+4>>2]=c[L+4>>2];c[o+8>>2]=c[L+8>>2];n0(L|0,0,12);gI(K);break}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);K=Q;a[g]=dz[c[(c[K>>2]|0)+12>>2]&255](U)|0;a[h]=dz[c[(c[K>>2]|0)+16>>2]&255](U)|0;K=Q;dx[c[(c[K>>2]|0)+20>>2]&255](M,U);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}x=0;aq(4,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[h>>2]=c[N>>2];c[h+4>>2]=c[N+4>>2];c[h+8>>2]=c[N+8>>2];n0(N|0,0,12);gI(M);dx[c[(c[K>>2]|0)+24>>2]&255](O,U);K=k;if((a[K]&1)==0){a[k+1|0]=0;a[K]=0}else{a[c[k+8>>2]|0]=0;c[k+4>>2]=0}x=0;aq(4,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[K>>2]=c[P>>2];c[K+4>>2]=c[P+4>>2];c[K+8>>2]=c[P+8>>2];n0(P|0,0,12);gI(O);T=dz[c[(c[Q>>2]|0)+36>>2]&255](U)|0;c[m>>2]=T;i=n;return}}function lb(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0;c[f>>2]=d;s=j;t=q;u=q+1|0;v=q+8|0;w=q+4|0;q=p;x=(g&512|0)==0;y=p+1|0;z=p+4|0;A=p+8|0;p=j+8|0;B=(r|0)>0;C=o;D=o+1|0;E=o+8|0;F=o+4|0;o=-r|0;G=h;h=0;while(1){L3:do{switch(a[l+h|0]|0){case 0:{c[e>>2]=c[f>>2];H=G;break};case 1:{c[e>>2]=c[f>>2];I=dM[c[(c[s>>2]|0)+28>>2]&127](j,32)|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=I;H=G;break};case 3:{I=a[t]|0;J=I&255;if((J&1|0)==0){K=J>>>1}else{K=c[w>>2]|0}if((K|0)==0){H=G;break L3}if((I&1)==0){L=u}else{L=c[v>>2]|0}I=a[L]|0;J=c[f>>2]|0;c[f>>2]=J+1;a[J]=I;H=G;break};case 2:{I=a[q]|0;J=I&255;M=(J&1|0)==0;if(M){N=J>>>1}else{N=c[z>>2]|0}if((N|0)==0|x){H=G;break L3}if((I&1)==0){O=y;P=y}else{I=c[A>>2]|0;O=I;P=I}if(M){Q=J>>>1}else{Q=c[z>>2]|0}J=O+Q|0;M=c[f>>2]|0;if((P|0)==(J|0)){R=M}else{I=P;S=M;while(1){a[S]=a[I]|0;M=I+1|0;T=S+1|0;if((M|0)==(J|0)){R=T;break}else{I=M;S=T}}}c[f>>2]=R;H=G;break};case 4:{S=c[f>>2]|0;I=k?G+1|0:G;J=I;while(1){if(J>>>0>=i>>>0){break}T=a[J]|0;if(T<<24>>24<0){break}if((b[(c[p>>2]|0)+(T<<24>>24<<1)>>1]&2048)==0){break}else{J=J+1|0}}T=J;if(B){if(J>>>0>I>>>0){M=I+(-T|0)|0;T=M>>>0<o>>>0?o:M;M=T+r|0;U=J;V=r;W=S;while(1){X=U-1|0;Y=a[X]|0;c[f>>2]=W+1;a[W]=Y;Y=V-1|0;Z=(Y|0)>0;if(!(X>>>0>I>>>0&Z)){break}U=X;V=Y;W=c[f>>2]|0}W=J+T|0;if(Z){_=M;$=W;aa=34}else{ab=0;ac=M;ad=W}}else{_=r;$=J;aa=34}if((aa|0)==34){aa=0;ab=dM[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;ac=_;ad=$}W=c[f>>2]|0;c[f>>2]=W+1;if((ac|0)>0){V=ac;U=W;while(1){a[U]=ab;Y=V-1|0;X=c[f>>2]|0;c[f>>2]=X+1;if((Y|0)>0){V=Y;U=X}else{ae=X;break}}}else{ae=W}a[ae]=m;af=ad}else{af=J}if((af|0)==(I|0)){U=dM[c[(c[s>>2]|0)+28>>2]&127](j,48)|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=U}else{U=a[C]|0;V=U&255;if((V&1|0)==0){ag=V>>>1}else{ag=c[F>>2]|0}if((ag|0)==0){ah=af;ai=0;aj=0;ak=-1}else{if((U&1)==0){al=D}else{al=c[E>>2]|0}ah=af;ai=0;aj=0;ak=a[al]|0}while(1){do{if((ai|0)==(ak|0)){U=c[f>>2]|0;c[f>>2]=U+1;a[U]=n;U=aj+1|0;V=a[C]|0;M=V&255;if((M&1|0)==0){am=M>>>1}else{am=c[F>>2]|0}if(U>>>0>=am>>>0){an=ak;ao=U;ap=0;break}M=(V&1)==0;if(M){aq=D}else{aq=c[E>>2]|0}if((a[aq+U|0]|0)==127){an=-1;ao=U;ap=0;break}if(M){ar=D}else{ar=c[E>>2]|0}an=a[ar+U|0]|0;ao=U;ap=0}else{an=ak;ao=aj;ap=ai}}while(0);U=ah-1|0;M=a[U]|0;V=c[f>>2]|0;c[f>>2]=V+1;a[V]=M;if((U|0)==(I|0)){break}else{ah=U;ai=ap+1|0;aj=ao;ak=an}}}J=c[f>>2]|0;if((S|0)==(J|0)){H=I;break L3}W=J-1|0;if(S>>>0<W>>>0){as=S;at=W}else{H=I;break L3}while(1){W=a[as]|0;a[as]=a[at]|0;a[at]=W;W=as+1|0;J=at-1|0;if(W>>>0<J>>>0){as=W;at=J}else{H=I;break}}break};default:{H=G}}}while(0);I=h+1|0;if(I>>>0<4){G=H;h=I}else{break}}h=a[t]|0;t=h&255;H=(t&1|0)==0;if(H){au=t>>>1}else{au=c[w>>2]|0}if(au>>>0>1){if((h&1)==0){av=u;aw=u}else{u=c[v>>2]|0;av=u;aw=u}if(H){ax=t>>>1}else{ax=c[w>>2]|0}w=av+ax|0;ax=c[f>>2]|0;av=aw+1|0;if((av|0)==(w|0)){ay=ax}else{aw=ax;ax=av;while(1){a[aw]=a[ax]|0;av=aw+1|0;t=ax+1|0;if((t|0)==(w|0)){ay=av;break}else{aw=av;ax=t}}}c[f>>2]=ay}ay=g&176;if((ay|0)==32){c[e>>2]=c[f>>2];return}else if((ay|0)==16){return}else{c[e>>2]=d;return}}function lc(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;y=i;i=i+100|0;i=i+7&-8;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;g3(m,h);C=m|0;D=c[C>>2]|0;if((c[4252]|0)==-1){E=84}else{c[l>>2]=17008;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17008,l|0,154);if(!x){E=84}else{x=0}}L116:do{if((E|0)==84){l=(c[4253]|0)-1|0;F=c[D+8>>2]|0;do{if((c[D+12>>2]|0)-F>>2>>>0>l>>>0){G=c[F+(l<<2)>>2]|0;if((G|0)==0){break}H=G;I=k;J=k;L=a[J]|0;M=L&255;if((M&1|0)==0){N=M>>>1}else{N=c[k+4>>2]|0}if((N|0)==0){O=0}else{if((L&1)==0){P=I+1|0}else{P=c[k+8>>2]|0}L=a[P]|0;M=(x=0,aF(c[(c[G>>2]|0)+28>>2]|0,H|0,45)|0);if(x){x=0;break L116}O=L<<24>>24==M<<24>>24}n0(r|0,0,12);n0(t|0,0,12);n0(v|0,0,12);x=0;aE(8,g|0,O|0,m|0,n|0,o|0,p|0,q|0,s|0,u|0,w|0);L133:do{if(!x){M=y|0;L=a[J]|0;G=L&255;Q=(G&1|0)==0;if(Q){R=G>>>1}else{R=c[k+4>>2]|0}S=c[w>>2]|0;if((R|0)>(S|0)){if(Q){T=G>>>1}else{T=c[k+4>>2]|0}G=d[v]|0;if((G&1|0)==0){U=G>>>1}else{U=c[u+4>>2]|0}G=d[t]|0;if((G&1|0)==0){V=G>>>1}else{V=c[s+4>>2]|0}W=(T-S<<1|1)+U+V|0}else{G=d[v]|0;if((G&1|0)==0){X=G>>>1}else{X=c[u+4>>2]|0}G=d[t]|0;if((G&1|0)==0){Y=G>>>1}else{Y=c[s+4>>2]|0}W=X+2+Y|0}G=W+S|0;do{if(G>>>0>100){Q=nN(G)|0;if((Q|0)!=0){Z=Q;_=Q;$=L;break}x=0;aK(4);if(!x){Z=0;_=0;$=a[J]|0;break}else{x=0;Q=cu(-1,-1)|0;aa=K;ab=Q;break L133}}else{Z=M;_=0;$=L}}while(0);if(($&1)==0){ac=I+1|0;ad=I+1|0}else{L=c[k+8>>2]|0;ac=L;ad=L}L=$&255;if((L&1|0)==0){ae=L>>>1}else{ae=c[k+4>>2]|0}x=0;aw(4,Z|0,z|0,A|0,c[h+4>>2]|0,ad|0,ac+ae|0,H|0,O|0,n|0,a[o]|0,a[p]|0,q|0,s|0,u|0,S|0);do{if(!x){c[B>>2]=c[f>>2];x=0;aB(28,b|0,B|0,Z|0,c[z>>2]|0,c[A>>2]|0,h|0,j|0);if(x){x=0;break}if((_|0)==0){gI(u);gI(s);gI(q);af=c[C>>2]|0;ag=af|0;ah=gf(ag)|0;i=e;return}nO(_);gI(u);gI(s);gI(q);af=c[C>>2]|0;ag=af|0;ah=gf(ag)|0;i=e;return}else{x=0}}while(0);S=cu(-1,-1)|0;L=S;S=K;if((_|0)==0){aa=S;ab=L;break}nO(_);aa=S;ab=L}else{x=0;L=cu(-1,-1)|0;aa=K;ab=L}}while(0);gI(u);gI(s);gI(q);ai=aa;aj=ab;ak=c[C>>2]|0;al=ak|0;am=gf(al)|0;an=aj;ao=0;ap=an;aq=ai;bk(ap|0)}}while(0);l=c9(4)|0;ns(l);x=0;aJ(12,l|0,11128,210);if(x){x=0;break}}}while(0);ab=cu(-1,-1)|0;ai=K;aj=ab;ak=c[C>>2]|0;al=ak|0;am=gf(al)|0;an=aj;ao=0;ap=an;aq=ai;bk(ap|0)}function ld(a){a=a|0;gd(a|0);nU(a);return}function le(a){a=a|0;gd(a|0);return}function lf(b,e,f,g,j,k,l){b=b|0;e=e|0;f=f|0;g=g|0;j=j|0;k=k|0;l=+l;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,ar=0,as=0,at=0;e=i;i=i+576|0;m=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[m>>2];m=e|0;n=e+120|0;o=e+528|0;p=e+536|0;q=e+544|0;r=e+552|0;s=e+560|0;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;y=w;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+400|0;B=i;i=i+4|0;i=i+7&-8;C=i;i=i+4|0;i=i+7&-8;D=i;i=i+4|0;i=i+7&-8;E=e+16|0;c[n>>2]=E;F=e+128|0;G=ck(E|0,100,2920,(E=i,i=i+8|0,h[E>>3]=l,E)|0)|0;i=E;L197:do{if(G>>>0>99){do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}H=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=H;break}else{x=0;H=cu(-1,-1)|0;I=K;J=H;L=0;M=0;N=158;break L197}}}while(0);H=(x=0,aM(6,n|0,c[3894]|0,2920,(E=i,i=i+8|0,h[E>>3]=l,E)|0)|0);i=E;if(x){x=0;O=0;P=0;N=157;break}Q=c[n>>2]|0;if((Q|0)==0){x=0;aK(4);if(x){x=0;O=0;P=0;N=157;break}R=c[n>>2]|0}else{R=Q}Q=nN(H<<2)|0;S=Q;if((Q|0)!=0){T=S;U=H;V=R;W=S;N=161;break}x=0;aK(4);if(!x){T=S;U=H;V=R;W=S;N=161}else{x=0;O=R;P=S;N=157}}else{T=F;U=G;V=0;W=0;N=161}}while(0);do{if((N|0)==161){x=0;aq(96,o|0,j|0);if(x){x=0;O=V;P=W;N=157;break}G=o|0;F=c[G>>2]|0;if((c[4250]|0)==-1){N=164}else{c[m>>2]=17e3;c[m+4>>2]=16;c[m+8>>2]=0;x=0;aJ(2,17e3,m|0,154);if(!x){N=164}else{x=0;N=190}}L217:do{if((N|0)==164){R=(c[4251]|0)-1|0;E=c[F+8>>2]|0;do{if((c[F+12>>2]|0)-E>>2>>>0>R>>>0){S=c[E+(R<<2)>>2]|0;if((S|0)==0){break}H=S;Q=c[n>>2]|0;X=Q+U|0;Y=c[(c[S>>2]|0)+48>>2]|0;x=0,aM(Y|0,H|0,Q|0,X|0,T|0)|0;if(x){x=0;N=190;break L217}if((U|0)==0){Z=0}else{Z=(a[c[n>>2]|0]|0)==45}n0(t|0,0,12);n0(v|0,0,12);n0(y|0,0,12);x=0;aE(6,g|0,Z|0,o|0,p|0,q|0,r|0,s|0,u|0,w|0,z|0);do{if(!x){X=A|0;Q=c[z>>2]|0;if((U|0)>(Q|0)){Y=d[y]|0;if((Y&1|0)==0){_=Y>>>1}else{_=c[w+4>>2]|0}Y=d[v]|0;if((Y&1|0)==0){$=Y>>>1}else{$=c[u+4>>2]|0}aa=(U-Q<<1|1)+_+$|0}else{Y=d[y]|0;if((Y&1|0)==0){ab=Y>>>1}else{ab=c[w+4>>2]|0}Y=d[v]|0;if((Y&1|0)==0){ac=Y>>>1}else{ac=c[u+4>>2]|0}aa=ab+2+ac|0}Y=aa+Q|0;do{if(Y>>>0>100){S=nN(Y<<2)|0;ad=S;if((S|0)!=0){ae=ad;af=ad;N=194;break}x=0;aK(4);if(!x){ae=ad;af=ad;N=194}else{x=0;ag=ad}}else{ae=X;af=0;N=194}}while(0);do{if((N|0)==194){x=0;aw(2,ae|0,B|0,C|0,c[j+4>>2]|0,T|0,T+(U<<2)|0,H|0,Z|0,p|0,c[q>>2]|0,c[r>>2]|0,s|0,u|0,w|0,Q|0);if(x){x=0;ag=af;break}c[D>>2]=c[f>>2];x=0;aB(34,b|0,D|0,ae|0,c[B>>2]|0,c[C>>2]|0,j|0,k|0);if(x){x=0;ag=af;break}if((af|0)!=0){nO(af)}gV(w);gV(u);gI(s);X=c[G>>2]|0;gf(X)|0;if((W|0)!=0){nO(W)}if((V|0)==0){i=e;return}nO(V);i=e;return}}while(0);Q=cu(-1,-1)|0;X=Q;Q=K;if((ag|0)==0){ah=Q;ai=X;break}nO(ag);ah=Q;ai=X}else{x=0;X=cu(-1,-1)|0;ah=K;ai=X}}while(0);gV(w);gV(u);gI(s);aj=ah;ak=ai;break L217}}while(0);R=c9(4)|0;ns(R);x=0;aJ(12,R|0,11128,210);if(x){x=0;N=190;break}}}while(0);if((N|0)==190){F=cu(-1,-1)|0;aj=K;ak=F}F=c[G>>2]|0;gf(F)|0;al=aj;am=ak;an=V;ao=W}}while(0);if((N|0)==157){W=cu(-1,-1)|0;I=K;J=W;L=O;M=P;N=158}if((N|0)==158){al=I;am=J;an=L;ao=M}if((ao|0)!=0){nO(ao)}if((an|0)==0){ap=am;ar=0;as=ap;at=al;bk(as|0)}nO(an);ap=am;ar=0;as=ap;at=al;bk(as|0)}function lg(b,d,e,f,g,h,j,k,l,m){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;n=i;i=i+40|0;o=n|0;p=n+16|0;q=n+32|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+4|0;i=i+7&-8;v=u;w=i;i=i+12|0;i=i+7&-8;y=w;z=i;i=i+12|0;i=i+7&-8;A=z;B=i;i=i+12|0;i=i+7&-8;D=B;E=i;i=i+4|0;i=i+7&-8;F=E;G=i;i=i+12|0;i=i+7&-8;H=G;I=i;i=i+4|0;i=i+7&-8;J=I;K=i;i=i+12|0;i=i+7&-8;L=K;M=i;i=i+12|0;i=i+7&-8;N=M;O=i;i=i+12|0;i=i+7&-8;P=O;Q=c[e>>2]|0;if(b){if((c[4366]|0)!=-1){c[p>>2]=17464;c[p+4>>2]=16;c[p+8>>2]=0;gD(17464,p,154)}p=(c[4367]|0)-1|0;b=c[Q+8>>2]|0;if((c[Q+12>>2]|0)-b>>2>>>0<=p>>>0){R=c9(4)|0;S=R;ns(S);ca(R|0,11128,210)}e=c[b+(p<<2)>>2]|0;if((e|0)==0){R=c9(4)|0;S=R;ns(S);ca(R|0,11128,210)}R=e;S=c[e>>2]|0;do{if(d){dx[c[S+44>>2]&255](r,R);p=f;C=c[q>>2]|0;a[p]=C&255;C=C>>8;a[p+1|0]=C&255;C=C>>8;a[p+2|0]=C&255;C=C>>8;a[p+3|0]=C&255;dx[c[(c[e>>2]|0)+32>>2]&255](s,R);p=l;if((a[p]&1)==0){c[l+4>>2]=0;a[p]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}x=0;aq(70,l|0,0);if(!x){c[p>>2]=c[t>>2];c[p+4>>2]=c[t+4>>2];c[p+8>>2]=c[t+8>>2];n0(t|0,0,12);gV(s);break}else{x=0;cu(-1,-1,0)|0;cA()}}else{dx[c[S+40>>2]&255](v,R);p=f;C=c[u>>2]|0;a[p]=C&255;C=C>>8;a[p+1|0]=C&255;C=C>>8;a[p+2|0]=C&255;C=C>>8;a[p+3|0]=C&255;dx[c[(c[e>>2]|0)+28>>2]&255](w,R);p=l;if((a[p]&1)==0){c[l+4>>2]=0;a[p]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}x=0;aq(70,l|0,0);if(!x){c[p>>2]=c[y>>2];c[p+4>>2]=c[y+4>>2];c[p+8>>2]=c[y+8>>2];n0(y|0,0,12);gV(w);break}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);w=e;c[g>>2]=dz[c[(c[w>>2]|0)+12>>2]&255](R)|0;c[h>>2]=dz[c[(c[w>>2]|0)+16>>2]&255](R)|0;dx[c[(c[e>>2]|0)+20>>2]&255](z,R);y=j;if((a[y]&1)==0){a[j+1|0]=0;a[y]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}x=0;aq(4,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[y>>2]=c[A>>2];c[y+4>>2]=c[A+4>>2];c[y+8>>2]=c[A+8>>2];n0(A|0,0,12);gI(z);dx[c[(c[e>>2]|0)+24>>2]&255](B,R);e=k;if((a[e]&1)==0){c[k+4>>2]=0;a[e]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}x=0;aq(70,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[e>>2]=c[D>>2];c[e+4>>2]=c[D+4>>2];c[e+8>>2]=c[D+8>>2];n0(D|0,0,12);gV(B);T=dz[c[(c[w>>2]|0)+36>>2]&255](R)|0;c[m>>2]=T;i=n;return}else{if((c[4368]|0)!=-1){c[o>>2]=17472;c[o+4>>2]=16;c[o+8>>2]=0;gD(17472,o,154)}o=(c[4369]|0)-1|0;R=c[Q+8>>2]|0;if((c[Q+12>>2]|0)-R>>2>>>0<=o>>>0){U=c9(4)|0;V=U;ns(V);ca(U|0,11128,210)}Q=c[R+(o<<2)>>2]|0;if((Q|0)==0){U=c9(4)|0;V=U;ns(V);ca(U|0,11128,210)}U=Q;V=c[Q>>2]|0;do{if(d){dx[c[V+44>>2]&255](F,U);o=f;C=c[E>>2]|0;a[o]=C&255;C=C>>8;a[o+1|0]=C&255;C=C>>8;a[o+2|0]=C&255;C=C>>8;a[o+3|0]=C&255;dx[c[(c[Q>>2]|0)+32>>2]&255](G,U);o=l;if((a[o]&1)==0){c[l+4>>2]=0;a[o]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}x=0;aq(70,l|0,0);if(!x){c[o>>2]=c[H>>2];c[o+4>>2]=c[H+4>>2];c[o+8>>2]=c[H+8>>2];n0(H|0,0,12);gV(G);break}else{x=0;cu(-1,-1,0)|0;cA()}}else{dx[c[V+40>>2]&255](J,U);o=f;C=c[I>>2]|0;a[o]=C&255;C=C>>8;a[o+1|0]=C&255;C=C>>8;a[o+2|0]=C&255;C=C>>8;a[o+3|0]=C&255;dx[c[(c[Q>>2]|0)+28>>2]&255](K,U);o=l;if((a[o]&1)==0){c[l+4>>2]=0;a[o]=0}else{c[c[l+8>>2]>>2]=0;c[l+4>>2]=0}x=0;aq(70,l|0,0);if(!x){c[o>>2]=c[L>>2];c[o+4>>2]=c[L+4>>2];c[o+8>>2]=c[L+8>>2];n0(L|0,0,12);gV(K);break}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);K=Q;c[g>>2]=dz[c[(c[K>>2]|0)+12>>2]&255](U)|0;c[h>>2]=dz[c[(c[K>>2]|0)+16>>2]&255](U)|0;dx[c[(c[Q>>2]|0)+20>>2]&255](M,U);h=j;if((a[h]&1)==0){a[j+1|0]=0;a[h]=0}else{a[c[j+8>>2]|0]=0;c[j+4>>2]=0}x=0;aq(4,j|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[h>>2]=c[N>>2];c[h+4>>2]=c[N+4>>2];c[h+8>>2]=c[N+8>>2];n0(N|0,0,12);gI(M);dx[c[(c[Q>>2]|0)+24>>2]&255](O,U);Q=k;if((a[Q]&1)==0){c[k+4>>2]=0;a[Q]=0}else{c[c[k+8>>2]>>2]=0;c[k+4>>2]=0}x=0;aq(70,k|0,0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[Q>>2]=c[P>>2];c[Q+4>>2]=c[P+4>>2];c[Q+8>>2]=c[P+8>>2];n0(P|0,0,12);gV(O);T=dz[c[(c[K>>2]|0)+36>>2]&255](U)|0;c[m>>2]=T;i=n;return}}function lh(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0;c[e>>2]=b;r=i;s=p;t=p+4|0;u=p+8|0;p=o;v=(f&512|0)==0;w=o+4|0;x=o+8|0;o=i;y=(q|0)>0;z=n;A=n+1|0;B=n+8|0;C=n+4|0;n=g;g=0;while(1){L377:do{switch(a[k+g|0]|0){case 0:{c[d>>2]=c[e>>2];D=n;break};case 1:{c[d>>2]=c[e>>2];E=dM[c[(c[r>>2]|0)+44>>2]&127](i,32)|0;F=c[e>>2]|0;c[e>>2]=F+4;c[F>>2]=E;D=n;break};case 4:{E=c[e>>2]|0;F=j?n+4|0:n;G=F;while(1){if(G>>>0>=h>>>0){break}if(dB[c[(c[o>>2]|0)+12>>2]&127](i,2048,c[G>>2]|0)|0){G=G+4|0}else{break}}if(y){if(G>>>0>F>>>0){H=G;I=q;do{H=H-4|0;J=c[H>>2]|0;K=c[e>>2]|0;c[e>>2]=K+4;c[K>>2]=J;I=I-1|0;L=(I|0)>0;}while(H>>>0>F>>>0&L);if(L){M=I;N=H;O=314}else{P=0;Q=I;R=H}}else{M=q;N=G;O=314}if((O|0)==314){O=0;P=dM[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;Q=M;R=N}J=c[e>>2]|0;c[e>>2]=J+4;if((Q|0)>0){K=Q;S=J;while(1){c[S>>2]=P;T=K-1|0;U=c[e>>2]|0;c[e>>2]=U+4;if((T|0)>0){K=T;S=U}else{V=U;break}}}else{V=J}c[V>>2]=l;W=R}else{W=G}if((W|0)==(F|0)){S=dM[c[(c[r>>2]|0)+44>>2]&127](i,48)|0;K=c[e>>2]|0;c[e>>2]=K+4;c[K>>2]=S}else{S=a[z]|0;K=S&255;if((K&1|0)==0){X=K>>>1}else{X=c[C>>2]|0}if((X|0)==0){Y=W;Z=0;_=0;$=-1}else{if((S&1)==0){aa=A}else{aa=c[B>>2]|0}Y=W;Z=0;_=0;$=a[aa]|0}while(1){do{if((Z|0)==($|0)){S=c[e>>2]|0;c[e>>2]=S+4;c[S>>2]=m;S=_+1|0;K=a[z]|0;H=K&255;if((H&1|0)==0){ab=H>>>1}else{ab=c[C>>2]|0}if(S>>>0>=ab>>>0){ac=$;ad=S;ae=0;break}H=(K&1)==0;if(H){af=A}else{af=c[B>>2]|0}if((a[af+S|0]|0)==127){ac=-1;ad=S;ae=0;break}if(H){ag=A}else{ag=c[B>>2]|0}ac=a[ag+S|0]|0;ad=S;ae=0}else{ac=$;ad=_;ae=Z}}while(0);S=Y-4|0;H=c[S>>2]|0;K=c[e>>2]|0;c[e>>2]=K+4;c[K>>2]=H;if((S|0)==(F|0)){break}else{Y=S;Z=ae+1|0;_=ad;$=ac}}}G=c[e>>2]|0;if((E|0)==(G|0)){D=F;break L377}J=G-4|0;if(E>>>0<J>>>0){ah=E;ai=J}else{D=F;break L377}while(1){J=c[ah>>2]|0;c[ah>>2]=c[ai>>2];c[ai>>2]=J;J=ah+4|0;G=ai-4|0;if(J>>>0<G>>>0){ah=J;ai=G}else{D=F;break}}break};case 3:{F=a[s]|0;E=F&255;if((E&1|0)==0){aj=E>>>1}else{aj=c[t>>2]|0}if((aj|0)==0){D=n;break L377}if((F&1)==0){ak=t}else{ak=c[u>>2]|0}F=c[ak>>2]|0;E=c[e>>2]|0;c[e>>2]=E+4;c[E>>2]=F;D=n;break};case 2:{F=a[p]|0;E=F&255;G=(E&1|0)==0;if(G){al=E>>>1}else{al=c[w>>2]|0}if((al|0)==0|v){D=n;break L377}if((F&1)==0){am=w;an=w;ao=w}else{F=c[x>>2]|0;am=F;an=F;ao=F}if(G){ap=E>>>1}else{ap=c[w>>2]|0}E=am+(ap<<2)|0;G=c[e>>2]|0;if((an|0)==(E|0)){aq=G}else{F=(am+(ap-1<<2)+(-ao|0)|0)>>>2;J=an;S=G;while(1){c[S>>2]=c[J>>2];H=J+4|0;if((H|0)==(E|0)){break}J=H;S=S+4|0}aq=G+(F+1<<2)|0}c[e>>2]=aq;D=n;break};default:{D=n}}}while(0);S=g+1|0;if(S>>>0<4){n=D;g=S}else{break}}g=a[s]|0;s=g&255;D=(s&1|0)==0;if(D){ar=s>>>1}else{ar=c[t>>2]|0}if(ar>>>0>1){if((g&1)==0){as=t;at=t;au=t}else{g=c[u>>2]|0;as=g;at=g;au=g}if(D){av=s>>>1}else{av=c[t>>2]|0}t=as+(av<<2)|0;s=c[e>>2]|0;D=at+4|0;if((D|0)==(t|0)){aw=s}else{at=((as+(av-2<<2)+(-au|0)|0)>>>2)+1|0;au=s;av=D;while(1){c[au>>2]=c[av>>2];D=av+4|0;if((D|0)==(t|0)){break}else{au=au+4|0;av=D}}aw=s+(at<<2)|0}c[e>>2]=aw}aw=f&176;if((aw|0)==32){c[d>>2]=c[e>>2];return}else if((aw|0)==16){return}else{c[d>>2]=b;return}}function li(b,e,f,g,h,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0;e=i;i=i+64|0;l=f;f=i;i=i+4|0;i=i+7&-8;c[f>>2]=c[l>>2];l=e|0;m=e+16|0;n=e+24|0;o=e+32|0;p=e+40|0;q=e+48|0;r=q;s=i;i=i+12|0;i=i+7&-8;t=s;u=i;i=i+12|0;i=i+7&-8;v=u;w=i;i=i+4|0;i=i+7&-8;y=i;i=i+400|0;z=i;i=i+4|0;i=i+7&-8;A=i;i=i+4|0;i=i+7&-8;B=i;i=i+4|0;i=i+7&-8;g3(m,h);C=m|0;D=c[C>>2]|0;if((c[4250]|0)==-1){E=367}else{c[l>>2]=17e3;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,17e3,l|0,154);if(!x){E=367}else{x=0}}L494:do{if((E|0)==367){l=(c[4251]|0)-1|0;F=c[D+8>>2]|0;do{if((c[D+12>>2]|0)-F>>2>>>0>l>>>0){G=c[F+(l<<2)>>2]|0;if((G|0)==0){break}H=G;I=k;J=a[I]|0;L=J&255;if((L&1|0)==0){M=L>>>1}else{M=c[k+4>>2]|0}if((M|0)==0){N=0}else{if((J&1)==0){O=k+4|0}else{O=c[k+8>>2]|0}J=c[O>>2]|0;L=(x=0,aF(c[(c[G>>2]|0)+44>>2]|0,H|0,45)|0);if(x){x=0;break L494}N=(J|0)==(L|0)}n0(r|0,0,12);n0(t|0,0,12);n0(v|0,0,12);x=0;aE(6,g|0,N|0,m|0,n|0,o|0,p|0,q|0,s|0,u|0,w|0);do{if(!x){L=y|0;J=a[I]|0;G=J&255;P=(G&1|0)==0;if(P){Q=G>>>1}else{Q=c[k+4>>2]|0}R=c[w>>2]|0;if((Q|0)>(R|0)){if(P){S=G>>>1}else{S=c[k+4>>2]|0}G=d[v]|0;if((G&1|0)==0){T=G>>>1}else{T=c[u+4>>2]|0}G=d[t]|0;if((G&1|0)==0){U=G>>>1}else{U=c[s+4>>2]|0}V=(S-R<<1|1)+T+U|0}else{G=d[v]|0;if((G&1|0)==0){W=G>>>1}else{W=c[u+4>>2]|0}G=d[t]|0;if((G&1|0)==0){X=G>>>1}else{X=c[s+4>>2]|0}V=W+2+X|0}G=V+R|0;do{if(G>>>0>100){P=nN(G<<2)|0;Y=P;if((P|0)!=0){Z=Y;_=Y;$=J;E=410;break}x=0;aK(4);if(x){x=0;aa=Y;break}Z=Y;_=Y;$=a[I]|0;E=410}else{Z=L;_=0;$=J;E=410}}while(0);do{if((E|0)==410){if(($&1)==0){ab=k+4|0;ac=k+4|0}else{J=c[k+8>>2]|0;ab=J;ac=J}J=$&255;if((J&1|0)==0){ad=J>>>1}else{ad=c[k+4>>2]|0}x=0;aw(2,Z|0,z|0,A|0,c[h+4>>2]|0,ac|0,ab+(ad<<2)|0,H|0,N|0,n|0,c[o>>2]|0,c[p>>2]|0,q|0,s|0,u|0,R|0);if(x){x=0;aa=_;break}c[B>>2]=c[f>>2];x=0;aB(34,b|0,B|0,Z|0,c[z>>2]|0,c[A>>2]|0,h|0,j|0);if(x){x=0;aa=_;break}if((_|0)==0){gV(u);gV(s);gI(q);ae=c[C>>2]|0;af=ae|0;ag=gf(af)|0;i=e;return}nO(_);gV(u);gV(s);gI(q);ae=c[C>>2]|0;af=ae|0;ag=gf(af)|0;i=e;return}}while(0);R=cu(-1,-1)|0;J=R;R=K;if((aa|0)==0){ah=R;ai=J;break}nO(aa);ah=R;ai=J}else{x=0;J=cu(-1,-1)|0;ah=K;ai=J}}while(0);gV(u);gV(s);gI(q);aj=ah;ak=ai;al=c[C>>2]|0;am=al|0;an=gf(am)|0;ao=ak;ap=0;aq=ao;ar=aj;bk(aq|0)}}while(0);l=c9(4)|0;ns(l);x=0;aJ(12,l|0,11128,210);if(x){x=0;break}}}while(0);ai=cu(-1,-1)|0;aj=K;ak=ai;al=c[C>>2]|0;am=al|0;an=gf(am)|0;ao=ak;ap=0;aq=ao;ar=aj;bk(aq|0)}function lj(a){a=a|0;gd(a|0);nU(a);return}function lk(a){a=a|0;gd(a|0);return}function ll(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=di(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function lm(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;d=i;i=i+16|0;j=d|0;k=j;n0(k|0,0,12);l=b;m=h;n=a[h]|0;if((n&1)==0){o=m+1|0;p=m+1|0}else{m=c[h+8>>2]|0;o=m;p=m}m=n&255;if((m&1|0)==0){q=m>>>1}else{q=c[h+4>>2]|0}h=o+q|0;do{if(p>>>0<h>>>0){q=p;do{x=0;aq(120,j|0,a[q]|0);if(x){x=0;r=444;break}q=q+1|0;}while(q>>>0<h>>>0);if((r|0)==444){q=cu(-1,-1)|0;s=K;t=q;break}q=(e|0)==-1?-1:e<<1;if((a[k]&1)==0){u=q;r=448;break}v=c[j+8>>2]|0;w=q;r=449}else{u=(e|0)==-1?-1:e<<1;r=448}}while(0);if((r|0)==448){v=j+1|0;w=u;r=449}do{if((r|0)==449){u=(x=0,aM(12,w|0,f|0,g|0,v|0)|0);if(x){x=0;e=cu(-1,-1)|0;s=K;t=e;break}n0(l|0,0,12);e=n1(u|0)|0;k=u+e|0;if((e|0)>0){y=u}else{gI(j);i=d;return}while(1){x=0;aq(120,b|0,a[y]|0);if(x){x=0;break}u=y+1|0;if(u>>>0<k>>>0){y=u}else{r=457;break}}if((r|0)==457){gI(j);i=d;return}k=cu(-1,-1)|0;u=K;gI(b);z=u;A=k;gI(j);B=A;C=0;D=B;E=z;bk(D|0)}}while(0);z=s;A=t;gI(j);B=A;C=0;D=B;E=z;bk(D|0)}function ln(a,b){a=a|0;b=b|0;cJ(((b|0)==-1?-1:b<<1)|0)|0;return}function lo(a){a=a|0;gd(a|0);nU(a);return}function lp(a){a=a|0;gd(a|0);return}function lq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=di(f|0,1)|0;return d>>>(((d|0)!=-1|0)>>>0)|0}function lr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;d=i;i=i+224|0;j=d|0;k=d+8|0;l=d+40|0;m=d+48|0;n=d+56|0;o=d+64|0;p=d+192|0;q=d+200|0;r=d+208|0;s=r;t=i;i=i+8|0;u=i;i=i+8|0;n0(s|0,0,12);v=b;w=t|0;c[t+4>>2]=0;c[t>>2]=6176;y=a[h]|0;if((y&1)==0){z=h+4|0;A=h+4|0}else{B=c[h+8>>2]|0;z=B;A=B}B=y&255;if((B&1|0)==0){C=B>>>1}else{C=c[h+4>>2]|0}h=z+(C<<2)|0;L630:do{if(A>>>0<h>>>0){C=t;z=k|0;B=k+32|0;y=A;D=6176;L632:while(1){c[m>>2]=y;E=(x=0,aL(c[D+12>>2]|0,w|0,j|0,y|0,h|0,m|0,z|0,B|0,l|0)|0);if(x){x=0;F=490;break}G=c[m>>2]|0;if((E|0)==2|(G|0)==(y|0)){F=478;break}if(z>>>0<(c[l>>2]|0)>>>0){E=z;do{x=0;aq(120,r|0,a[E]|0);if(x){x=0;F=489;break L632}E=E+1|0;}while(E>>>0<(c[l>>2]|0)>>>0);H=c[m>>2]|0}else{H=G}if(H>>>0>=h>>>0){break L630}y=H;D=c[C>>2]|0}do{if((F|0)==489){C=cu(-1,-1)|0;I=K;J=C}else if((F|0)==490){C=cu(-1,-1)|0;I=K;J=C}else if((F|0)==478){C=c9(8)|0;x=0;aq(76,C|0,1672);if(x){x=0;D=cu(-1,-1)|0;y=K;by(C|0);I=y;J=D;break}x=0;aJ(12,C|0,11160,30);if(x){x=0;C=cu(-1,-1)|0;I=K;J=C;break}}}while(0);gd(t|0);L=I;M=J;gI(r);N=M;O=0;P=N;Q=L;bk(P|0)}}while(0);gd(t|0);if((a[s]&1)==0){R=r+1|0}else{R=c[r+8>>2]|0}s=(x=0,aM(12,((e|0)==-1?-1:e<<1)|0,f|0,g|0,R|0)|0);if(x){x=0;R=cu(-1,-1)|0;L=K;M=R;gI(r);N=M;O=0;P=N;Q=L;bk(P|0)}n0(v|0,0,12);v=u|0;c[u+4>>2]=0;c[u>>2]=6120;R=n1(s|0)|0;g=s+R|0;if((R|0)<1){S=u|0;gd(S);gI(r);i=d;return}R=u;f=g;e=o|0;t=o+128|0;o=s;s=6120;L667:while(1){c[q>>2]=o;J=(x=0,aL(c[s+16>>2]|0,v|0,n|0,o|0,((f-o|0)>32?o+32|0:g)|0,q|0,e|0,t|0,p|0)|0);if(x){x=0;F=512;break}I=c[q>>2]|0;if((J|0)==2|(I|0)==(o|0)){F=501;break}if(e>>>0<(c[p>>2]|0)>>>0){J=e;do{x=0;aq(20,b|0,c[J>>2]|0);if(x){x=0;F=511;break L667}J=J+4|0;}while(J>>>0<(c[p>>2]|0)>>>0);T=c[q>>2]|0}else{T=I}if(T>>>0>=g>>>0){F=517;break}o=T;s=c[R>>2]|0}do{if((F|0)==517){S=u|0;gd(S);gI(r);i=d;return}else if((F|0)==501){R=c9(8)|0;x=0;aq(76,R|0,1672);if(x){x=0;s=cu(-1,-1)|0;T=K;by(R|0);U=T;V=s;break}x=0;aJ(12,R|0,11160,30);if(x){x=0;R=cu(-1,-1)|0;U=K;V=R;break}}else if((F|0)==511){R=cu(-1,-1)|0;U=K;V=R}else if((F|0)==512){R=cu(-1,-1)|0;U=K;V=R}}while(0);gd(u|0);gV(b);L=U;M=V;gI(r);N=M;O=0;P=N;Q=L;bk(P|0)}function ls(a,b){a=a|0;b=b|0;cJ(((b|0)==-1?-1:b<<1)|0)|0;return}function lt(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=5520;d=b+8|0;e=c[d>>2]|0;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}f=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=f;break}else{x=0}cu(-1,-1,0)|0;g=b|0;gd(g);cA()}}while(0);if((e|0)==(c[3894]|0)){h=b|0;gd(h);return}x=0;ap(312,c[d>>2]|0);if(!x){h=b|0;gd(h);return}else{x=0}cu(-1,-1,0)|0;g=b|0;gd(g);cA()}function lu(a){a=a|0;var b=0;a=c9(8)|0;x=0;aq(58,a|0,2856|0);if(!x){c[a>>2]=4456;ca(a|0,11176,50)}else{x=0;b=cu(-1,-1)|0;by(a|0);bk(b|0)}}function lv(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;e=i;i=i+448|0;f=e|0;g=e+16|0;h=e+32|0;j=e+48|0;k=e+64|0;l=e+80|0;m=e+96|0;n=e+112|0;o=e+128|0;p=e+144|0;q=e+160|0;r=e+176|0;s=e+192|0;t=e+208|0;u=e+224|0;v=e+240|0;w=e+256|0;y=e+272|0;z=e+288|0;A=e+304|0;B=e+320|0;C=e+336|0;D=e+352|0;E=e+368|0;F=e+384|0;G=e+400|0;H=e+416|0;I=e+432|0;c[b+4>>2]=d-1;c[b>>2]=5776;d=b+8|0;J=b+12|0;L=b+136|0;a[L]=1;M=b+24|0;N=M;c[J>>2]=N;c[d>>2]=N;c[b+16>>2]=M+112;M=28;O=N;do{if((O|0)==0){P=0}else{c[O>>2]=0;P=c[J>>2]|0}O=P+4|0;c[J>>2]=O;M=M-1|0;}while((M|0)!=0);M=b+144|0;x=0;aJ(36,M|0,2800,1);if(!x){O=c[d>>2]|0;P=c[J>>2]|0;if((O|0)!=(P|0)){c[J>>2]=P+(~((P-4+(-O|0)|0)>>>2)<<2)}c[3927]=0;c[3926]=5480;if((c[4172]|0)==-1){Q=548}else{c[I>>2]=16688;c[I+4>>2]=16;c[I+8>>2]=0;x=0;aJ(2,16688,I|0,154);if(!x){Q=548}else{x=0;Q=649}}L726:do{if((Q|0)==548){x=0;aJ(8,b|0,15704,(c[4173]|0)-1|0);if(x){x=0;Q=649;break}c[3925]=0;c[3924]=5440;if((c[4170]|0)!=-1){c[H>>2]=16680;c[H+4>>2]=16;c[H+8>>2]=0;x=0;aJ(2,16680,H|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15696,(c[4171]|0)-1|0);if(x){x=0;Q=649;break}c[3977]=0;c[3976]=5888;c[3978]=0;a[15916]=0;I=(x=0,aH(6)|0);if(x){x=0;cu(-1,-1,0)|0;cA()}c[3978]=c[I>>2];if((c[4252]|0)!=-1){c[G>>2]=17008;c[G+4>>2]=16;c[G+8>>2]=0;x=0;aJ(2,17008,G|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15904,(c[4253]|0)-1|0);if(x){x=0;Q=649;break}c[3975]=0;c[3974]=5808;if((c[4250]|0)!=-1){c[F>>2]=17e3;c[F+4>>2]=16;c[F+8>>2]=0;x=0;aJ(2,17e3,F|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15896,(c[4251]|0)-1|0);if(x){x=0;Q=649;break}c[3929]=0;c[3928]=5576;if((c[4176]|0)!=-1){c[E>>2]=16704;c[E+4>>2]=16;c[E+8>>2]=0;x=0;aJ(2,16704,E|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15712,(c[4177]|0)-1|0);if(x){x=0;Q=649;break}c[1001]=0;c[1e3]=5520;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}I=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=I;break}else{x=0;I=cu(-1,-1)|0;O=K;gd(4e3);R=O;S=I;break L726}}}while(0);c[1002]=c[3894];if((c[4174]|0)!=-1){c[D>>2]=16696;c[D+4>>2]=16;c[D+8>>2]=0;x=0;aJ(2,16696,D|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,4e3,(c[4175]|0)-1|0);if(x){x=0;Q=649;break}c[3931]=0;c[3930]=5632;if((c[4178]|0)!=-1){c[C>>2]=16712;c[C+4>>2]=16;c[C+8>>2]=0;x=0;aJ(2,16712,C|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15720,(c[4179]|0)-1|0);if(x){x=0;Q=649;break}c[3933]=0;c[3932]=5688;if((c[4180]|0)!=-1){c[B>>2]=16720;c[B+4>>2]=16;c[B+8>>2]=0;x=0;aJ(2,16720,B|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15728,(c[4181]|0)-1|0);if(x){x=0;Q=649;break}c[3907]=0;c[3906]=4984;a[15632]=46;a[15633]=44;n0(15636,0,12);if((c[4156]|0)!=-1){c[A>>2]=16624;c[A+4>>2]=16;c[A+8>>2]=0;x=0;aJ(2,16624,A|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15624,(c[4157]|0)-1|0);if(x){x=0;Q=649;break}c[993]=0;c[992]=4936;c[994]=46;c[995]=44;n0(3984,0,12);if((c[4154]|0)!=-1){c[z>>2]=16616;c[z+4>>2]=16;c[z+8>>2]=0;x=0;aJ(2,16616,z|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,3968,(c[4155]|0)-1|0);if(x){x=0;Q=649;break}c[3923]=0;c[3922]=5368;if((c[4168]|0)!=-1){c[y>>2]=16672;c[y+4>>2]=16;c[y+8>>2]=0;x=0;aJ(2,16672,y|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15688,(c[4169]|0)-1|0);if(x){x=0;Q=649;break}c[3921]=0;c[3920]=5296;if((c[4166]|0)!=-1){c[w>>2]=16664;c[w+4>>2]=16;c[w+8>>2]=0;x=0;aJ(2,16664,w|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15680,(c[4167]|0)-1|0);if(x){x=0;Q=649;break}c[3919]=0;c[3918]=5232;if((c[4164]|0)!=-1){c[v>>2]=16656;c[v+4>>2]=16;c[v+8>>2]=0;x=0;aJ(2,16656,v|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15672,(c[4165]|0)-1|0);if(x){x=0;Q=649;break}c[3917]=0;c[3916]=5168;if((c[4162]|0)!=-1){c[u>>2]=16648;c[u+4>>2]=16;c[u+8>>2]=0;x=0;aJ(2,16648,u|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15664,(c[4163]|0)-1|0);if(x){x=0;Q=649;break}c[3987]=0;c[3986]=7176;if((c[4372]|0)!=-1){c[t>>2]=17488;c[t+4>>2]=16;c[t+8>>2]=0;x=0;aJ(2,17488,t|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15944,(c[4373]|0)-1|0);if(x){x=0;Q=649;break}c[3985]=0;c[3984]=7112;if((c[4370]|0)!=-1){c[s>>2]=17480;c[s+4>>2]=16;c[s+8>>2]=0;x=0;aJ(2,17480,s|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15936,(c[4371]|0)-1|0);if(x){x=0;Q=649;break}c[3983]=0;c[3982]=7048;if((c[4368]|0)!=-1){c[r>>2]=17472;c[r+4>>2]=16;c[r+8>>2]=0;x=0;aJ(2,17472,r|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15928,(c[4369]|0)-1|0);if(x){x=0;Q=649;break}c[3981]=0;c[3980]=6984;if((c[4366]|0)!=-1){c[q>>2]=17464;c[q+4>>2]=16;c[q+8>>2]=0;x=0;aJ(2,17464,q|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15920,(c[4367]|0)-1|0);if(x){x=0;Q=649;break}c[3905]=0;c[3904]=4640;if((c[4144]|0)!=-1){c[p>>2]=16576;c[p+4>>2]=16;c[p+8>>2]=0;x=0;aJ(2,16576,p|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15616,(c[4145]|0)-1|0);if(x){x=0;Q=649;break}c[3903]=0;c[3902]=4600;if((c[4142]|0)!=-1){c[o>>2]=16568;c[o+4>>2]=16;c[o+8>>2]=0;x=0;aJ(2,16568,o|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15608,(c[4143]|0)-1|0);if(x){x=0;Q=649;break}c[3901]=0;c[3900]=4560;if((c[4140]|0)!=-1){c[n>>2]=16560;c[n+4>>2]=16;c[n+8>>2]=0;x=0;aJ(2,16560,n|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15600,(c[4141]|0)-1|0);if(x){x=0;Q=649;break}c[3899]=0;c[3898]=4520;if((c[4138]|0)!=-1){c[m>>2]=16552;c[m+4>>2]=16;c[m+8>>2]=0;x=0;aJ(2,16552,m|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15592,(c[4139]|0)-1|0);if(x){x=0;Q=649;break}c[989]=0;c[988]=4840;c[990]=4888;if((c[4152]|0)!=-1){c[l>>2]=16608;c[l+4>>2]=16;c[l+8>>2]=0;x=0;aJ(2,16608,l|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,3952,(c[4153]|0)-1|0);if(x){x=0;Q=649;break}c[985]=0;c[984]=4744;c[986]=4792;if((c[4150]|0)!=-1){c[k>>2]=16600;c[k+4>>2]=16;c[k+8>>2]=0;x=0;aJ(2,16600,k|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,3936,(c[4151]|0)-1|0);if(x){x=0;Q=649;break}c[981]=0;c[980]=5744;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}I=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=I;break}else{x=0;I=cu(-1,-1)|0;O=K;gd(3920);R=O;S=I;break L726}}}while(0);c[982]=c[3894];c[980]=4712;if((c[4148]|0)!=-1){c[j>>2]=16592;c[j+4>>2]=16;c[j+8>>2]=0;x=0;aJ(2,16592,j|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,3920,(c[4149]|0)-1|0);if(x){x=0;Q=649;break}c[977]=0;c[976]=5744;do{if((a[17696]|0)==0){if((bT(17696)|0)==0){break}I=(x=0,au(12,2147483647,2800,0)|0);if(!x){c[3894]=I;break}else{x=0;I=cu(-1,-1)|0;O=K;gd(3904);R=O;S=I;break L726}}}while(0);c[978]=c[3894];c[976]=4680;if((c[4146]|0)!=-1){c[h>>2]=16584;c[h+4>>2]=16;c[h+8>>2]=0;x=0;aJ(2,16584,h|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,3904,(c[4147]|0)-1|0);if(x){x=0;Q=649;break}c[3915]=0;c[3914]=5072;if((c[4160]|0)!=-1){c[g>>2]=16640;c[g+4>>2]=16;c[g+8>>2]=0;x=0;aJ(2,16640,g|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15656,(c[4161]|0)-1|0);if(x){x=0;Q=649;break}c[3913]=0;c[3912]=5032;if((c[4158]|0)!=-1){c[f>>2]=16632;c[f+4>>2]=16;c[f+8>>2]=0;x=0;aJ(2,16632,f|0,154);if(x){x=0;Q=649;break}}x=0;aJ(8,b|0,15648,(c[4159]|0)-1|0);if(x){x=0;Q=649;break}i=e;return}}while(0);if((Q|0)==649){Q=cu(-1,-1)|0;R=K;S=Q}gI(M);T=R;U=S}else{x=0;S=cu(-1,-1)|0;T=K;U=S}S=c[d>>2]|0;if((S|0)==0){V=b|0;gd(V);W=U;X=0;Y=W;Z=T;bk(Y|0)}d=c[J>>2]|0;if((S|0)!=(d|0)){c[J>>2]=d+(~((d-4+(-S|0)|0)>>>2)<<2)}if((S|0)==(b+24|0)){a[L]=0;V=b|0;gd(V);W=U;X=0;Y=W;Z=T;bk(Y|0)}else{nU(S);V=b|0;gd(V);W=U;X=0;Y=W;Z=T;bk(Y|0)}}function lw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;e=b|0;ge(e);f=a+8|0;g=a+12|0;a=c[g>>2]|0;h=f|0;i=c[h>>2]|0;j=a-i>>2;do{if(j>>>0>d>>>0){k=i}else{l=d+1|0;if(j>>>0>=l>>>0){if(j>>>0<=l>>>0){k=i;break}m=i+(l<<2)|0;if((m|0)==(a|0)){k=i;break}c[g>>2]=a+(~((a-4+(-m|0)|0)>>>2)<<2);k=i;break}x=0;aq(124,f|0,l-j|0);if(!x){k=c[h>>2]|0;break}else{x=0}l=cu(-1,-1)|0;if((b|0)==0){bk(l|0)}gf(e)|0;bk(l|0)}}while(0);e=c[k+(d<<2)>>2]|0;if((e|0)==0){n=k;o=n+(d<<2)|0;c[o>>2]=b;return}gf(e|0)|0;n=c[h>>2]|0;o=n+(d<<2)|0;c[o>>2]=b;return}function lx(a){a=a|0;ly(a);nU(a);return}function ly(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[b>>2]=5776;d=b+12|0;e=c[d>>2]|0;f=b+8|0;g=c[f>>2]|0;if((e|0)!=(g|0)){h=0;i=g;g=e;while(1){e=c[i+(h<<2)>>2]|0;if((e|0)==0){j=g;k=i}else{l=e|0;gf(l)|0;j=c[d>>2]|0;k=c[f>>2]|0}l=h+1|0;if(l>>>0<j-k>>2>>>0){h=l;i=k;g=j}else{break}}}gI(b+144|0);j=c[f>>2]|0;if((j|0)==0){m=b|0;gd(m);return}f=c[d>>2]|0;if((j|0)!=(f|0)){c[d>>2]=f+(~((f-4+(-j|0)|0)>>>2)<<2)}if((j|0)==(b+24|0)){a[b+136|0]=0;m=b|0;gd(m);return}else{nU(j);m=b|0;gd(m);return}}function lz(){var b=0,d=0;if((a[17680]|0)!=0){b=c[3886]|0;return b|0}if((bT(17680)|0)==0){b=c[3886]|0;return b|0}do{if((a[17688]|0)==0){if((bT(17688)|0)==0){break}x=0;aq(92,15736,1);if(!x){c[3890]=15736;c[3888]=15560;break}else{x=0;d=cu(-1,-1)|0;bk(d|0)}}}while(0);d=c[c[3888]>>2]|0;c[3892]=d;ge(d|0);c[3886]=15568;b=c[3886]|0;return b|0}function lA(a){a=a|0;var b=0,d=0;b=(x=0,aH(4)|0);if(!x){d=c[b>>2]|0;c[a>>2]=d;ge(d|0);return}else{x=0;cu(-1,-1,0)|0;cA()}}function lB(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;ge(d|0);return}function lC(a){a=a|0;gf(c[a>>2]|0)|0;return}function lD(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if((c[a>>2]|0)!=-1){c[e>>2]=b;c[e+4>>2]=16;c[e+8>>2]=0;gD(a,e,154)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if((c[f+12>>2]|0)-b>>2>>>0<=e>>>0){g=0;i=d;return g|0}g=(c[b+(e<<2)>>2]|0)!=0;i=d;return g|0}function lE(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;d=i;i=i+16|0;e=d|0;f=c[a>>2]|0;a=b|0;if((c[a>>2]|0)!=-1){c[e>>2]=b;c[e+4>>2]=16;c[e+8>>2]=0;gD(a,e,154)}e=(c[b+4>>2]|0)-1|0;b=c[f+8>>2]|0;if((c[f+12>>2]|0)-b>>2>>>0<=e>>>0){g=c9(4)|0;h=g;ns(h);ca(g|0,11128,210);return 0}f=c[b+(e<<2)>>2]|0;if((f|0)==0){g=c9(4)|0;h=g;ns(h);ca(g|0,11128,210);return 0}else{i=d;return f|0}return 0}function lF(a){a=a|0;gd(a|0);nU(a);return}function lG(a){a=a|0;if((a|0)==0){return}dw[c[(c[a>>2]|0)+4>>2]&511](a);return}function lH(a){a=a|0;c[a+4>>2]=(I=c[4182]|0,c[4182]=I+1,I)+1;return}function lI(a){a=a|0;gd(a|0);nU(a);return}function lJ(a,d,e){a=a|0;d=d|0;e=e|0;var f=0;if(e>>>0>=128){f=0;return f|0}a=(x=0,aH(6)|0);if(x){x=0;cu(-1,-1,0)|0;cA();return 0}f=(b[(c[a>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0;return f|0}function lK(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){f=c[h>>2]|0;if(f>>>0<128){d=(x=0,aH(6)|0);if(x){x=0;j=743;break}k=b[(c[d>>2]|0)+(f<<1)>>1]|0}else{k=0}b[i>>1]=k;f=h+4|0;if((f|0)==(e|0)){g=e;j=747;break}else{h=f;i=i+2|0}}if((j|0)==747){return g|0}else if((j|0)==743){cu(-1,-1,0)|0;cA();return 0}return 0}function lL(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((e|0)==(f|0)){g=e;return g|0}else{h=e}while(1){e=c[h>>2]|0;if(e>>>0<128){a=(x=0,aH(6)|0);if(x){x=0;i=752;break}if((b[(c[a>>2]|0)+(e<<1)>>1]&d)<<16>>16!=0){g=h;i=756;break}}e=h+4|0;if((e|0)==(f|0)){g=f;i=757;break}else{h=e}}if((i|0)==756){return g|0}else if((i|0)==757){return g|0}else if((i|0)==752){cu(-1,-1,0)|0;cA();return 0}return 0}function lM(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a=e;while(1){if((a|0)==(f|0)){g=f;h=768;break}e=c[a>>2]|0;if(e>>>0>=128){g=a;h=767;break}i=(x=0,aH(6)|0);if(x){x=0;h=763;break}if((b[(c[i>>2]|0)+(e<<1)>>1]&d)<<16>>16==0){g=a;h=766;break}else{a=a+4|0}}if((h|0)==766){return g|0}else if((h|0)==767){return g|0}else if((h|0)==763){cu(-1,-1,0)|0;cA();return 0}else if((h|0)==768){return g|0}return 0}function lN(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128){d=b;return d|0}a=(x=0,aH(10)|0);if(x){x=0;cu(-1,-1,0)|0;cA();return 0}d=c[(c[a>>2]|0)+(b<<2)>>2]|0;return d|0}function lO(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128){a=(x=0,aH(10)|0);if(x){x=0;g=779;break}h=c[(c[a>>2]|0)+(b<<2)>>2]|0}else{h=b}c[f>>2]=h;b=f+4|0;if((b|0)==(d|0)){e=d;g=783;break}else{f=b}}if((g|0)==783){return e|0}else if((g|0)==779){cu(-1,-1,0)|0;cA();return 0}return 0}function lP(a,b){a=a|0;b=b|0;var d=0;if(b>>>0>=128){d=b;return d|0}a=(x=0,aH(2)|0);if(x){x=0;cu(-1,-1,0)|0;cA();return 0}d=c[(c[a>>2]|0)+(b<<2)>>2]|0;return d|0}function lQ(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((b|0)==(d|0)){e=b;return e|0}else{f=b}while(1){b=c[f>>2]|0;if(b>>>0<128){a=(x=0,aH(2)|0);if(x){x=0;g=795;break}h=c[(c[a>>2]|0)+(b<<2)>>2]|0}else{h=b}c[f>>2]=h;b=f+4|0;if((b|0)==(d|0)){e=d;g=799;break}else{f=b}}if((g|0)==799){return e|0}else if((g|0)==795){cu(-1,-1,0)|0;cA();return 0}return 0}function lR(a,b){a=a|0;b=b|0;return b<<24>>24|0}function lS(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((d|0)==(e|0)){g=d;return g|0}else{h=d;i=f}while(1){c[i>>2]=a[h]|0;f=h+1|0;if((f|0)==(e|0)){g=e;break}else{h=f;i=i+4|0}}return g|0}function lT(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128?b&255:c)|0}function lU(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;if((d|0)==(e|0)){h=d;return h|0}b=((e-4+(-d|0)|0)>>>2)+1|0;i=d;j=g;while(1){g=c[i>>2]|0;a[j]=g>>>0<128?g&255:f;g=i+4|0;if((g|0)==(e|0)){break}else{i=g;j=j+1|0}}h=d+(b<<2)|0;return h|0}function lV(b){b=b|0;var d=0;c[b>>2]=5888;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}nV(d)}}while(0);gd(b|0);nU(b);return}function lW(b){b=b|0;var d=0;c[b>>2]=5888;d=c[b+8>>2]|0;do{if((d|0)!=0){if((a[b+12|0]&1)==0){break}nV(d)}}while(0);gd(b|0);return}function lX(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}a=(x=0,aH(10)|0);if(x){x=0;cu(-1,-1,0)|0;cA();return 0}d=c[(c[a>>2]|0)+((b&255)<<2)>>2]&255;return d|0}function lY(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{b=(x=0,aH(10)|0);if(x){x=0;i=833;break}h=c[(c[b>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;i=837;break}else{g=d}}if((i|0)==837){return f|0}else if((i|0)==833){cu(-1,-1,0)|0;cA();return 0}return 0}function lZ(a,b){a=a|0;b=b|0;var d=0;if(b<<24>>24<0){d=b;return d|0}a=(x=0,aH(2)|0);if(x){x=0;cu(-1,-1,0)|0;cA();return 0}d=c[(c[a>>2]|0)+(b<<24>>24<<2)>>2]&255;return d|0}function l_(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if((d|0)==(e|0)){f=d;return f|0}else{g=d}while(1){d=a[g]|0;if(d<<24>>24<0){h=d}else{b=(x=0,aH(2)|0);if(x){x=0;i=849;break}h=c[(c[b>>2]|0)+(d<<24>>24<<2)>>2]&255}a[g]=h;d=g+1|0;if((d|0)==(e|0)){f=e;i=854;break}else{g=d}}if((i|0)==854){return f|0}else if((i|0)==849){cu(-1,-1,0)|0;cA();return 0}return 0}function l$(a,b){a=a|0;b=b|0;return b|0}function l0(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((c|0)==(d|0)){f=c;return f|0}else{g=c;h=e}while(1){a[h]=a[g]|0;e=g+1|0;if((e|0)==(d|0)){f=d;break}else{g=e;h=h+1|0}}return f|0}function l1(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24<0?c:b)|0}function l2(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;if((c|0)==(d|0)){g=c;return g|0}else{h=c;i=f}while(1){f=a[h]|0;a[i]=f<<24>>24<0?e:f;f=h+1|0;if((f|0)==(d|0)){g=d;break}else{h=f;i=i+1|0}}return g|0}function l3(a){a=a|0;gd(a|0);nU(a);return}function l4(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function l5(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3}function l6(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function l7(a){a=a|0;return 1}function l8(a){a=a|0;return 1}function l9(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;b=d-c|0;return(b>>>0<e>>>0?b:e)|0}function ma(a){a=a|0;return 1}function mb(a){a=a|0;lt(a);nU(a);return}function mc(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;l=i;i=i+8|0;m=l|0;n=m;o=i;i=i+4|0;i=i+7&-8;p=e;while(1){if((p|0)==(f|0)){q=f;break}if((c[p>>2]|0)==0){q=p;break}else{p=p+4|0}}c[k>>2]=h;c[g>>2]=e;L1142:do{if((e|0)==(f|0)|(h|0)==(j|0)){r=e}else{p=d;s=j;t=b+8|0;u=o|0;v=h;w=e;y=q;while(1){z=c[p+4>>2]|0;c[m>>2]=c[p>>2];c[m+4>>2]=z;A=cP(c[t>>2]|0)|0;z=(x=0,aG(28,v|0,g|0,y-w>>2|0,s-v|0,d|0)|0);if(x){x=0;B=885;break}if((A|0)!=0){x=0,as(48,A|0)|0;if(x){x=0;B=884;break}}if((z|0)==(-1|0)){B=890;break}else if((z|0)==0){C=1;B=932;break}D=(c[k>>2]|0)+z|0;c[k>>2]=D;if((D|0)==(j|0)){B=923;break}if((y|0)==(f|0)){E=f;F=D;G=c[g>>2]|0}else{H=cP(c[t>>2]|0)|0;D=(x=0,au(26,u|0,0,d|0)|0);if(x){x=0;B=909;break}if((H|0)!=0){x=0,as(48,H|0)|0;if(x){x=0;B=908;break}}if((D|0)==-1){C=2;B=928;break}z=c[k>>2]|0;if(D>>>0>(s-z|0)>>>0){C=1;B=929;break}L1161:do{if((D|0)!=0){I=D;J=u;K=z;while(1){L=a[J]|0;c[k>>2]=K+1;a[K]=L;L=I-1|0;if((L|0)==0){break L1161}I=L;J=J+1|0;K=c[k>>2]|0}}}while(0);z=(c[g>>2]|0)+4|0;c[g>>2]=z;D=z;while(1){if((D|0)==(f|0)){M=f;break}if((c[D>>2]|0)==0){M=D;break}else{D=D+4|0}}E=M;F=c[k>>2]|0;G=z}if((G|0)==(f|0)|(F|0)==(j|0)){r=G;break L1142}else{v=F;w=G;y=E}}if((B|0)==923){r=c[g>>2]|0;break}else if((B|0)==890){c[k>>2]=v;L1174:do{if((w|0)==(c[g>>2]|0)){N=w}else{y=w;u=v;while(1){s=c[y>>2]|0;O=cP(c[t>>2]|0)|0;p=(x=0,au(26,u|0,s|0,n|0)|0);if(x){x=0;break}if((O|0)!=0){x=0,as(48,O|0)|0;if(x){x=0;B=894;break}}if((p|0)==-1){N=y;break L1174}s=(c[k>>2]|0)+p|0;c[k>>2]=s;p=y+4|0;if((p|0)==(c[g>>2]|0)){N=p;break L1174}else{y=p;u=s}}if((B|0)==894){cu(-1,-1,0)|0;cA();return 0}u=cu(-1,-1)|0;if((O|0)==0){bk(u|0)}x=0,as(48,O|0)|0;if(!x){bk(u|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}}while(0);c[g>>2]=N;C=2;i=l;return C|0}else if((B|0)==928){i=l;return C|0}else if((B|0)==929){i=l;return C|0}else if((B|0)==932){i=l;return C|0}else if((B|0)==908){cu(-1,-1,0)|0;cA();return 0}else if((B|0)==909){t=cu(-1,-1)|0;if((H|0)==0){bk(t|0)}x=0,as(48,H|0)|0;if(!x){bk(t|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else if((B|0)==884){cu(-1,-1,0)|0;cA();return 0}else if((B|0)==885){t=cu(-1,-1)|0;if((A|0)==0){bk(t|0)}x=0,as(48,A|0)|0;if(!x){bk(t|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}}}while(0);C=(r|0)!=(f|0)|0;i=l;return C|0}function md(b,d,e,f,g,h,j,k){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;l=i;i=i+8|0;m=l|0;n=m;o=e;while(1){if((o|0)==(f|0)){p=f;break}if((a[o]|0)==0){p=o;break}else{o=o+1|0}}c[k>>2]=h;c[g>>2]=e;L1219:do{if((e|0)==(f|0)|(h|0)==(j|0)){q=e}else{o=d;r=j;s=b+8|0;t=h;u=e;v=p;while(1){w=c[o+4>>2]|0;c[m>>2]=c[o>>2];c[m+4>>2]=w;y=v;z=cP(c[s>>2]|0)|0;w=(x=0,aG(12,t|0,g|0,y-u|0,r-t>>2|0,d|0)|0);if(x){x=0;A=946;break}if((z|0)!=0){x=0,as(48,z|0)|0;if(x){x=0;A=945;break}}if((w|0)==(-1|0)){A=951;break}else if((w|0)==0){B=2;A=992;break}C=(c[k>>2]|0)+(w<<2)|0;c[k>>2]=C;if((C|0)==(j|0)){A=983;break}w=c[g>>2]|0;if((v|0)==(f|0)){D=f;E=C;F=w}else{G=cP(c[s>>2]|0)|0;H=(x=0,aM(26,C|0,w|0,1,d|0)|0);if(x){x=0;A=973;break}if((G|0)!=0){x=0,as(48,G|0)|0;if(x){x=0;A=972;break}}if((H|0)!=0){B=2;A=996;break}c[k>>2]=(c[k>>2]|0)+4;H=(c[g>>2]|0)+1|0;c[g>>2]=H;w=H;while(1){if((w|0)==(f|0)){I=f;break}if((a[w]|0)==0){I=w;break}else{w=w+1|0}}D=I;E=c[k>>2]|0;F=H}if((F|0)==(f|0)|(E|0)==(j|0)){q=F;break L1219}else{t=E;u=F;v=D}}if((A|0)==945){cu(-1,-1,0)|0;cA();return 0}else if((A|0)==946){v=cu(-1,-1)|0;if((z|0)==0){bk(v|0)}x=0,as(48,z|0)|0;if(!x){bk(v|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else if((A|0)==951){c[k>>2]=t;L1251:do{if((u|0)==(c[g>>2]|0)){J=u}else{v=t;r=u;while(1){K=cP(c[s>>2]|0)|0;o=(x=0,aM(26,v|0,r|0,y-r|0,n|0)|0);if(x){x=0;A=956;break}if((K|0)!=0){x=0,as(48,K|0)|0;if(x){x=0;A=955;break}}if((o|0)==0){L=r+1|0}else if((o|0)==(-1|0)){A=962;break}else if((o|0)==(-2|0)){A=963;break}else{L=r+o|0}o=(c[k>>2]|0)+4|0;c[k>>2]=o;if((L|0)==(c[g>>2]|0)){J=L;break L1251}else{v=o;r=L}}if((A|0)==955){cu(-1,-1,0)|0;cA();return 0}else if((A|0)==956){v=cu(-1,-1)|0;if((K|0)==0){bk(v|0)}x=0,as(48,K|0)|0;if(!x){bk(v|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else if((A|0)==962){c[g>>2]=r;B=2;i=l;return B|0}else if((A|0)==963){c[g>>2]=r;B=1;i=l;return B|0}}}while(0);c[g>>2]=J;B=(J|0)!=(f|0)|0;i=l;return B|0}else if((A|0)==972){cu(-1,-1,0)|0;cA();return 0}else if((A|0)==973){s=cu(-1,-1)|0;if((G|0)==0){bk(s|0)}x=0,as(48,G|0)|0;if(!x){bk(s|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else if((A|0)==983){q=c[g>>2]|0;break}else if((A|0)==992){i=l;return B|0}else if((A|0)==996){i=l;return B|0}}}while(0);B=(q|0)!=(f|0)|0;i=l;return B|0}function me(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,k=0,l=0,m=0,n=0;h=i;i=i+8|0;c[g>>2]=e;e=h|0;j=cP(c[b+8>>2]|0)|0;b=(x=0,au(26,e|0,0,d|0)|0);if(x){x=0;d=cu(-1,-1)|0;if((j|0)==0){bk(d|0)}x=0,as(48,j|0)|0;if(!x){bk(d|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}do{if((j|0)!=0){x=0,as(48,j|0)|0;if(!x){break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);if((b|0)==(-1|0)|(b|0)==0){k=2;i=h;return k|0}j=b-1|0;b=c[g>>2]|0;if(j>>>0>(f-b|0)>>>0){k=1;i=h;return k|0}if((j|0)==0){k=0;i=h;return k|0}else{l=j;m=e;n=b}while(1){b=a[m]|0;c[g>>2]=n+1;a[n]=b;b=l-1|0;if((b|0)==0){k=0;break}l=b;m=m+1|0;n=c[g>>2]|0}i=h;return k|0}function mf(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a+8|0;a=(x=0,as(48,c[b>>2]|0)|0);do{if(!x){d=(x=0,au(22,0,0,4)|0);if(x){x=0;cu(-1,-1,0)|0;if((a|0)==0){cA();return 0}x=0,as(48,a|0)|0;if(!x){cA();return 0}else{x=0;cu(-1,-1,0)|0;cA();return 0}}do{if((a|0)!=0){x=0,as(48,a|0)|0;if(!x){break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);if((d|0)!=0){e=-1;return e|0}f=c[b>>2]|0;if((f|0)==0){e=1;return e|0}g=(x=0,as(48,f|0)|0);if(x){x=0;break}if((g|0)==0){e=0;return e|0}x=0,as(48,g|0)|0;if(!x){e=0;return e|0}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else{x=0}}while(0);cu(-1,-1,0)|0;cA();return 0}function mg(a){a=a|0;return 0}function mh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if((f|0)==0|(d|0)==(e|0)){g=0;return g|0}h=e;i=a+8|0;a=d;d=0;j=0;while(1){k=cP(c[i>>2]|0)|0;l=(x=0,au(2,a|0,h-a|0,b|0)|0);if(x){x=0;m=1049;break}if((k|0)!=0){x=0,as(48,k|0)|0;if(x){x=0;m=1048;break}}if((l|0)==0){n=1;o=a+1|0}else if((l|0)==(-1|0)|(l|0)==(-2|0)){g=d;m=1061;break}else{n=l;o=a+l|0}l=n+d|0;p=j+1|0;if(p>>>0>=f>>>0|(o|0)==(e|0)){g=l;m=1062;break}else{a=o;d=l;j=p}}if((m|0)==1048){cu(-1,-1,0)|0;cA();return 0}else if((m|0)==1049){j=cu(-1,-1)|0;if((k|0)==0){bk(j|0)}x=0,as(48,k|0)|0;if(!x){bk(j|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else if((m|0)==1061){return g|0}else if((m|0)==1062){return g|0}return 0}function mi(a){a=a|0;var b=0,d=0;b=c[a+8>>2]|0;if((b|0)==0){d=1;return d|0}a=(x=0,as(48,b|0)|0);if(x){x=0;cu(-1,-1,0)|0;cA();return 0}if((a|0)==0){d=4;return d|0}x=0,as(48,a|0)|0;if(!x){d=4;return d|0}else{x=0;cu(-1,-1,0)|0;cA();return 0}return 0}function mj(a){a=a|0;gd(a|0);nU(a);return}function mk(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=ml(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>1<<1);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function ml(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0;c[g>>2]=d;c[j>>2]=h;do{if((l&2|0)!=0){if((i-h|0)<3){m=1;return m|0}else{c[j>>2]=h+1;a[h]=-17;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-69;d=c[j>>2]|0;c[j>>2]=d+1;a[d]=-65;break}}}while(0);h=f;l=c[g>>2]|0;if(l>>>0>=f>>>0){m=0;return m|0}d=i;i=l;L1398:while(1){l=b[i>>1]|0;n=l&65535;if(n>>>0>k>>>0){m=2;o=1102;break}do{if((l&65535)<128){p=c[j>>2]|0;if((d-p|0)<1){m=1;o=1105;break L1398}c[j>>2]=p+1;a[p]=l&255}else{if((l&65535)<2048){p=c[j>>2]|0;if((d-p|0)<2){m=1;o=1106;break L1398}c[j>>2]=p+1;a[p]=(n>>>6|192)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((l&65535)<55296){p=c[j>>2]|0;if((d-p|0)<3){m=1;o=1107;break L1398}c[j>>2]=p+1;a[p]=(n>>>12|224)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n>>>6&63|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((l&65535)>=56320){if((l&65535)<57344){m=2;o=1112;break L1398}p=c[j>>2]|0;if((d-p|0)<3){m=1;o=1113;break L1398}c[j>>2]=p+1;a[p]=(n>>>12|224)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n>>>6&63|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n&63|128)&255;break}if((h-i|0)<4){m=1;o=1108;break L1398}p=i+2|0;q=e[p>>1]|0;if((q&64512|0)!=56320){m=2;o=1109;break L1398}if((d-(c[j>>2]|0)|0)<4){m=1;o=1110;break L1398}r=n&960;if(((r<<10)+65536|n<<10&64512|q&1023)>>>0>k>>>0){m=2;o=1111;break L1398}c[g>>2]=p;p=(r>>>6)+1|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=(p>>>2|240)&255;r=c[j>>2]|0;c[j>>2]=r+1;a[r]=(n>>>2&15|p<<4&48|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(n<<4&48|q>>>6&15|128)&255;p=c[j>>2]|0;c[j>>2]=p+1;a[p]=(q&63|128)&255}}while(0);n=(c[g>>2]|0)+2|0;c[g>>2]=n;if(n>>>0<f>>>0){i=n}else{m=0;o=1101;break}}if((o|0)==1101){return m|0}else if((o|0)==1102){return m|0}else if((o|0)==1105){return m|0}else if((o|0)==1106){return m|0}else if((o|0)==1107){return m|0}else if((o|0)==1108){return m|0}else if((o|0)==1109){return m|0}else if((o|0)==1110){return m|0}else if((o|0)==1111){return m|0}else if((o|0)==1112){return m|0}else if((o|0)==1113){return m|0}return 0}function mm(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=mn(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>1<<1);i=b;return l|0}function mn(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;c[g>>2]=e;c[j>>2]=h;h=c[g>>2]|0;do{if((l&4|0)==0){m=h}else{if((f-h|0)<=2){m=h;break}if((a[h]|0)!=-17){m=h;break}if((a[h+1|0]|0)!=-69){m=h;break}if((a[h+2|0]|0)!=-65){m=h;break}e=h+3|0;c[g>>2]=e;m=e}}while(0);L1444:do{if(m>>>0<f>>>0){h=f;l=i;e=c[j>>2]|0;n=m;L1446:while(1){if(e>>>0>=i>>>0){o=n;break L1444}p=a[n]|0;q=p&255;if(q>>>0>k>>>0){r=2;s=1160;break}do{if(p<<24>>24>-1){b[e>>1]=p&255;c[g>>2]=(c[g>>2]|0)+1}else{if((p&255)<194){r=2;s=1164;break L1446}if((p&255)<224){if((h-n|0)<2){r=1;s=1158;break L1446}t=d[n+1|0]|0;if((t&192|0)!=128){r=2;s=1166;break L1446}u=t&63|q<<6&1984;if(u>>>0>k>>>0){r=2;s=1169;break L1446}b[e>>1]=u&65535;c[g>>2]=(c[g>>2]|0)+2;break}if((p&255)<240){if((h-n|0)<3){r=1;s=1167;break L1446}u=a[n+1|0]|0;t=a[n+2|0]|0;if((q|0)==237){if((u&-32)<<24>>24!=-128){r=2;s=1157;break L1446}}else if((q|0)==224){if((u&-32)<<24>>24!=-96){r=2;s=1168;break L1446}}else{if((u&-64)<<24>>24!=-128){r=2;s=1165;break L1446}}v=t&255;if((v&192|0)!=128){r=2;s=1159;break L1446}t=(u&255)<<6&4032|q<<12|v&63;if((t&65535)>>>0>k>>>0){r=2;s=1163;break L1446}b[e>>1]=t&65535;c[g>>2]=(c[g>>2]|0)+3;break}if((p&255)>=245){r=2;s=1161;break L1446}if((h-n|0)<4){r=1;s=1162;break L1446}t=a[n+1|0]|0;v=a[n+2|0]|0;u=a[n+3|0]|0;if((q|0)==240){if((t+112&255)>=48){r=2;s=1173;break L1446}}else if((q|0)==244){if((t&-16)<<24>>24!=-128){r=2;s=1174;break L1446}}else{if((t&-64)<<24>>24!=-128){r=2;s=1171;break L1446}}w=v&255;if((w&192|0)!=128){r=2;s=1172;break L1446}v=u&255;if((v&192|0)!=128){r=2;s=1156;break L1446}if((l-e|0)<4){r=1;s=1176;break L1446}u=q&7;x=t&255;t=w<<6;y=v&63;if((x<<12&258048|u<<18|t&4032|y)>>>0>k>>>0){r=2;s=1170;break L1446}b[e>>1]=(x<<2&60|w>>>4&3|((x>>>4&3|u<<2)<<6)+16320|55296)&65535;u=(c[j>>2]|0)+2|0;c[j>>2]=u;b[u>>1]=(y|t&960|56320)&65535;c[g>>2]=(c[g>>2]|0)+4}}while(0);q=(c[j>>2]|0)+2|0;c[j>>2]=q;p=c[g>>2]|0;if(p>>>0<f>>>0){e=q;n=p}else{o=p;break L1444}}if((s|0)==1164){return r|0}else if((s|0)==1165){return r|0}else if((s|0)==1166){return r|0}else if((s|0)==1167){return r|0}else if((s|0)==1168){return r|0}else if((s|0)==1169){return r|0}else if((s|0)==1170){return r|0}else if((s|0)==1171){return r|0}else if((s|0)==1172){return r|0}else if((s|0)==1173){return r|0}else if((s|0)==1174){return r|0}else if((s|0)==1176){return r|0}else if((s|0)==1159){return r|0}else if((s|0)==1160){return r|0}else if((s|0)==1161){return r|0}else if((s|0)==1162){return r|0}else if((s|0)==1163){return r|0}else if((s|0)==1156){return r|0}else if((s|0)==1157){return r|0}else if((s|0)==1158){return r|0}}else{o=m}}while(0);r=o>>>0<f>>>0|0;return r|0}function mo(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function mp(a){a=a|0;return 0}function mq(a){a=a|0;return 0}function mr(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ms(c,d,e,1114111,0)|0}function ms(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L1517:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=0;j=h;L1519:while(1){k=a[j]|0;l=k&255;if(l>>>0>f>>>0){m=j;break L1517}do{if(k<<24>>24>-1){n=j+1|0;o=i}else{if((k&255)<194){m=j;break L1517}if((k&255)<224){if((g-j|0)<2){m=j;break L1517}p=d[j+1|0]|0;if((p&192|0)!=128){m=j;break L1517}if((p&63|l<<6&1984)>>>0>f>>>0){m=j;break L1517}n=j+2|0;o=i;break}if((k&255)<240){q=j;if((g-q|0)<3){m=j;break L1517}p=a[j+1|0]|0;r=a[j+2|0]|0;if((l|0)==224){if((p&-32)<<24>>24!=-96){s=1201;break L1519}}else if((l|0)==237){if((p&-32)<<24>>24!=-128){s=1203;break L1519}}else{if((p&-64)<<24>>24!=-128){s=1205;break L1519}}t=r&255;if((t&192|0)!=128){m=j;break L1517}if(((p&255)<<6&4032|l<<12&61440|t&63)>>>0>f>>>0){m=j;break L1517}n=j+3|0;o=i;break}if((k&255)>=245){m=j;break L1517}u=j;if((g-u|0)<4){m=j;break L1517}if((e-i|0)>>>0<2){m=j;break L1517}t=a[j+1|0]|0;p=a[j+2|0]|0;r=a[j+3|0]|0;if((l|0)==244){if((t&-16)<<24>>24!=-128){s=1216;break L1519}}else if((l|0)==240){if((t+112&255)>=48){s=1214;break L1519}}else{if((t&-64)<<24>>24!=-128){s=1218;break L1519}}v=p&255;if((v&192|0)!=128){m=j;break L1517}p=r&255;if((p&192|0)!=128){m=j;break L1517}if(((t&255)<<12&258048|l<<18&1835008|v<<6&4032|p&63)>>>0>f>>>0){m=j;break L1517}n=j+4|0;o=i+1|0}}while(0);l=o+1|0;if(n>>>0<c>>>0&l>>>0<e>>>0){i=l;j=n}else{m=n;break L1517}}if((s|0)==1201){w=q-b|0;return w|0}else if((s|0)==1203){w=q-b|0;return w|0}else if((s|0)==1205){w=q-b|0;return w|0}else if((s|0)==1216){w=u-b|0;return w|0}else if((s|0)==1214){w=u-b|0;return w|0}else if((s|0)==1218){w=u-b|0;return w|0}}else{m=h}}while(0);w=m-b|0;return w|0}function mt(a){a=a|0;return 4}function mu(a){a=a|0;gd(a|0);nU(a);return}function mv(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=mw(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d>>2<<2);c[j>>2]=g+((c[k>>2]|0)-g);i=b;return l|0}function mw(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0;c[e>>2]=b;c[h>>2]=f;do{if((j&2|0)!=0){if((g-f|0)<3){k=1;return k|0}else{c[h>>2]=f+1;a[f]=-17;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-69;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=-65;break}}}while(0);f=c[e>>2]|0;if(f>>>0>=d>>>0){k=0;return k|0}j=g;g=f;L1583:while(1){f=c[g>>2]|0;if((f&-2048|0)==55296|f>>>0>i>>>0){k=2;l=1257;break}do{if(f>>>0<128){b=c[h>>2]|0;if((j-b|0)<1){k=1;l=1259;break L1583}c[h>>2]=b+1;a[b]=f&255}else{if(f>>>0<2048){b=c[h>>2]|0;if((j-b|0)<2){k=1;l=1262;break L1583}c[h>>2]=b+1;a[b]=(f>>>6|192)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f&63|128)&255;break}b=c[h>>2]|0;m=j-b|0;if(f>>>0<65536){if((m|0)<3){k=1;l=1260;break L1583}c[h>>2]=b+1;a[b]=(f>>>12|224)&255;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=(f>>>6&63|128)&255;n=c[h>>2]|0;c[h>>2]=n+1;a[n]=(f&63|128)&255;break}else{if((m|0)<4){k=1;l=1261;break L1583}c[h>>2]=b+1;a[b]=(f>>>18|240)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f>>>12&63|128)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f>>>6&63|128)&255;b=c[h>>2]|0;c[h>>2]=b+1;a[b]=(f&63|128)&255;break}}}while(0);f=(c[e>>2]|0)+4|0;c[e>>2]=f;if(f>>>0<d>>>0){g=f}else{k=0;l=1255;break}}if((l|0)==1257){return k|0}else if((l|0)==1259){return k|0}else if((l|0)==1261){return k|0}else if((l|0)==1262){return k|0}else if((l|0)==1260){return k|0}else if((l|0)==1255){return k|0}return 0}function mx(a,b,d,e,f,g,h,j){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0;b=i;i=i+16|0;a=b|0;k=b+8|0;c[a>>2]=d;c[k>>2]=g;l=my(d,e,a,g,h,k,1114111,0)|0;c[f>>2]=d+((c[a>>2]|0)-d);c[j>>2]=g+((c[k>>2]|0)-g>>2<<2);i=b;return l|0}function my(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;c[f>>2]=b;c[i>>2]=g;g=c[f>>2]|0;do{if((k&4|0)==0){l=g}else{if((e-g|0)<=2){l=g;break}if((a[g]|0)!=-17){l=g;break}if((a[g+1|0]|0)!=-69){l=g;break}if((a[g+2|0]|0)!=-65){l=g;break}b=g+3|0;c[f>>2]=b;l=b}}while(0);L1616:do{if(l>>>0<e>>>0){g=e;k=c[i>>2]|0;b=l;L1618:while(1){if(k>>>0>=h>>>0){m=b;break L1616}n=a[b]|0;o=n&255;do{if(n<<24>>24>-1){if(o>>>0>j>>>0){p=2;q=1311;break L1618}c[k>>2]=o;c[f>>2]=(c[f>>2]|0)+1}else{if((n&255)<194){p=2;q=1310;break L1618}if((n&255)<224){if((g-b|0)<2){p=1;q=1320;break L1618}r=d[b+1|0]|0;if((r&192|0)!=128){p=2;q=1307;break L1618}s=r&63|o<<6&1984;if(s>>>0>j>>>0){p=2;q=1308;break L1618}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+2;break}if((n&255)<240){if((g-b|0)<3){p=1;q=1312;break L1618}s=a[b+1|0]|0;r=a[b+2|0]|0;if((o|0)==224){if((s&-32)<<24>>24!=-96){p=2;q=1305;break L1618}}else if((o|0)==237){if((s&-32)<<24>>24!=-128){p=2;q=1321;break L1618}}else{if((s&-64)<<24>>24!=-128){p=2;q=1309;break L1618}}t=r&255;if((t&192|0)!=128){p=2;q=1319;break L1618}r=(s&255)<<6&4032|o<<12&61440|t&63;if(r>>>0>j>>>0){p=2;q=1306;break L1618}c[k>>2]=r;c[f>>2]=(c[f>>2]|0)+3;break}if((n&255)>=245){p=2;q=1313;break L1618}if((g-b|0)<4){p=1;q=1318;break L1618}r=a[b+1|0]|0;t=a[b+2|0]|0;s=a[b+3|0]|0;if((o|0)==240){if((r+112&255)>=48){p=2;q=1304;break L1618}}else if((o|0)==244){if((r&-16)<<24>>24!=-128){p=2;q=1316;break L1618}}else{if((r&-64)<<24>>24!=-128){p=2;q=1317;break L1618}}u=t&255;if((u&192|0)!=128){p=2;q=1323;break L1618}t=s&255;if((t&192|0)!=128){p=2;q=1322;break L1618}s=(r&255)<<12&258048|o<<18&1835008|u<<6&4032|t&63;if(s>>>0>j>>>0){p=2;q=1314;break L1618}c[k>>2]=s;c[f>>2]=(c[f>>2]|0)+4}}while(0);o=(c[i>>2]|0)+4|0;c[i>>2]=o;n=c[f>>2]|0;if(n>>>0<e>>>0){k=o;b=n}else{m=n;break L1616}}if((q|0)==1308){return p|0}else if((q|0)==1309){return p|0}else if((q|0)==1310){return p|0}else if((q|0)==1311){return p|0}else if((q|0)==1312){return p|0}else if((q|0)==1313){return p|0}else if((q|0)==1314){return p|0}else if((q|0)==1316){return p|0}else if((q|0)==1317){return p|0}else if((q|0)==1318){return p|0}else if((q|0)==1319){return p|0}else if((q|0)==1320){return p|0}else if((q|0)==1304){return p|0}else if((q|0)==1305){return p|0}else if((q|0)==1306){return p|0}else if((q|0)==1307){return p|0}else if((q|0)==1321){return p|0}else if((q|0)==1322){return p|0}else if((q|0)==1323){return p|0}}else{m=l}}while(0);p=m>>>0<e>>>0|0;return p|0}function mz(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3}function mA(a){a=a|0;return 0}function mB(a){a=a|0;return 0}function mC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return mD(c,d,e,1114111,0)|0}function mD(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;do{if((g&4|0)==0){h=b}else{if((c-b|0)<=2){h=b;break}if((a[b]|0)!=-17){h=b;break}if((a[b+1|0]|0)!=-69){h=b;break}h=(a[b+2|0]|0)==-65?b+3|0:b}}while(0);L1687:do{if(h>>>0<c>>>0&(e|0)!=0){g=c;i=1;j=h;L1689:while(1){k=a[j]|0;l=k&255;do{if(k<<24>>24>-1){if(l>>>0>f>>>0){m=j;break L1687}n=j+1|0}else{if((k&255)<194){m=j;break L1687}if((k&255)<224){if((g-j|0)<2){m=j;break L1687}o=d[j+1|0]|0;if((o&192|0)!=128){m=j;break L1687}if((o&63|l<<6&1984)>>>0>f>>>0){m=j;break L1687}n=j+2|0;break}if((k&255)<240){p=j;if((g-p|0)<3){m=j;break L1687}o=a[j+1|0]|0;q=a[j+2|0]|0;if((l|0)==224){if((o&-32)<<24>>24!=-96){r=1348;break L1689}}else if((l|0)==237){if((o&-32)<<24>>24!=-128){r=1350;break L1689}}else{if((o&-64)<<24>>24!=-128){r=1352;break L1689}}s=q&255;if((s&192|0)!=128){m=j;break L1687}if(((o&255)<<6&4032|l<<12&61440|s&63)>>>0>f>>>0){m=j;break L1687}n=j+3|0;break}if((k&255)>=245){m=j;break L1687}t=j;if((g-t|0)<4){m=j;break L1687}s=a[j+1|0]|0;o=a[j+2|0]|0;q=a[j+3|0]|0;if((l|0)==240){if((s+112&255)>=48){r=1360;break L1689}}else if((l|0)==244){if((s&-16)<<24>>24!=-128){r=1362;break L1689}}else{if((s&-64)<<24>>24!=-128){r=1364;break L1689}}u=o&255;if((u&192|0)!=128){m=j;break L1687}o=q&255;if((o&192|0)!=128){m=j;break L1687}if(((s&255)<<12&258048|l<<18&1835008|u<<6&4032|o&63)>>>0>f>>>0){m=j;break L1687}n=j+4|0}}while(0);if(!(n>>>0<c>>>0&i>>>0<e>>>0)){m=n;break L1687}i=i+1|0;j=n}if((r|0)==1348){v=p-b|0;return v|0}else if((r|0)==1350){v=p-b|0;return v|0}else if((r|0)==1352){v=p-b|0;return v|0}else if((r|0)==1360){v=t-b|0;return v|0}else if((r|0)==1362){v=t-b|0;return v|0}else if((r|0)==1364){v=t-b|0;return v|0}}else{m=h}}while(0);v=m-b|0;return v|0}function mE(a){a=a|0;return 4}function mF(a){a=a|0;gd(a|0);nU(a);return}function mG(a){a=a|0;gd(a|0);nU(a);return}function mH(a){a=a|0;c[a>>2]=4984;gI(a+12|0);gd(a|0);nU(a);return}function mI(a){a=a|0;c[a>>2]=4984;gI(a+12|0);gd(a|0);return}function mJ(a){a=a|0;c[a>>2]=4936;gI(a+16|0);gd(a|0);nU(a);return}function mK(a){a=a|0;c[a>>2]=4936;gI(a+16|0);gd(a|0);return}function mL(b){b=b|0;return a[b+8|0]|0}function mM(a){a=a|0;return c[a+8>>2]|0}function mN(b){b=b|0;return a[b+9|0]|0}function mO(a){a=a|0;return c[a+12>>2]|0}function mP(a,b){a=a|0;b=b|0;gF(a,b+12|0);return}function mQ(a,b){a=a|0;b=b|0;gF(a,b+16|0);return}function mR(a,b){a=a|0;b=b|0;gG(a,2512,4);return}function mS(a,b){a=a|0;b=b|0;gT(a,2456,nn(2456)|0);return}function mT(a,b){a=a|0;b=b|0;gG(a,2448,5);return}function mU(a,b){a=a|0;b=b|0;gT(a,2424,nn(2424)|0);return}function mV(b){b=b|0;var d=0;if((a[17776]|0)!=0){d=c[4012]|0;return d|0}if((bT(17776)|0)==0){d=c[4012]|0;return d|0}do{if((a[17664]|0)==0){if((bT(17664)|0)==0){break}n0(15088,0,168);bx(392,0,u|0)|0}}while(0);x=0,aF(36,15088,3280)|0;do{if(!x){x=0,aF(36,15100,3272)|0;if(x){x=0;break}x=0,aF(36,15112,3256)|0;if(x){x=0;break}x=0,aF(36,15124,3240)|0;if(x){x=0;break}x=0,aF(36,15136,3224)|0;if(x){x=0;break}x=0,aF(36,15148,3200)|0;if(x){x=0;break}x=0,aF(36,15160,3184)|0;if(x){x=0;break}x=0,aF(36,15172,3160)|0;if(x){x=0;break}x=0,aF(36,15184,3152)|0;if(x){x=0;break}x=0,aF(36,15196,3120)|0;if(x){x=0;break}x=0,aF(36,15208,3112)|0;if(x){x=0;break}x=0,aF(36,15220,3080)|0;if(x){x=0;break}x=0,aF(36,15232,3056)|0;if(x){x=0;break}x=0,aF(36,15244,3048)|0;if(x){x=0;break}c[4012]=15088;d=c[4012]|0;return d|0}else{x=0}}while(0);d=cu(-1,-1)|0;bk(d|0);return 0}function mW(b){b=b|0;var d=0;if((a[17720]|0)!=0){d=c[3990]|0;return d|0}if((bT(17720)|0)==0){d=c[3990]|0;return d|0}do{if((a[17640]|0)==0){if((bT(17640)|0)==0){break}n0(14344,0,168);bx(232,0,u|0)|0}}while(0);x=0,aF(44,14344,3752)|0;do{if(!x){x=0,aF(44,14356,3720)|0;if(x){x=0;break}x=0,aF(44,14368,3672)|0;if(x){x=0;break}x=0,aF(44,14380,3632)|0;if(x){x=0;break}x=0,aF(44,14392,3552)|0;if(x){x=0;break}x=0,aF(44,14404,3520)|0;if(x){x=0;break}x=0,aF(44,14416,3480)|0;if(x){x=0;break}x=0,aF(44,14428,3464)|0;if(x){x=0;break}x=0,aF(44,14440,3408)|0;if(x){x=0;break}x=0,aF(44,14452,3384)|0;if(x){x=0;break}x=0,aF(44,14464,3368)|0;if(x){x=0;break}x=0,aF(44,14476,3352)|0;if(x){x=0;break}x=0,aF(44,14488,3328)|0;if(x){x=0;break}x=0,aF(44,14500,3312)|0;if(x){x=0;break}c[3990]=14344;d=c[3990]|0;return d|0}else{x=0}}while(0);d=cu(-1,-1)|0;bk(d|0);return 0}function mX(b){b=b|0;var d=0;if((a[17768]|0)!=0){d=c[4010]|0;return d|0}if((bT(17768)|0)==0){d=c[4010]|0;return d|0}do{if((a[17656]|0)==0){if((bT(17656)|0)==0){break}n0(14800,0,288);bx(252,0,u|0)|0}}while(0);x=0,aF(36,14800,480)|0;do{if(!x){x=0,aF(36,14812,448)|0;if(x){x=0;break}x=0,aF(36,14824,440)|0;if(x){x=0;break}x=0,aF(36,14836,400)|0;if(x){x=0;break}x=0,aF(36,14848,392)|0;if(x){x=0;break}x=0,aF(36,14860,360)|0;if(x){x=0;break}x=0,aF(36,14872,352)|0;if(x){x=0;break}x=0,aF(36,14884,344)|0;if(x){x=0;break}x=0,aF(36,14896,312)|0;if(x){x=0;break}x=0,aF(36,14908,224)|0;if(x){x=0;break}x=0,aF(36,14920,208)|0;if(x){x=0;break}x=0,aF(36,14932,192)|0;if(x){x=0;break}x=0,aF(36,14944,184)|0;if(x){x=0;break}x=0,aF(36,14956,160)|0;if(x){x=0;break}x=0,aF(36,14968,152)|0;if(x){x=0;break}x=0,aF(36,14980,128)|0;if(x){x=0;break}x=0,aF(36,14992,392)|0;if(x){x=0;break}x=0,aF(36,15004,120)|0;if(x){x=0;break}x=0,aF(36,15016,112)|0;if(x){x=0;break}x=0,aF(36,15028,3824)|0;if(x){x=0;break}x=0,aF(36,15040,3816)|0;if(x){x=0;break}x=0,aF(36,15052,3808)|0;if(x){x=0;break}x=0,aF(36,15064,3800)|0;if(x){x=0;break}x=0,aF(36,15076,3792)|0;if(x){x=0;break}c[4010]=14800;d=c[4010]|0;return d|0}else{x=0}}while(0);d=cu(-1,-1)|0;bk(d|0);return 0}function mY(b){b=b|0;var d=0;if((a[17712]|0)!=0){d=c[3988]|0;return d|0}if((bT(17712)|0)==0){d=c[3988]|0;return d|0}do{if((a[17632]|0)==0){if((bT(17632)|0)==0){break}n0(14056,0,288);bx(192,0,u|0)|0}}while(0);x=0,aF(44,14056,1240)|0;do{if(!x){x=0,aF(44,14068,1200)|0;if(x){x=0;break}x=0,aF(44,14080,1120)|0;if(x){x=0;break}x=0,aF(44,14092,1056)|0;if(x){x=0;break}x=0,aF(44,14104,680)|0;if(x){x=0;break}x=0,aF(44,14116,1032)|0;if(x){x=0;break}x=0,aF(44,14128,1008)|0;if(x){x=0;break}x=0,aF(44,14140,976)|0;if(x){x=0;break}x=0,aF(44,14152,920)|0;if(x){x=0;break}x=0,aF(44,14164,888)|0;if(x){x=0;break}x=0,aF(44,14176,832)|0;if(x){x=0;break}x=0,aF(44,14188,792)|0;if(x){x=0;break}x=0,aF(44,14200,768)|0;if(x){x=0;break}x=0,aF(44,14212,728)|0;if(x){x=0;break}x=0,aF(44,14224,712)|0;if(x){x=0;break}x=0,aF(44,14236,696)|0;if(x){x=0;break}x=0,aF(44,14248,680)|0;if(x){x=0;break}x=0,aF(44,14260,656)|0;if(x){x=0;break}x=0,aF(44,14272,624)|0;if(x){x=0;break}x=0,aF(44,14284,608)|0;if(x){x=0;break}x=0,aF(44,14296,544)|0;if(x){x=0;break}x=0,aF(44,14308,528)|0;if(x){x=0;break}x=0,aF(44,14320,512)|0;if(x){x=0;break}x=0,aF(44,14332,488)|0;if(x){x=0;break}c[3988]=14056;d=c[3988]|0;return d|0}else{x=0}}while(0);d=cu(-1,-1)|0;bk(d|0);return 0}function mZ(b){b=b|0;var d=0,e=0,f=0;if((a[17784]|0)!=0){d=c[4014]|0;return d|0}if((bT(17784)|0)==0){d=c[4014]|0;return d|0}do{if((a[17672]|0)==0){if((bT(17672)|0)==0){break}n0(15256,0,288);bx(190,0,u|0)|0}}while(0);x=0,aF(36,15256,1320)|0;if(x){x=0;e=cu(-1,-1)|0;f=K;bk(e|0)}x=0,aF(36,15268,1296)|0;if(x){x=0;e=cu(-1,-1)|0;f=K;bk(e|0)}c[4014]=15256;d=c[4014]|0;return d|0}function m_(b){b=b|0;var d=0,e=0,f=0;if((a[17728]|0)!=0){d=c[3992]|0;return d|0}if((bT(17728)|0)==0){d=c[3992]|0;return d|0}do{if((a[17648]|0)==0){if((bT(17648)|0)==0){break}n0(14512,0,288);bx(354,0,u|0)|0}}while(0);x=0,aF(44,14512,1344)|0;if(x){x=0;e=cu(-1,-1)|0;f=K;bk(e|0)}x=0,aF(44,14524,1328)|0;if(x){x=0;e=cu(-1,-1)|0;f=K;bk(e|0)}c[3992]=14512;d=c[3992]|0;return d|0}function m$(b){b=b|0;if((a[17792]|0)!=0){return 16064}if((bT(17792)|0)==0){return 16064}x=0;aJ(36,16064,2360,8);if(x){x=0;b=cu(-1,-1)|0;bk(b|0)}bx(384,16064,u|0)|0;return 16064}function m0(b){b=b|0;var c=0,d=0;if((a[17736]|0)!=0){return 15976}if((bT(17736)|0)==0){return 15976}b=(x=0,as(84,2320)|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}x=0;aJ(24,15976,2320,b|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}bx(280,15976,u|0)|0;return 15976}function m1(b){b=b|0;if((a[17816]|0)!=0){return 16112}if((bT(17816)|0)==0){return 16112}x=0;aJ(36,16112,2272,8);if(x){x=0;b=cu(-1,-1)|0;bk(b|0)}bx(384,16112,u|0)|0;return 16112}function m2(b){b=b|0;var c=0,d=0;if((a[17760]|0)!=0){return 16024}if((bT(17760)|0)==0){return 16024}b=(x=0,as(84,2184)|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}x=0;aJ(24,16024,2184,b|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}bx(280,16024,u|0)|0;return 16024}function m3(b){b=b|0;if((a[17808]|0)!=0){return 16096}if((bT(17808)|0)==0){return 16096}x=0;aJ(36,16096,2072,20);if(x){x=0;b=cu(-1,-1)|0;bk(b|0)}bx(384,16096,u|0)|0;return 16096}function m4(b){b=b|0;var c=0,d=0;if((a[17752]|0)!=0){return 16008}if((bT(17752)|0)==0){return 16008}b=(x=0,as(84,1952)|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}x=0;aJ(24,16008,1952,b|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}bx(280,16008,u|0)|0;return 16008}function m5(b){b=b|0;if((a[17800]|0)!=0){return 16080}if((bT(17800)|0)==0){return 16080}x=0;aJ(36,16080,1896,11);if(x){x=0;b=cu(-1,-1)|0;bk(b|0)}bx(384,16080,u|0)|0;return 16080}function m6(b){b=b|0;var c=0,d=0;if((a[17744]|0)!=0){return 15992}if((bT(17744)|0)==0){return 15992}b=(x=0,as(84,1784)|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}x=0;aJ(24,15992,1784,b|0);if(x){x=0;c=cu(-1,-1)|0;d=K;bk(c|0)}bx(280,15992,u|0)|0;return 15992}function m7(a){a=a|0;var b=0,d=0,e=0,f=0;b=a+4|0;d=(c[a>>2]|0)+(c[b+4>>2]|0)|0;a=d;e=c[b>>2]|0;if((e&1|0)==0){f=e;dw[f&511](a);return}else{f=c[(c[d>>2]|0)+(e-1)>>2]|0;dw[f&511](a);return}}function m8(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=b+8|0;f=b+4|0;g=c[f>>2]|0;h=c[e>>2]|0;i=g;if(h-i>>2>>>0>=d>>>0){j=d;k=g;do{if((k|0)==0){l=0}else{c[k>>2]=0;l=c[f>>2]|0}k=l+4|0;c[f>>2]=k;j=j-1|0;}while((j|0)!=0);return}j=b+16|0;k=b|0;l=c[k>>2]|0;g=i-l>>2;i=g+d|0;if(i>>>0>1073741823){lu(0)}m=h-l|0;do{if(m>>2>>>0>536870910){n=1073741823;o=1647}else{l=m>>1;h=l>>>0<i>>>0?i:l;if((h|0)==0){p=0;q=0;break}l=b+128|0;if(!((a[l]&1)==0&h>>>0<29)){n=h;o=1647;break}a[l]=1;p=j;q=h}}while(0);if((o|0)==1647){p=nS(n<<2)|0;q=n}n=d;d=p+(g<<2)|0;do{if((d|0)==0){r=0}else{c[d>>2]=0;r=d}d=r+4|0;n=n-1|0;}while((n|0)!=0);n=p+(q<<2)|0;q=c[k>>2]|0;r=(c[f>>2]|0)-q|0;o=p+(g-(r>>2)<<2)|0;g=o;p=q;n4(g|0,p|0,r)|0;c[k>>2]=o;c[f>>2]=d;c[e>>2]=n;if((q|0)==0){return}if((q|0)==(j|0)){a[b+128|0]=0;return}else{nU(p);return}}function m9(a){a=a|0;gV(14788);gV(14776);gV(14764);gV(14752);gV(14740);gV(14728);gV(14716);gV(14704);gV(14692);gV(14680);gV(14668);gV(14656);gV(14644);gV(14632);gV(14620);gV(14608);gV(14596);gV(14584);gV(14572);gV(14560);gV(14548);gV(14536);gV(14524);gV(14512);return}function na(a){a=a|0;gI(15532);gI(15520);gI(15508);gI(15496);gI(15484);gI(15472);gI(15460);gI(15448);gI(15436);gI(15424);gI(15412);gI(15400);gI(15388);gI(15376);gI(15364);gI(15352);gI(15340);gI(15328);gI(15316);gI(15304);gI(15292);gI(15280);gI(15268);gI(15256);return}function nb(a){a=a|0;gV(14332);gV(14320);gV(14308);gV(14296);gV(14284);gV(14272);gV(14260);gV(14248);gV(14236);gV(14224);gV(14212);gV(14200);gV(14188);gV(14176);gV(14164);gV(14152);gV(14140);gV(14128);gV(14116);gV(14104);gV(14092);gV(14080);gV(14068);gV(14056);return}function nc(a){a=a|0;gI(15076);gI(15064);gI(15052);gI(15040);gI(15028);gI(15016);gI(15004);gI(14992);gI(14980);gI(14968);gI(14956);gI(14944);gI(14932);gI(14920);gI(14908);gI(14896);gI(14884);gI(14872);gI(14860);gI(14848);gI(14836);gI(14824);gI(14812);gI(14800);return}function nd(a){a=a|0;gV(14500);gV(14488);gV(14476);gV(14464);gV(14452);gV(14440);gV(14428);gV(14416);gV(14404);gV(14392);gV(14380);gV(14368);gV(14356);gV(14344);return}function ne(a){a=a|0;gI(15244);gI(15232);gI(15220);gI(15208);gI(15196);gI(15184);gI(15172);gI(15160);gI(15148);gI(15136);gI(15124);gI(15112);gI(15100);gI(15088);return}function nf(a,b,c){a=a|0;b=b|0;c=c|0;return ng(0,a,b,(c|0)!=0?c:13576)|0}function ng(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,t=0,u=0,v=0,w=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;j=((f|0)==0?13568:f)|0;f=c[j>>2]|0;L2072:do{if((d|0)==0){if((f|0)==0){k=0}else{break}i=g;return k|0}else{if((b|0)==0){l=h;c[h>>2]=l;m=l}else{m=b}if((e|0)==0){k=-2;i=g;return k|0}do{if((f|0)==0){l=a[d]|0;n=l&255;if(l<<24>>24>-1){c[m>>2]=n;k=l<<24>>24!=0|0;i=g;return k|0}else{l=n-194|0;if(l>>>0>50){break L2072}o=d+1|0;p=c[s+(l<<2)>>2]|0;q=e-1|0;break}}else{o=d;p=f;q=e}}while(0);L2088:do{if((q|0)==0){r=p}else{l=a[o]|0;n=(l&255)>>>3;if((n-16|n+(p>>26))>>>0>7){break L2072}else{t=o;u=p;v=q;w=l}while(1){t=t+1|0;u=(w&255)-128|u<<6;v=v-1|0;if((u|0)>=0){break}if((v|0)==0){r=u;break L2088}w=a[t]|0;if(((w&255)-128|0)>>>0>63){break L2072}}c[j>>2]=0;c[m>>2]=u;k=e-v|0;i=g;return k|0}}while(0);c[j>>2]=r;k=-2;i=g;return k|0}}while(0);c[j>>2]=0;c[(bt()|0)>>2]=84;k=-1;i=g;return k|0}function nh(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;g=i;i=i+1032|0;h=g|0;j=g+1024|0;k=c[b>>2]|0;c[j>>2]=k;l=(a|0)!=0;m=l?e:256;e=l?a:h|0;L2103:do{if((k|0)==0|(m|0)==0){n=0;o=d;p=m;q=e;r=k}else{a=h|0;s=m;t=d;u=0;v=e;w=k;while(1){x=t>>>2;y=x>>>0>=s>>>0;if(!(y|t>>>0>131)){n=u;o=t;p=s;q=v;r=w;break L2103}z=y?s:x;A=t-z|0;x=ni(v,j,z,f)|0;if((x|0)==-1){break}if((v|0)==(a|0)){B=a;C=s}else{B=v+(x<<2)|0;C=s-x|0}z=x+u|0;x=c[j>>2]|0;if((x|0)==0|(C|0)==0){n=z;o=A;p=C;q=B;r=x;break L2103}else{s=C;t=A;u=z;v=B;w=x}}n=-1;o=A;p=0;q=v;r=c[j>>2]|0}}while(0);L2114:do{if((r|0)==0){D=n}else{if((p|0)==0|(o|0)==0){D=n;break}else{E=p;F=o;G=n;H=q;I=r}while(1){J=ng(H,I,F,f)|0;if((J+2|0)>>>0<3){break}A=(c[j>>2]|0)+J|0;c[j>>2]=A;B=E-1|0;C=G+1|0;if((B|0)==0|(F|0)==(J|0)){D=C;break L2114}else{E=B;F=F-J|0;G=C;H=H+4|0;I=A}}if((J|0)==0){c[j>>2]=0;D=G;break}else if((J|0)==(-1|0)){D=-1;break}else{c[f>>2]=0;D=G;break}}}while(0);if(!l){i=g;return D|0}c[b>>2]=c[j>>2];i=g;return D|0}function ni(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0;h=c[e>>2]|0;do{if((g|0)==0){i=1717}else{j=g|0;k=c[j>>2]|0;if((k|0)==0){i=1717;break}if((b|0)==0){l=k;m=h;n=f;i=1728;break}c[j>>2]=0;o=k;p=h;q=b;r=f;i=1748}}while(0);if((i|0)==1717){if((b|0)==0){t=h;u=f;i=1719}else{v=h;w=b;x=f;i=1718}}L2135:while(1){if((i|0)==1719){i=0;h=a[t]|0;do{if(((h&255)-1|0)>>>0<127){if((t&3|0)!=0){y=t;z=u;A=h;break}g=c[t>>2]|0;if(((g-16843009|g)&-2139062144|0)==0){B=u;C=t}else{y=t;z=u;A=g&255;break}do{C=C+4|0;B=B-4|0;D=c[C>>2]|0;}while(((D-16843009|D)&-2139062144|0)==0);y=C;z=B;A=D&255}else{y=t;z=u;A=h}}while(0);h=A&255;if((h-1|0)>>>0<127){t=y+1|0;u=z-1|0;i=1719;continue}g=h-194|0;if(g>>>0>50){E=z;F=b;G=y;i=1759;break}l=c[s+(g<<2)>>2]|0;m=y+1|0;n=z;i=1728;continue}else if((i|0)==1748){i=0;g=d[p]|0;h=g>>>3;if((h-16|h+(o>>26))>>>0>7){i=1749;break}h=p+1|0;H=g-128|o<<6;do{if((H|0)<0){g=(d[h]|0)-128|0;if(g>>>0>63){i=1752;break L2135}k=p+2|0;I=g|H<<6;if((I|0)>=0){J=I;K=k;break}g=(d[k]|0)-128|0;if(g>>>0>63){i=1755;break L2135}J=g|I<<6;K=p+3|0}else{J=H;K=h}}while(0);c[q>>2]=J;v=K;w=q+4|0;x=r-1|0;i=1718;continue}else if((i|0)==1718){i=0;if((x|0)==0){L=f;i=1767;break}else{M=x;N=w;O=v}while(1){h=a[O]|0;do{if(((h&255)-1|0)>>>0<127){if((O&3|0)==0&M>>>0>3){P=M;Q=N;R=O}else{S=O;T=N;U=M;V=h;break}while(1){W=c[R>>2]|0;if(((W-16843009|W)&-2139062144|0)!=0){i=1742;break}c[Q>>2]=W&255;c[Q+4>>2]=d[R+1|0]|0;c[Q+8>>2]=d[R+2|0]|0;X=R+4|0;Y=Q+16|0;c[Q+12>>2]=d[R+3|0]|0;Z=P-4|0;if(Z>>>0>3){P=Z;Q=Y;R=X}else{i=1743;break}}if((i|0)==1742){i=0;S=R;T=Q;U=P;V=W&255;break}else if((i|0)==1743){i=0;S=X;T=Y;U=Z;V=a[X]|0;break}}else{S=O;T=N;U=M;V=h}}while(0);_=V&255;if((_-1|0)>>>0>=127){break}c[T>>2]=_;h=U-1|0;if((h|0)==0){L=f;i=1766;break L2135}else{M=h;N=T+4|0;O=S+1|0}}h=_-194|0;if(h>>>0>50){E=U;F=T;G=S;i=1759;break}o=c[s+(h<<2)>>2]|0;p=S+1|0;q=T;r=U;i=1748;continue}else if((i|0)==1728){i=0;h=(d[m]|0)>>>3;if((h-16|h+(l>>26))>>>0>7){i=1729;break}h=m+1|0;do{if((l&33554432|0)==0){$=h}else{if(((d[h]|0)-128|0)>>>0>63){i=1732;break L2135}g=m+2|0;if((l&524288|0)==0){$=g;break}if(((d[g]|0)-128|0)>>>0>63){i=1735;break L2135}$=m+3|0}}while(0);t=$;u=n-1|0;i=1719;continue}}if((i|0)==1729){aa=l;ab=m-1|0;ac=b;ad=n;i=1758}else if((i|0)==1749){aa=o;ab=p-1|0;ac=q;ad=r;i=1758}else if((i|0)==1755){aa=I;ab=p-1|0;ac=q;ad=r;i=1758}else if((i|0)==1752){aa=H;ab=p-1|0;ac=q;ad=r;i=1758}else if((i|0)==1766){return L|0}else if((i|0)==1767){return L|0}else if((i|0)==1735){aa=l;ab=m-1|0;ac=b;ad=n;i=1758}else if((i|0)==1732){aa=l;ab=m-1|0;ac=b;ad=n;i=1758}if((i|0)==1758){if((aa|0)==0){E=ad;F=ac;G=ab;i=1759}else{ae=ac;af=ab}}do{if((i|0)==1759){if((a[G]|0)!=0){ae=F;af=G;break}if((F|0)!=0){c[F>>2]=0;c[e>>2]=0}L=f-E|0;return L|0}}while(0);c[(bt()|0)>>2]=84;if((ae|0)==0){L=-1;return L|0}c[e>>2]=af;L=-1;return L|0}function nj(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0;g=i;i=i+8|0;h=g|0;c[h>>2]=b;if((e|0)==0){j=0;i=g;return j|0}do{if((f|0)!=0){if((b|0)==0){k=h;c[h>>2]=k;l=k}else{l=b}k=a[e]|0;m=k&255;if(k<<24>>24>-1){c[l>>2]=m;j=k<<24>>24!=0|0;i=g;return j|0}k=m-194|0;if(k>>>0>50){break}m=e+1|0;n=c[s+(k<<2)>>2]|0;if(f>>>0<4){if((n&-2147483648>>>(((f*6|0)-6|0)>>>0)|0)!=0){break}}k=d[m]|0;m=k>>>3;if((m-16|m+(n>>26))>>>0>7){break}m=k-128|n<<6;if((m|0)>=0){c[l>>2]=m;j=2;i=g;return j|0}n=(d[e+2|0]|0)-128|0;if(n>>>0>63){break}k=n|m<<6;if((k|0)>=0){c[l>>2]=k;j=3;i=g;return j|0}m=(d[e+3|0]|0)-128|0;if(m>>>0>63){break}c[l>>2]=m|k<<6;j=4;i=g;return j|0}}while(0);c[(bt()|0)>>2]=84;j=-1;i=g;return j|0}function nk(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;if((b|0)==0){f=1;return f|0}if(d>>>0<128){a[b]=d&255;f=1;return f|0}if(d>>>0<2048){a[b]=(d>>>6|192)&255;a[b+1|0]=(d&63|128)&255;f=2;return f|0}if(d>>>0<55296|(d-57344|0)>>>0<8192){a[b]=(d>>>12|224)&255;a[b+1|0]=(d>>>6&63|128)&255;a[b+2|0]=(d&63|128)&255;f=3;return f|0}if((d-65536|0)>>>0<1048576){a[b]=(d>>>18|240)&255;a[b+1|0]=(d>>>12&63|128)&255;a[b+2|0]=(d>>>6&63|128)&255;a[b+3|0]=(d&63|128)&255;f=4;return f|0}else{c[(bt()|0)>>2]=84;f=-1;return f|0}return 0}function nl(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;f=i;i=i+264|0;g=f|0;h=f+256|0;j=c[b>>2]|0;c[h>>2]=j;k=(a|0)!=0;l=k?e:256;e=k?a:g|0;L2256:do{if((j|0)==0|(l|0)==0){m=0;n=d;o=l;p=e;q=j}else{a=g|0;r=l;s=d;t=0;u=e;v=j;while(1){w=s>>>0>=r>>>0;if(!(w|s>>>0>32)){m=t;n=s;o=r;p=u;q=v;break L2256}x=w?r:s;y=s-x|0;w=nm(u,h,x,0)|0;if((w|0)==-1){break}if((u|0)==(a|0)){z=a;A=r}else{z=u+w|0;A=r-w|0}x=w+t|0;w=c[h>>2]|0;if((w|0)==0|(A|0)==0){m=x;n=y;o=A;p=z;q=w;break L2256}else{r=A;s=y;t=x;u=z;v=w}}m=-1;n=y;o=0;p=u;q=c[h>>2]|0}}while(0);L2267:do{if((q|0)==0){B=m}else{if((o|0)==0|(n|0)==0){B=m;break}else{C=o;D=n;E=m;F=p;G=q}while(1){H=nk(F,c[G>>2]|0,0)|0;if((H+1|0)>>>0<2){break}y=(c[h>>2]|0)+4|0;c[h>>2]=y;z=D-1|0;A=E+1|0;if((C|0)==(H|0)|(z|0)==0){B=A;break L2267}else{C=C-H|0;D=z;E=A;F=F+H|0;G=y}}if((H|0)!=0){B=-1;break}c[h>>2]=0;B=E}}while(0);if(!k){i=f;return B|0}c[b>>2]=c[h>>2];i=f;return B|0}function nm(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;f=i;i=i+8|0;g=f|0;if((b|0)==0){h=c[d>>2]|0;j=g|0;k=c[h>>2]|0;if((k|0)==0){l=0;i=f;return l|0}else{m=0;n=h;o=k}while(1){if(o>>>0>127){k=nk(j,o,0)|0;if((k|0)==-1){l=-1;p=1864;break}else{q=k}}else{q=1}k=q+m|0;h=n+4|0;r=c[h>>2]|0;if((r|0)==0){l=k;p=1860;break}else{m=k;n=h;o=r}}if((p|0)==1864){i=f;return l|0}else if((p|0)==1860){i=f;return l|0}}L2293:do{if(e>>>0>3){o=e;n=b;m=c[d>>2]|0;while(1){q=c[m>>2]|0;if((q|0)==0){s=o;t=n;break L2293}if(q>>>0>127){j=nk(n,q,0)|0;if((j|0)==-1){l=-1;break}u=n+j|0;v=o-j|0;w=m}else{a[n]=q&255;u=n+1|0;v=o-1|0;w=c[d>>2]|0}q=w+4|0;c[d>>2]=q;if(v>>>0>3){o=v;n=u;m=q}else{s=v;t=u;break L2293}}i=f;return l|0}else{s=e;t=b}}while(0);L2305:do{if((s|0)==0){x=0}else{b=g|0;u=s;v=t;w=c[d>>2]|0;while(1){m=c[w>>2]|0;if((m|0)==0){p=1855;break}if(m>>>0>127){n=nk(b,m,0)|0;if((n|0)==-1){l=-1;p=1862;break}if(n>>>0>u>>>0){p=1851;break}o=c[w>>2]|0;nk(v,o,0)|0;y=v+n|0;z=u-n|0;A=w}else{a[v]=m&255;y=v+1|0;z=u-1|0;A=c[d>>2]|0}m=A+4|0;c[d>>2]=m;if((z|0)==0){x=0;break L2305}else{u=z;v=y;w=m}}if((p|0)==1851){l=e-u|0;i=f;return l|0}else if((p|0)==1855){a[v]=0;x=u;break}else if((p|0)==1862){i=f;return l|0}}}while(0);c[d>>2]=0;l=e-x|0;i=f;return l|0}function nn(a){a=a|0;var b=0;b=a;while(1){if((c[b>>2]|0)==0){break}else{b=b+4|0}}return b-a>>2|0}function no(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;if((d|0)==0){return a|0}else{e=b;f=d;g=a}while(1){d=f-1|0;c[g>>2]=c[e>>2];if((d|0)==0){break}else{e=e+4|0;f=d;g=g+4|0}}return a|0}function np(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=(d|0)==0;if(a-b>>2>>>0<d>>>0){if(e){return a|0}else{f=d}do{f=f-1|0;c[a+(f<<2)>>2]=c[b+(f<<2)>>2];}while((f|0)!=0);return a|0}else{if(e){return a|0}else{g=b;h=d;i=a}while(1){d=h-1|0;c[i>>2]=c[g>>2];if((d|0)==0){break}else{g=g+4|0;h=d;i=i+4|0}}return a|0}return 0}function nq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;if((d|0)==0){return a|0}else{e=d;f=a}while(1){d=e-1|0;c[f>>2]=b;if((d|0)==0){break}else{e=d;f=f+4|0}}return a|0}function nr(a){a=a|0;return}function ns(a){a=a|0;c[a>>2]=4360;return}function nt(a){a=a|0;nU(a);return}function nu(a){a=a|0;return}function nv(a){a=a|0;return 1936|0}function nw(a){a=a|0;nr(a|0);return}function nx(a){a=a|0;return}function ny(a){a=a|0;return}function nz(a){a=a|0;nr(a|0);nU(a);return}function nA(a){a=a|0;nr(a|0);nU(a);return}function nB(a){a=a|0;nr(a|0);nU(a);return}function nC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=i;i=i+56|0;f=e|0;if((a|0)==(b|0)){g=1;i=e;return g|0}if((b|0)==0){g=0;i=e;return g|0}h=nG(b,12800,12784,-1)|0;b=h;if((h|0)==0){g=0;i=e;return g|0}n0(f|0,0,56);c[f>>2]=b;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;dU[c[(c[h>>2]|0)+28>>2]&63](b,f,c[d>>2]|0,1);if((c[f+24>>2]|0)!=1){g=0;i=e;return g|0}c[d>>2]=c[f+16>>2];g=1;i=e;return g|0}function nD(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((c[d+8>>2]|0)!=(b|0)){return}b=d+16|0;g=c[b>>2]|0;if((g|0)==0){c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((g|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function nE(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;if((b|0)!=(c[d+8>>2]|0)){g=c[b+8>>2]|0;dU[c[(c[g>>2]|0)+28>>2]&63](g,d,e,f);return}g=d+16|0;b=c[g>>2]|0;if((b|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}e=d+24|0;if((c[e>>2]|0)!=2){return}c[e>>2]=f;return}function nF(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0;if((b|0)==(c[d+8>>2]|0)){g=d+16|0;h=c[g>>2]|0;if((h|0)==0){c[g>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;return}if((h|0)!=(e|0)){h=d+36|0;c[h>>2]=(c[h>>2]|0)+1;c[d+24>>2]=2;a[d+54|0]=1;return}h=d+24|0;if((c[h>>2]|0)!=2){return}c[h>>2]=f;return}h=c[b+12>>2]|0;g=b+16+(h<<3)|0;i=c[b+20>>2]|0;j=i>>8;if((i&1|0)==0){k=j}else{k=c[(c[e>>2]|0)+j>>2]|0}j=c[b+16>>2]|0;dU[c[(c[j>>2]|0)+28>>2]&63](j,d,e+k|0,(i&2|0)!=0?f:2);if((h|0)<=1){return}h=d+54|0;i=e;k=b+24|0;while(1){b=c[k+4>>2]|0;j=b>>8;if((b&1|0)==0){l=j}else{l=c[(c[i>>2]|0)+j>>2]|0}j=c[k>>2]|0;dU[c[(c[j>>2]|0)+28>>2]&63](j,d,e+l|0,(b&2|0)!=0?f:2);if((a[h]&1)!=0){m=1958;break}b=k+8|0;if(b>>>0<g>>>0){k=b}else{m=1955;break}}if((m|0)==1958){return}else if((m|0)==1955){return}}function nG(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+56|0;g=f|0;h=c[a>>2]|0;j=a+(c[h-8>>2]|0)|0;k=c[h-4>>2]|0;h=k;c[g>>2]=d;c[g+4>>2]=a;c[g+8>>2]=b;c[g+12>>2]=e;e=g+16|0;b=g+20|0;a=g+24|0;l=g+28|0;m=g+32|0;n=g+40|0;n0(e|0,0,39);if((k|0)==(d|0)){c[g+48>>2]=1;dF[c[(c[k>>2]|0)+20>>2]&63](h,g,j,j,1,0);i=f;return((c[a>>2]|0)==1?j:0)|0}dv[c[(c[k>>2]|0)+24>>2]&7](h,g,j,1,0);j=c[g+36>>2]|0;if((j|0)==0){if((c[n>>2]|0)!=1){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}o=(c[m>>2]|0)==1?c[b>>2]|0:0;i=f;return o|0}else if((j|0)==1){do{if((c[a>>2]|0)!=1){if((c[n>>2]|0)!=0){o=0;i=f;return o|0}if((c[l>>2]|0)!=1){o=0;i=f;return o|0}if((c[m>>2]|0)==1){break}else{o=0}i=f;return o|0}}while(0);o=c[e>>2]|0;i=f;return o|0}else{o=0;i=f;return o|0}return 0}function nH(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)==(c[d>>2]|0)){do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=c[b+12>>2]|0;k=b+16+(j<<3)|0;L2487:do{if((j|0)>0){l=d+52|0;m=d+53|0;n=d+54|0;o=b+8|0;p=d+24|0;q=e;r=0;s=b+16|0;t=0;L2489:while(1){a[l]=0;a[m]=0;u=c[s+4>>2]|0;v=u>>8;if((u&1|0)==0){w=v}else{w=c[(c[q>>2]|0)+v>>2]|0}v=c[s>>2]|0;dF[c[(c[v>>2]|0)+20>>2]&63](v,d,e,e+w|0,2-(u>>>1&1)|0,g);if((a[n]&1)!=0){x=t;y=r;break}do{if((a[m]&1)==0){z=t;A=r}else{if((a[l]&1)==0){if((c[o>>2]&1|0)==0){x=1;y=r;break L2489}else{z=1;A=r;break}}if((c[p>>2]|0)==1){B=2006;break L2487}if((c[o>>2]&2|0)==0){B=2006;break L2487}else{z=1;A=1}}}while(0);u=s+8|0;if(u>>>0<k>>>0){r=A;s=u;t=z}else{x=z;y=A;break}}if(y){C=x;B=2005}else{D=x;B=2002}}else{D=0;B=2002}}while(0);do{if((B|0)==2002){c[h>>2]=e;k=d+40|0;c[k>>2]=(c[k>>2]|0)+1;if((c[d+36>>2]|0)!=1){C=D;B=2005;break}if((c[d+24>>2]|0)!=2){C=D;B=2005;break}a[d+54|0]=1;if(D){B=2006}else{B=2007}}}while(0);if((B|0)==2005){if(C){B=2006}else{B=2007}}if((B|0)==2006){c[i>>2]=3;return}else if((B|0)==2007){c[i>>2]=4;return}}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}C=c[b+12>>2]|0;D=b+16+(C<<3)|0;x=c[b+20>>2]|0;y=x>>8;if((x&1|0)==0){E=y}else{E=c[(c[e>>2]|0)+y>>2]|0}y=c[b+16>>2]|0;dv[c[(c[y>>2]|0)+24>>2]&7](y,d,e+E|0,(x&2|0)!=0?f:2,g);x=b+24|0;if((C|0)<=1){return}C=c[b+8>>2]|0;do{if((C&2|0)==0){b=d+36|0;if((c[b>>2]|0)==1){break}if((C&1|0)==0){E=d+54|0;y=e;A=x;while(1){if((a[E]&1)!=0){B=2036;break}if((c[b>>2]|0)==1){B=2041;break}z=c[A+4>>2]|0;w=z>>8;if((z&1|0)==0){F=w}else{F=c[(c[y>>2]|0)+w>>2]|0}w=c[A>>2]|0;dv[c[(c[w>>2]|0)+24>>2]&7](w,d,e+F|0,(z&2|0)!=0?f:2,g);z=A+8|0;if(z>>>0<D>>>0){A=z}else{B=2038;break}}if((B|0)==2036){return}else if((B|0)==2038){return}else if((B|0)==2041){return}}A=d+24|0;y=d+54|0;E=e;i=x;while(1){if((a[y]&1)!=0){B=2039;break}if((c[b>>2]|0)==1){if((c[A>>2]|0)==1){B=2040;break}}z=c[i+4>>2]|0;w=z>>8;if((z&1|0)==0){G=w}else{G=c[(c[E>>2]|0)+w>>2]|0}w=c[i>>2]|0;dv[c[(c[w>>2]|0)+24>>2]&7](w,d,e+G|0,(z&2|0)!=0?f:2,g);z=i+8|0;if(z>>>0<D>>>0){i=z}else{B=2035;break}}if((B|0)==2035){return}else if((B|0)==2039){return}else if((B|0)==2040){return}}}while(0);G=d+54|0;F=e;C=x;while(1){if((a[G]&1)!=0){B=2048;break}x=c[C+4>>2]|0;i=x>>8;if((x&1|0)==0){H=i}else{H=c[(c[F>>2]|0)+i>>2]|0}i=c[C>>2]|0;dv[c[(c[i>>2]|0)+24>>2]&7](i,d,e+H|0,(x&2|0)!=0?f:2,g);x=C+8|0;if(x>>>0<D>>>0){C=x}else{B=2047;break}}if((B|0)==2047){return}else if((B|0)==2048){return}}function nI(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;h=b|0;if((h|0)==(c[d+8>>2]|0)){if((c[d+4>>2]|0)!=(e|0)){return}i=d+28|0;if((c[i>>2]|0)==1){return}c[i>>2]=f;return}if((h|0)!=(c[d>>2]|0)){h=c[b+8>>2]|0;dv[c[(c[h>>2]|0)+24>>2]&7](h,d,e,f,g);return}do{if((c[d+16>>2]|0)!=(e|0)){h=d+20|0;if((c[h>>2]|0)==(e|0)){break}c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4){return}j=d+52|0;a[j]=0;k=d+53|0;a[k]=0;l=c[b+8>>2]|0;dF[c[(c[l>>2]|0)+20>>2]&63](l,d,e,e,1,g);if((a[k]&1)==0){m=0;n=2062}else{if((a[j]&1)==0){m=1;n=2062}}L2589:do{if((n|0)==2062){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){n=2065;break}a[d+54|0]=1;if(m){break L2589}}else{n=2065}}while(0);if((n|0)==2065){if(m){break}}c[i>>2]=4;return}}while(0);c[i>>2]=3;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function nJ(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if((c[d+8>>2]|0)==(b|0)){if((c[d+4>>2]|0)!=(e|0)){return}g=d+28|0;if((c[g>>2]|0)==1){return}c[g>>2]=f;return}if((c[d>>2]|0)!=(b|0)){return}do{if((c[d+16>>2]|0)!=(e|0)){b=d+20|0;if((c[b>>2]|0)==(e|0)){break}c[d+32>>2]=f;c[b>>2]=e;b=d+40|0;c[b>>2]=(c[b>>2]|0)+1;do{if((c[d+36>>2]|0)==1){if((c[d+24>>2]|0)!=2){break}a[d+54|0]=1}}while(0);c[d+44>>2]=4;return}}while(0);if((f|0)!=1){return}c[d+32>>2]=1;return}function nK(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;if((b|0)!=(c[d+8>>2]|0)){i=d+52|0;j=a[i]&1;k=d+53|0;l=a[k]&1;m=c[b+12>>2]|0;n=b+16+(m<<3)|0;a[i]=0;a[k]=0;o=c[b+20>>2]|0;p=o>>8;if((o&1|0)==0){q=p}else{q=c[(c[f>>2]|0)+p>>2]|0}p=c[b+16>>2]|0;dF[c[(c[p>>2]|0)+20>>2]&63](p,d,e,f+q|0,(o&2|0)!=0?g:2,h);L2638:do{if((m|0)>1){o=d+24|0;q=b+8|0;p=d+54|0;r=f;s=b+24|0;do{if((a[p]&1)!=0){break L2638}do{if((a[i]&1)==0){if((a[k]&1)==0){break}if((c[q>>2]&1|0)==0){break L2638}}else{if((c[o>>2]|0)==1){break L2638}if((c[q>>2]&2|0)==0){break L2638}}}while(0);a[i]=0;a[k]=0;t=c[s+4>>2]|0;u=t>>8;if((t&1|0)==0){v=u}else{v=c[(c[r>>2]|0)+u>>2]|0}u=c[s>>2]|0;dF[c[(c[u>>2]|0)+20>>2]&63](u,d,e,f+v|0,(t&2|0)!=0?g:2,h);s=s+8|0;}while(s>>>0<n>>>0)}}while(0);a[i]=j;a[k]=l;return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;l=c[f>>2]|0;if((l|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((l|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;l=c[e>>2]|0;if((l|0)==2){c[e>>2]=g;w=g}else{w=l}if(!((c[d+48>>2]|0)==1&(w|0)==1)){return}a[d+54|0]=1;return}function nL(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0;if((b|0)!=(c[d+8>>2]|0)){i=c[b+8>>2]|0;dF[c[(c[i>>2]|0)+20>>2]&63](i,d,e,f,g,h);return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;h=c[f>>2]|0;if((h|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((h|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;h=c[e>>2]|0;if((h|0)==2){c[e>>2]=g;j=g}else{j=h}if(!((c[d+48>>2]|0)==1&(j|0)==1)){return}a[d+54|0]=1;return}function nM(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;if((c[d+8>>2]|0)!=(b|0)){return}a[d+53|0]=1;if((c[d+4>>2]|0)!=(f|0)){return}a[d+52|0]=1;f=d+16|0;b=c[f>>2]|0;if((b|0)==0){c[f>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((c[d+48>>2]|0)==1&(g|0)==1)){return}a[d+54|0]=1;return}if((b|0)!=(e|0)){e=d+36|0;c[e>>2]=(c[e>>2]|0)+1;a[d+54|0]=1;return}e=d+24|0;b=c[e>>2]|0;if((b|0)==2){c[e>>2]=g;i=g}else{i=b}if(!((c[d+48>>2]|0)==1&(i|0)==1)){return}a[d+54|0]=1;return}function nN(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ap=0,aq=0,ar=0,as=0,at=0,au=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aF=0,aG=0;do{if(a>>>0<245){if(a>>>0<11){b=16}else{b=a+11&-8}d=b>>>3;e=c[3396]|0;f=e>>>(d>>>0);if((f&3|0)!=0){g=(f&1^1)+d|0;h=g<<1;i=13624+(h<<2)|0;j=13624+(h+2<<2)|0;h=c[j>>2]|0;k=h+8|0;l=c[k>>2]|0;do{if((i|0)==(l|0)){c[3396]=e&~(1<<g)}else{if(l>>>0<(c[3400]|0)>>>0){cX();return 0}m=l+12|0;if((c[m>>2]|0)==(h|0)){c[m>>2]=i;c[j>>2]=l;break}else{cX();return 0}}}while(0);l=g<<3;c[h+4>>2]=l|3;j=h+(l|4)|0;c[j>>2]=c[j>>2]|1;n=k;return n|0}if(b>>>0<=(c[3398]|0)>>>0){o=b;break}if((f|0)!=0){j=2<<d;l=f<<d&(j|-j);j=(l&-l)-1|0;l=j>>>12&16;i=j>>>(l>>>0);j=i>>>5&8;m=i>>>(j>>>0);i=m>>>2&4;p=m>>>(i>>>0);m=p>>>1&2;q=p>>>(m>>>0);p=q>>>1&1;r=(j|l|i|m|p)+(q>>>(p>>>0))|0;p=r<<1;q=13624+(p<<2)|0;m=13624+(p+2<<2)|0;p=c[m>>2]|0;i=p+8|0;l=c[i>>2]|0;do{if((q|0)==(l|0)){c[3396]=e&~(1<<r)}else{if(l>>>0<(c[3400]|0)>>>0){cX();return 0}j=l+12|0;if((c[j>>2]|0)==(p|0)){c[j>>2]=q;c[m>>2]=l;break}else{cX();return 0}}}while(0);l=r<<3;m=l-b|0;c[p+4>>2]=b|3;q=p;e=q+b|0;c[q+(b|4)>>2]=m|1;c[q+l>>2]=m;l=c[3398]|0;if((l|0)!=0){q=c[3401]|0;d=l>>>3;l=d<<1;f=13624+(l<<2)|0;k=c[3396]|0;h=1<<d;do{if((k&h|0)==0){c[3396]=k|h;s=f;t=13624+(l+2<<2)|0}else{d=13624+(l+2<<2)|0;g=c[d>>2]|0;if(g>>>0>=(c[3400]|0)>>>0){s=g;t=d;break}cX();return 0}}while(0);c[t>>2]=q;c[s+12>>2]=q;c[q+8>>2]=s;c[q+12>>2]=f}c[3398]=m;c[3401]=e;n=i;return n|0}l=c[3397]|0;if((l|0)==0){o=b;break}h=(l&-l)-1|0;l=h>>>12&16;k=h>>>(l>>>0);h=k>>>5&8;p=k>>>(h>>>0);k=p>>>2&4;r=p>>>(k>>>0);p=r>>>1&2;d=r>>>(p>>>0);r=d>>>1&1;g=c[13888+((h|l|k|p|r)+(d>>>(r>>>0))<<2)>>2]|0;r=g;d=g;p=(c[g+4>>2]&-8)-b|0;while(1){g=c[r+16>>2]|0;if((g|0)==0){k=c[r+20>>2]|0;if((k|0)==0){break}else{u=k}}else{u=g}g=(c[u+4>>2]&-8)-b|0;k=g>>>0<p>>>0;r=u;d=k?u:d;p=k?g:p}r=d;i=c[3400]|0;if(r>>>0<i>>>0){cX();return 0}e=r+b|0;m=e;if(r>>>0>=e>>>0){cX();return 0}e=c[d+24>>2]|0;f=c[d+12>>2]|0;do{if((f|0)==(d|0)){q=d+20|0;g=c[q>>2]|0;if((g|0)==0){k=d+16|0;l=c[k>>2]|0;if((l|0)==0){v=0;break}else{w=l;x=k}}else{w=g;x=q}while(1){q=w+20|0;g=c[q>>2]|0;if((g|0)!=0){w=g;x=q;continue}q=w+16|0;g=c[q>>2]|0;if((g|0)==0){break}else{w=g;x=q}}if(x>>>0<i>>>0){cX();return 0}else{c[x>>2]=0;v=w;break}}else{q=c[d+8>>2]|0;if(q>>>0<i>>>0){cX();return 0}g=q+12|0;if((c[g>>2]|0)!=(d|0)){cX();return 0}k=f+8|0;if((c[k>>2]|0)==(d|0)){c[g>>2]=f;c[k>>2]=q;v=f;break}else{cX();return 0}}}while(0);L2928:do{if((e|0)!=0){f=d+28|0;i=13888+(c[f>>2]<<2)|0;do{if((d|0)==(c[i>>2]|0)){c[i>>2]=v;if((v|0)!=0){break}c[3397]=c[3397]&~(1<<c[f>>2]);break L2928}else{if(e>>>0<(c[3400]|0)>>>0){cX();return 0}q=e+16|0;if((c[q>>2]|0)==(d|0)){c[q>>2]=v}else{c[e+20>>2]=v}if((v|0)==0){break L2928}}}while(0);if(v>>>0<(c[3400]|0)>>>0){cX();return 0}c[v+24>>2]=e;f=c[d+16>>2]|0;do{if((f|0)!=0){if(f>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[v+16>>2]=f;c[f+24>>2]=v;break}}}while(0);f=c[d+20>>2]|0;if((f|0)==0){break}if(f>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[v+20>>2]=f;c[f+24>>2]=v;break}}}while(0);if(p>>>0<16){e=p+b|0;c[d+4>>2]=e|3;f=r+(e+4)|0;c[f>>2]=c[f>>2]|1}else{c[d+4>>2]=b|3;c[r+(b|4)>>2]=p|1;c[r+(p+b)>>2]=p;f=c[3398]|0;if((f|0)!=0){e=c[3401]|0;i=f>>>3;f=i<<1;q=13624+(f<<2)|0;k=c[3396]|0;g=1<<i;do{if((k&g|0)==0){c[3396]=k|g;y=q;z=13624+(f+2<<2)|0}else{i=13624+(f+2<<2)|0;l=c[i>>2]|0;if(l>>>0>=(c[3400]|0)>>>0){y=l;z=i;break}cX();return 0}}while(0);c[z>>2]=e;c[y+12>>2]=e;c[e+8>>2]=y;c[e+12>>2]=q}c[3398]=p;c[3401]=m}f=d+8|0;if((f|0)==0){o=b;break}else{n=f}return n|0}else{if(a>>>0>4294967231){o=-1;break}f=a+11|0;g=f&-8;k=c[3397]|0;if((k|0)==0){o=g;break}r=-g|0;i=f>>>8;do{if((i|0)==0){A=0}else{if(g>>>0>16777215){A=31;break}f=(i+1048320|0)>>>16&8;l=i<<f;h=(l+520192|0)>>>16&4;j=l<<h;l=(j+245760|0)>>>16&2;B=14-(h|f|l)+(j<<l>>>15)|0;A=g>>>((B+7|0)>>>0)&1|B<<1}}while(0);i=c[13888+(A<<2)>>2]|0;L2736:do{if((i|0)==0){C=0;D=r;E=0}else{if((A|0)==31){F=0}else{F=25-(A>>>1)|0}d=0;m=r;p=i;q=g<<F;e=0;while(1){B=c[p+4>>2]&-8;l=B-g|0;if(l>>>0<m>>>0){if((B|0)==(g|0)){C=p;D=l;E=p;break L2736}else{G=p;H=l}}else{G=d;H=m}l=c[p+20>>2]|0;B=c[p+16+(q>>>31<<2)>>2]|0;j=(l|0)==0|(l|0)==(B|0)?e:l;if((B|0)==0){C=G;D=H;E=j;break}else{d=G;m=H;p=B;q=q<<1;e=j}}}}while(0);if((E|0)==0&(C|0)==0){i=2<<A;r=k&(i|-i);if((r|0)==0){o=g;break}i=(r&-r)-1|0;r=i>>>12&16;e=i>>>(r>>>0);i=e>>>5&8;q=e>>>(i>>>0);e=q>>>2&4;p=q>>>(e>>>0);q=p>>>1&2;m=p>>>(q>>>0);p=m>>>1&1;I=c[13888+((i|r|e|q|p)+(m>>>(p>>>0))<<2)>>2]|0}else{I=E}if((I|0)==0){J=D;K=C}else{p=I;m=D;q=C;while(1){e=(c[p+4>>2]&-8)-g|0;r=e>>>0<m>>>0;i=r?e:m;e=r?p:q;r=c[p+16>>2]|0;if((r|0)!=0){p=r;m=i;q=e;continue}r=c[p+20>>2]|0;if((r|0)==0){J=i;K=e;break}else{p=r;m=i;q=e}}}if((K|0)==0){o=g;break}if(J>>>0>=((c[3398]|0)-g|0)>>>0){o=g;break}q=K;m=c[3400]|0;if(q>>>0<m>>>0){cX();return 0}p=q+g|0;k=p;if(q>>>0>=p>>>0){cX();return 0}e=c[K+24>>2]|0;i=c[K+12>>2]|0;do{if((i|0)==(K|0)){r=K+20|0;d=c[r>>2]|0;if((d|0)==0){j=K+16|0;B=c[j>>2]|0;if((B|0)==0){L=0;break}else{M=B;N=j}}else{M=d;N=r}while(1){r=M+20|0;d=c[r>>2]|0;if((d|0)!=0){M=d;N=r;continue}r=M+16|0;d=c[r>>2]|0;if((d|0)==0){break}else{M=d;N=r}}if(N>>>0<m>>>0){cX();return 0}else{c[N>>2]=0;L=M;break}}else{r=c[K+8>>2]|0;if(r>>>0<m>>>0){cX();return 0}d=r+12|0;if((c[d>>2]|0)!=(K|0)){cX();return 0}j=i+8|0;if((c[j>>2]|0)==(K|0)){c[d>>2]=i;c[j>>2]=r;L=i;break}else{cX();return 0}}}while(0);L2786:do{if((e|0)!=0){i=K+28|0;m=13888+(c[i>>2]<<2)|0;do{if((K|0)==(c[m>>2]|0)){c[m>>2]=L;if((L|0)!=0){break}c[3397]=c[3397]&~(1<<c[i>>2]);break L2786}else{if(e>>>0<(c[3400]|0)>>>0){cX();return 0}r=e+16|0;if((c[r>>2]|0)==(K|0)){c[r>>2]=L}else{c[e+20>>2]=L}if((L|0)==0){break L2786}}}while(0);if(L>>>0<(c[3400]|0)>>>0){cX();return 0}c[L+24>>2]=e;i=c[K+16>>2]|0;do{if((i|0)!=0){if(i>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[L+16>>2]=i;c[i+24>>2]=L;break}}}while(0);i=c[K+20>>2]|0;if((i|0)==0){break}if(i>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[L+20>>2]=i;c[i+24>>2]=L;break}}}while(0);do{if(J>>>0<16){e=J+g|0;c[K+4>>2]=e|3;i=q+(e+4)|0;c[i>>2]=c[i>>2]|1}else{c[K+4>>2]=g|3;c[q+(g|4)>>2]=J|1;c[q+(J+g)>>2]=J;i=J>>>3;if(J>>>0<256){e=i<<1;m=13624+(e<<2)|0;r=c[3396]|0;j=1<<i;do{if((r&j|0)==0){c[3396]=r|j;O=m;P=13624+(e+2<<2)|0}else{i=13624+(e+2<<2)|0;d=c[i>>2]|0;if(d>>>0>=(c[3400]|0)>>>0){O=d;P=i;break}cX();return 0}}while(0);c[P>>2]=k;c[O+12>>2]=k;c[q+(g+8)>>2]=O;c[q+(g+12)>>2]=m;break}e=p;j=J>>>8;do{if((j|0)==0){Q=0}else{if(J>>>0>16777215){Q=31;break}r=(j+1048320|0)>>>16&8;i=j<<r;d=(i+520192|0)>>>16&4;B=i<<d;i=(B+245760|0)>>>16&2;l=14-(d|r|i)+(B<<i>>>15)|0;Q=J>>>((l+7|0)>>>0)&1|l<<1}}while(0);j=13888+(Q<<2)|0;c[q+(g+28)>>2]=Q;c[q+(g+20)>>2]=0;c[q+(g+16)>>2]=0;m=c[3397]|0;l=1<<Q;if((m&l|0)==0){c[3397]=m|l;c[j>>2]=e;c[q+(g+24)>>2]=j;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}if((Q|0)==31){R=0}else{R=25-(Q>>>1)|0}l=J<<R;m=c[j>>2]|0;while(1){if((c[m+4>>2]&-8|0)==(J|0)){break}S=m+16+(l>>>31<<2)|0;j=c[S>>2]|0;if((j|0)==0){T=2322;break}else{l=l<<1;m=j}}if((T|0)==2322){if(S>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[S>>2]=e;c[q+(g+24)>>2]=m;c[q+(g+12)>>2]=e;c[q+(g+8)>>2]=e;break}}l=m+8|0;j=c[l>>2]|0;i=c[3400]|0;if(m>>>0<i>>>0){cX();return 0}if(j>>>0<i>>>0){cX();return 0}else{c[j+12>>2]=e;c[l>>2]=e;c[q+(g+8)>>2]=j;c[q+(g+12)>>2]=m;c[q+(g+24)>>2]=0;break}}}while(0);q=K+8|0;if((q|0)==0){o=g;break}else{n=q}return n|0}}while(0);K=c[3398]|0;if(o>>>0<=K>>>0){S=K-o|0;J=c[3401]|0;if(S>>>0>15){R=J;c[3401]=R+o;c[3398]=S;c[R+(o+4)>>2]=S|1;c[R+K>>2]=S;c[J+4>>2]=o|3}else{c[3398]=0;c[3401]=0;c[J+4>>2]=K|3;S=J+(K+4)|0;c[S>>2]=c[S>>2]|1}n=J+8|0;return n|0}J=c[3399]|0;if(o>>>0<J>>>0){S=J-o|0;c[3399]=S;J=c[3402]|0;K=J;c[3402]=K+o;c[K+(o+4)>>2]=S|1;c[J+4>>2]=o|3;n=J+8|0;return n|0}do{if((c[3386]|0)==0){J=aQ(30)|0;if((J-1&J|0)==0){c[3388]=J;c[3387]=J;c[3389]=-1;c[3390]=-1;c[3391]=0;c[3507]=0;c[3386]=(ds(0)|0)&-16^1431655768;break}else{cX();return 0}}}while(0);J=o+48|0;S=c[3388]|0;K=o+47|0;R=S+K|0;Q=-S|0;S=R&Q;if(S>>>0<=o>>>0){n=0;return n|0}O=c[3506]|0;do{if((O|0)!=0){P=c[3504]|0;L=P+S|0;if(L>>>0<=P>>>0|L>>>0>O>>>0){n=0}else{break}return n|0}}while(0);L2995:do{if((c[3507]&4|0)==0){O=c[3402]|0;L2997:do{if((O|0)==0){T=2352}else{L=O;P=14032;while(1){U=P|0;M=c[U>>2]|0;if(M>>>0<=L>>>0){V=P+4|0;if((M+(c[V>>2]|0)|0)>>>0>L>>>0){break}}M=c[P+8>>2]|0;if((M|0)==0){T=2352;break L2997}else{P=M}}if((P|0)==0){T=2352;break}L=R-(c[3399]|0)&Q;if(L>>>0>=2147483647){W=0;break}m=cE(L|0)|0;e=(m|0)==((c[U>>2]|0)+(c[V>>2]|0)|0);X=e?m:-1;Y=e?L:0;Z=m;_=L;T=2361}}while(0);do{if((T|0)==2352){O=cE(0)|0;if((O|0)==-1){W=0;break}g=O;L=c[3387]|0;m=L-1|0;if((m&g|0)==0){$=S}else{$=S-g+(m+g&-L)|0}L=c[3504]|0;g=L+$|0;if(!($>>>0>o>>>0&$>>>0<2147483647)){W=0;break}m=c[3506]|0;if((m|0)!=0){if(g>>>0<=L>>>0|g>>>0>m>>>0){W=0;break}}m=cE($|0)|0;g=(m|0)==(O|0);X=g?O:-1;Y=g?$:0;Z=m;_=$;T=2361}}while(0);L3017:do{if((T|0)==2361){m=-_|0;if((X|0)!=-1){aa=Y;ab=X;T=2372;break L2995}do{if((Z|0)!=-1&_>>>0<2147483647&_>>>0<J>>>0){g=c[3388]|0;O=K-_+g&-g;if(O>>>0>=2147483647){ac=_;break}if((cE(O|0)|0)==-1){cE(m|0)|0;W=Y;break L3017}else{ac=O+_|0;break}}else{ac=_}}while(0);if((Z|0)==-1){W=Y}else{aa=ac;ab=Z;T=2372;break L2995}}}while(0);c[3507]=c[3507]|4;ad=W;T=2369}else{ad=0;T=2369}}while(0);do{if((T|0)==2369){if(S>>>0>=2147483647){break}W=cE(S|0)|0;Z=cE(0)|0;if(!((Z|0)!=-1&(W|0)!=-1&W>>>0<Z>>>0)){break}ac=Z-W|0;Z=ac>>>0>(o+40|0)>>>0;Y=Z?W:-1;if((Y|0)!=-1){aa=Z?ac:ad;ab=Y;T=2372}}}while(0);do{if((T|0)==2372){ad=(c[3504]|0)+aa|0;c[3504]=ad;if(ad>>>0>(c[3505]|0)>>>0){c[3505]=ad}ad=c[3402]|0;L3037:do{if((ad|0)==0){S=c[3400]|0;if((S|0)==0|ab>>>0<S>>>0){c[3400]=ab}c[3508]=ab;c[3509]=aa;c[3511]=0;c[3405]=c[3386];c[3404]=-1;S=0;do{Y=S<<1;ac=13624+(Y<<2)|0;c[13624+(Y+3<<2)>>2]=ac;c[13624+(Y+2<<2)>>2]=ac;S=S+1|0;}while(S>>>0<32);S=ab+8|0;if((S&7|0)==0){ae=0}else{ae=-S&7}S=aa-40-ae|0;c[3402]=ab+ae;c[3399]=S;c[ab+(ae+4)>>2]=S|1;c[ab+(aa-36)>>2]=40;c[3403]=c[3390]}else{S=14032;while(1){af=c[S>>2]|0;ag=S+4|0;ah=c[ag>>2]|0;if((ab|0)==(af+ah|0)){T=2384;break}ac=c[S+8>>2]|0;if((ac|0)==0){break}else{S=ac}}do{if((T|0)==2384){if((c[S+12>>2]&8|0)!=0){break}ac=ad;if(!(ac>>>0>=af>>>0&ac>>>0<ab>>>0)){break}c[ag>>2]=ah+aa;ac=c[3402]|0;Y=(c[3399]|0)+aa|0;Z=ac;W=ac+8|0;if((W&7|0)==0){ai=0}else{ai=-W&7}W=Y-ai|0;c[3402]=Z+ai;c[3399]=W;c[Z+(ai+4)>>2]=W|1;c[Z+(Y+4)>>2]=40;c[3403]=c[3390];break L3037}}while(0);if(ab>>>0<(c[3400]|0)>>>0){c[3400]=ab}S=ab+aa|0;Y=14032;while(1){aj=Y|0;if((c[aj>>2]|0)==(S|0)){T=2394;break}Z=c[Y+8>>2]|0;if((Z|0)==0){break}else{Y=Z}}do{if((T|0)==2394){if((c[Y+12>>2]&8|0)!=0){break}c[aj>>2]=ab;S=Y+4|0;c[S>>2]=(c[S>>2]|0)+aa;S=ab+8|0;if((S&7|0)==0){ak=0}else{ak=-S&7}S=ab+(aa+8)|0;if((S&7|0)==0){al=0}else{al=-S&7}S=ab+(al+aa)|0;Z=S;W=ak+o|0;ac=ab+W|0;_=ac;K=S-(ab+ak)-o|0;c[ab+(ak+4)>>2]=o|3;do{if((Z|0)==(c[3402]|0)){J=(c[3399]|0)+K|0;c[3399]=J;c[3402]=_;c[ab+(W+4)>>2]=J|1}else{if((Z|0)==(c[3401]|0)){J=(c[3398]|0)+K|0;c[3398]=J;c[3401]=_;c[ab+(W+4)>>2]=J|1;c[ab+(J+W)>>2]=J;break}J=aa+4|0;X=c[ab+(J+al)>>2]|0;if((X&3|0)==1){$=X&-8;V=X>>>3;L3082:do{if(X>>>0<256){U=c[ab+((al|8)+aa)>>2]|0;Q=c[ab+(aa+12+al)>>2]|0;R=13624+(V<<1<<2)|0;do{if((U|0)!=(R|0)){if(U>>>0<(c[3400]|0)>>>0){cX();return 0}if((c[U+12>>2]|0)==(Z|0)){break}cX();return 0}}while(0);if((Q|0)==(U|0)){c[3396]=c[3396]&~(1<<V);break}do{if((Q|0)==(R|0)){am=Q+8|0}else{if(Q>>>0<(c[3400]|0)>>>0){cX();return 0}m=Q+8|0;if((c[m>>2]|0)==(Z|0)){am=m;break}cX();return 0}}while(0);c[U+12>>2]=Q;c[am>>2]=U}else{R=S;m=c[ab+((al|24)+aa)>>2]|0;P=c[ab+(aa+12+al)>>2]|0;do{if((P|0)==(R|0)){O=al|16;g=ab+(J+O)|0;L=c[g>>2]|0;if((L|0)==0){e=ab+(O+aa)|0;O=c[e>>2]|0;if((O|0)==0){an=0;break}else{ao=O;ap=e}}else{ao=L;ap=g}while(1){g=ao+20|0;L=c[g>>2]|0;if((L|0)!=0){ao=L;ap=g;continue}g=ao+16|0;L=c[g>>2]|0;if((L|0)==0){break}else{ao=L;ap=g}}if(ap>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[ap>>2]=0;an=ao;break}}else{g=c[ab+((al|8)+aa)>>2]|0;if(g>>>0<(c[3400]|0)>>>0){cX();return 0}L=g+12|0;if((c[L>>2]|0)!=(R|0)){cX();return 0}e=P+8|0;if((c[e>>2]|0)==(R|0)){c[L>>2]=P;c[e>>2]=g;an=P;break}else{cX();return 0}}}while(0);if((m|0)==0){break}P=ab+(aa+28+al)|0;U=13888+(c[P>>2]<<2)|0;do{if((R|0)==(c[U>>2]|0)){c[U>>2]=an;if((an|0)!=0){break}c[3397]=c[3397]&~(1<<c[P>>2]);break L3082}else{if(m>>>0<(c[3400]|0)>>>0){cX();return 0}Q=m+16|0;if((c[Q>>2]|0)==(R|0)){c[Q>>2]=an}else{c[m+20>>2]=an}if((an|0)==0){break L3082}}}while(0);if(an>>>0<(c[3400]|0)>>>0){cX();return 0}c[an+24>>2]=m;R=al|16;P=c[ab+(R+aa)>>2]|0;do{if((P|0)!=0){if(P>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[an+16>>2]=P;c[P+24>>2]=an;break}}}while(0);P=c[ab+(J+R)>>2]|0;if((P|0)==0){break}if(P>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[an+20>>2]=P;c[P+24>>2]=an;break}}}while(0);aq=ab+(($|al)+aa)|0;ar=$+K|0}else{aq=Z;ar=K}J=aq+4|0;c[J>>2]=c[J>>2]&-2;c[ab+(W+4)>>2]=ar|1;c[ab+(ar+W)>>2]=ar;J=ar>>>3;if(ar>>>0<256){V=J<<1;X=13624+(V<<2)|0;P=c[3396]|0;m=1<<J;do{if((P&m|0)==0){c[3396]=P|m;as=X;at=13624+(V+2<<2)|0}else{J=13624+(V+2<<2)|0;U=c[J>>2]|0;if(U>>>0>=(c[3400]|0)>>>0){as=U;at=J;break}cX();return 0}}while(0);c[at>>2]=_;c[as+12>>2]=_;c[ab+(W+8)>>2]=as;c[ab+(W+12)>>2]=X;break}V=ac;m=ar>>>8;do{if((m|0)==0){au=0}else{if(ar>>>0>16777215){au=31;break}P=(m+1048320|0)>>>16&8;$=m<<P;J=($+520192|0)>>>16&4;U=$<<J;$=(U+245760|0)>>>16&2;Q=14-(J|P|$)+(U<<$>>>15)|0;au=ar>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=13888+(au<<2)|0;c[ab+(W+28)>>2]=au;c[ab+(W+20)>>2]=0;c[ab+(W+16)>>2]=0;X=c[3397]|0;Q=1<<au;if((X&Q|0)==0){c[3397]=X|Q;c[m>>2]=V;c[ab+(W+24)>>2]=m;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}if((au|0)==31){av=0}else{av=25-(au>>>1)|0}Q=ar<<av;X=c[m>>2]|0;while(1){if((c[X+4>>2]&-8|0)==(ar|0)){break}aw=X+16+(Q>>>31<<2)|0;m=c[aw>>2]|0;if((m|0)==0){T=2467;break}else{Q=Q<<1;X=m}}if((T|0)==2467){if(aw>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[aw>>2]=V;c[ab+(W+24)>>2]=X;c[ab+(W+12)>>2]=V;c[ab+(W+8)>>2]=V;break}}Q=X+8|0;m=c[Q>>2]|0;$=c[3400]|0;if(X>>>0<$>>>0){cX();return 0}if(m>>>0<$>>>0){cX();return 0}else{c[m+12>>2]=V;c[Q>>2]=V;c[ab+(W+8)>>2]=m;c[ab+(W+12)>>2]=X;c[ab+(W+24)>>2]=0;break}}}while(0);n=ab+(ak|8)|0;return n|0}}while(0);Y=ad;W=14032;while(1){ax=c[W>>2]|0;if(ax>>>0<=Y>>>0){ay=c[W+4>>2]|0;az=ax+ay|0;if(az>>>0>Y>>>0){break}}W=c[W+8>>2]|0}W=ax+(ay-39)|0;if((W&7|0)==0){aA=0}else{aA=-W&7}W=ax+(ay-47+aA)|0;ac=W>>>0<(ad+16|0)>>>0?Y:W;W=ac+8|0;_=ab+8|0;if((_&7|0)==0){aB=0}else{aB=-_&7}_=aa-40-aB|0;c[3402]=ab+aB;c[3399]=_;c[ab+(aB+4)>>2]=_|1;c[ab+(aa-36)>>2]=40;c[3403]=c[3390];c[ac+4>>2]=27;c[W>>2]=c[3508];c[W+4>>2]=c[14036>>2];c[W+8>>2]=c[14040>>2];c[W+12>>2]=c[14044>>2];c[3508]=ab;c[3509]=aa;c[3511]=0;c[3510]=W;W=ac+28|0;c[W>>2]=7;if((ac+32|0)>>>0<az>>>0){_=W;while(1){W=_+4|0;c[W>>2]=7;if((_+8|0)>>>0<az>>>0){_=W}else{break}}}if((ac|0)==(Y|0)){break}_=ac-ad|0;W=Y+(_+4)|0;c[W>>2]=c[W>>2]&-2;c[ad+4>>2]=_|1;c[Y+_>>2]=_;W=_>>>3;if(_>>>0<256){K=W<<1;Z=13624+(K<<2)|0;S=c[3396]|0;m=1<<W;do{if((S&m|0)==0){c[3396]=S|m;aC=Z;aD=13624+(K+2<<2)|0}else{W=13624+(K+2<<2)|0;Q=c[W>>2]|0;if(Q>>>0>=(c[3400]|0)>>>0){aC=Q;aD=W;break}cX();return 0}}while(0);c[aD>>2]=ad;c[aC+12>>2]=ad;c[ad+8>>2]=aC;c[ad+12>>2]=Z;break}K=ad;m=_>>>8;do{if((m|0)==0){aE=0}else{if(_>>>0>16777215){aE=31;break}S=(m+1048320|0)>>>16&8;Y=m<<S;ac=(Y+520192|0)>>>16&4;W=Y<<ac;Y=(W+245760|0)>>>16&2;Q=14-(ac|S|Y)+(W<<Y>>>15)|0;aE=_>>>((Q+7|0)>>>0)&1|Q<<1}}while(0);m=13888+(aE<<2)|0;c[ad+28>>2]=aE;c[ad+20>>2]=0;c[ad+16>>2]=0;Z=c[3397]|0;Q=1<<aE;if((Z&Q|0)==0){c[3397]=Z|Q;c[m>>2]=K;c[ad+24>>2]=m;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}if((aE|0)==31){aF=0}else{aF=25-(aE>>>1)|0}Q=_<<aF;Z=c[m>>2]|0;while(1){if((c[Z+4>>2]&-8|0)==(_|0)){break}aG=Z+16+(Q>>>31<<2)|0;m=c[aG>>2]|0;if((m|0)==0){T=2502;break}else{Q=Q<<1;Z=m}}if((T|0)==2502){if(aG>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[aG>>2]=K;c[ad+24>>2]=Z;c[ad+12>>2]=ad;c[ad+8>>2]=ad;break}}Q=Z+8|0;_=c[Q>>2]|0;m=c[3400]|0;if(Z>>>0<m>>>0){cX();return 0}if(_>>>0<m>>>0){cX();return 0}else{c[_+12>>2]=K;c[Q>>2]=K;c[ad+8>>2]=_;c[ad+12>>2]=Z;c[ad+24>>2]=0;break}}}while(0);ad=c[3399]|0;if(ad>>>0<=o>>>0){break}_=ad-o|0;c[3399]=_;ad=c[3402]|0;Q=ad;c[3402]=Q+o;c[Q+(o+4)>>2]=_|1;c[ad+4>>2]=o|3;n=ad+8|0;return n|0}}while(0);c[(bt()|0)>>2]=12;n=0;return n|0}function nO(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;if((a|0)==0){return}b=a-8|0;d=b;e=c[3400]|0;if(b>>>0<e>>>0){cX()}f=c[a-4>>2]|0;g=f&3;if((g|0)==1){cX()}h=f&-8;i=a+(h-8)|0;j=i;L3254:do{if((f&1|0)==0){k=c[b>>2]|0;if((g|0)==0){return}l=-8-k|0;m=a+l|0;n=m;o=k+h|0;if(m>>>0<e>>>0){cX()}if((n|0)==(c[3401]|0)){p=a+(h-4)|0;if((c[p>>2]&3|0)!=3){q=n;r=o;break}c[3398]=o;c[p>>2]=c[p>>2]&-2;c[a+(l+4)>>2]=o|1;c[i>>2]=o;return}p=k>>>3;if(k>>>0<256){k=c[a+(l+8)>>2]|0;s=c[a+(l+12)>>2]|0;t=13624+(p<<1<<2)|0;do{if((k|0)!=(t|0)){if(k>>>0<e>>>0){cX()}if((c[k+12>>2]|0)==(n|0)){break}cX()}}while(0);if((s|0)==(k|0)){c[3396]=c[3396]&~(1<<p);q=n;r=o;break}do{if((s|0)==(t|0)){u=s+8|0}else{if(s>>>0<e>>>0){cX()}v=s+8|0;if((c[v>>2]|0)==(n|0)){u=v;break}cX()}}while(0);c[k+12>>2]=s;c[u>>2]=k;q=n;r=o;break}t=m;p=c[a+(l+24)>>2]|0;v=c[a+(l+12)>>2]|0;do{if((v|0)==(t|0)){w=a+(l+20)|0;x=c[w>>2]|0;if((x|0)==0){y=a+(l+16)|0;z=c[y>>2]|0;if((z|0)==0){A=0;break}else{B=z;C=y}}else{B=x;C=w}while(1){w=B+20|0;x=c[w>>2]|0;if((x|0)!=0){B=x;C=w;continue}w=B+16|0;x=c[w>>2]|0;if((x|0)==0){break}else{B=x;C=w}}if(C>>>0<e>>>0){cX()}else{c[C>>2]=0;A=B;break}}else{w=c[a+(l+8)>>2]|0;if(w>>>0<e>>>0){cX()}x=w+12|0;if((c[x>>2]|0)!=(t|0)){cX()}y=v+8|0;if((c[y>>2]|0)==(t|0)){c[x>>2]=v;c[y>>2]=w;A=v;break}else{cX()}}}while(0);if((p|0)==0){q=n;r=o;break}v=a+(l+28)|0;m=13888+(c[v>>2]<<2)|0;do{if((t|0)==(c[m>>2]|0)){c[m>>2]=A;if((A|0)!=0){break}c[3397]=c[3397]&~(1<<c[v>>2]);q=n;r=o;break L3254}else{if(p>>>0<(c[3400]|0)>>>0){cX()}k=p+16|0;if((c[k>>2]|0)==(t|0)){c[k>>2]=A}else{c[p+20>>2]=A}if((A|0)==0){q=n;r=o;break L3254}}}while(0);if(A>>>0<(c[3400]|0)>>>0){cX()}c[A+24>>2]=p;t=c[a+(l+16)>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[3400]|0)>>>0){cX()}else{c[A+16>>2]=t;c[t+24>>2]=A;break}}}while(0);t=c[a+(l+20)>>2]|0;if((t|0)==0){q=n;r=o;break}if(t>>>0<(c[3400]|0)>>>0){cX()}else{c[A+20>>2]=t;c[t+24>>2]=A;q=n;r=o;break}}else{q=d;r=h}}while(0);d=q;if(d>>>0>=i>>>0){cX()}A=a+(h-4)|0;e=c[A>>2]|0;if((e&1|0)==0){cX()}do{if((e&2|0)==0){if((j|0)==(c[3402]|0)){B=(c[3399]|0)+r|0;c[3399]=B;c[3402]=q;c[q+4>>2]=B|1;if((q|0)!=(c[3401]|0)){return}c[3401]=0;c[3398]=0;return}if((j|0)==(c[3401]|0)){B=(c[3398]|0)+r|0;c[3398]=B;c[3401]=q;c[q+4>>2]=B|1;c[d+B>>2]=B;return}B=(e&-8)+r|0;C=e>>>3;L3356:do{if(e>>>0<256){u=c[a+h>>2]|0;g=c[a+(h|4)>>2]|0;b=13624+(C<<1<<2)|0;do{if((u|0)!=(b|0)){if(u>>>0<(c[3400]|0)>>>0){cX()}if((c[u+12>>2]|0)==(j|0)){break}cX()}}while(0);if((g|0)==(u|0)){c[3396]=c[3396]&~(1<<C);break}do{if((g|0)==(b|0)){D=g+8|0}else{if(g>>>0<(c[3400]|0)>>>0){cX()}f=g+8|0;if((c[f>>2]|0)==(j|0)){D=f;break}cX()}}while(0);c[u+12>>2]=g;c[D>>2]=u}else{b=i;f=c[a+(h+16)>>2]|0;t=c[a+(h|4)>>2]|0;do{if((t|0)==(b|0)){p=a+(h+12)|0;v=c[p>>2]|0;if((v|0)==0){m=a+(h+8)|0;k=c[m>>2]|0;if((k|0)==0){E=0;break}else{F=k;G=m}}else{F=v;G=p}while(1){p=F+20|0;v=c[p>>2]|0;if((v|0)!=0){F=v;G=p;continue}p=F+16|0;v=c[p>>2]|0;if((v|0)==0){break}else{F=v;G=p}}if(G>>>0<(c[3400]|0)>>>0){cX()}else{c[G>>2]=0;E=F;break}}else{p=c[a+h>>2]|0;if(p>>>0<(c[3400]|0)>>>0){cX()}v=p+12|0;if((c[v>>2]|0)!=(b|0)){cX()}m=t+8|0;if((c[m>>2]|0)==(b|0)){c[v>>2]=t;c[m>>2]=p;E=t;break}else{cX()}}}while(0);if((f|0)==0){break}t=a+(h+20)|0;u=13888+(c[t>>2]<<2)|0;do{if((b|0)==(c[u>>2]|0)){c[u>>2]=E;if((E|0)!=0){break}c[3397]=c[3397]&~(1<<c[t>>2]);break L3356}else{if(f>>>0<(c[3400]|0)>>>0){cX()}g=f+16|0;if((c[g>>2]|0)==(b|0)){c[g>>2]=E}else{c[f+20>>2]=E}if((E|0)==0){break L3356}}}while(0);if(E>>>0<(c[3400]|0)>>>0){cX()}c[E+24>>2]=f;b=c[a+(h+8)>>2]|0;do{if((b|0)!=0){if(b>>>0<(c[3400]|0)>>>0){cX()}else{c[E+16>>2]=b;c[b+24>>2]=E;break}}}while(0);b=c[a+(h+12)>>2]|0;if((b|0)==0){break}if(b>>>0<(c[3400]|0)>>>0){cX()}else{c[E+20>>2]=b;c[b+24>>2]=E;break}}}while(0);c[q+4>>2]=B|1;c[d+B>>2]=B;if((q|0)!=(c[3401]|0)){H=B;break}c[3398]=B;return}else{c[A>>2]=e&-2;c[q+4>>2]=r|1;c[d+r>>2]=r;H=r}}while(0);r=H>>>3;if(H>>>0<256){d=r<<1;e=13624+(d<<2)|0;A=c[3396]|0;E=1<<r;do{if((A&E|0)==0){c[3396]=A|E;I=e;J=13624+(d+2<<2)|0}else{r=13624+(d+2<<2)|0;h=c[r>>2]|0;if(h>>>0>=(c[3400]|0)>>>0){I=h;J=r;break}cX()}}while(0);c[J>>2]=q;c[I+12>>2]=q;c[q+8>>2]=I;c[q+12>>2]=e;return}e=q;I=H>>>8;do{if((I|0)==0){K=0}else{if(H>>>0>16777215){K=31;break}J=(I+1048320|0)>>>16&8;d=I<<J;E=(d+520192|0)>>>16&4;A=d<<E;d=(A+245760|0)>>>16&2;r=14-(E|J|d)+(A<<d>>>15)|0;K=H>>>((r+7|0)>>>0)&1|r<<1}}while(0);I=13888+(K<<2)|0;c[q+28>>2]=K;c[q+20>>2]=0;c[q+16>>2]=0;r=c[3397]|0;d=1<<K;do{if((r&d|0)==0){c[3397]=r|d;c[I>>2]=e;c[q+24>>2]=I;c[q+12>>2]=q;c[q+8>>2]=q}else{if((K|0)==31){L=0}else{L=25-(K>>>1)|0}A=H<<L;J=c[I>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(H|0)){break}M=J+16+(A>>>31<<2)|0;E=c[M>>2]|0;if((E|0)==0){N=2679;break}else{A=A<<1;J=E}}if((N|0)==2679){if(M>>>0<(c[3400]|0)>>>0){cX()}else{c[M>>2]=e;c[q+24>>2]=J;c[q+12>>2]=q;c[q+8>>2]=q;break}}A=J+8|0;B=c[A>>2]|0;E=c[3400]|0;if(J>>>0<E>>>0){cX()}if(B>>>0<E>>>0){cX()}else{c[B+12>>2]=e;c[A>>2]=e;c[q+8>>2]=B;c[q+12>>2]=J;c[q+24>>2]=0;break}}}while(0);q=(c[3404]|0)-1|0;c[3404]=q;if((q|0)==0){O=14040}else{return}while(1){q=c[O>>2]|0;if((q|0)==0){break}else{O=q+8|0}}c[3404]=-1;return}function nP(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;if((a|0)==0){d=nN(b)|0;return d|0}if(b>>>0>4294967231){c[(bt()|0)>>2]=12;d=0;return d|0}if(b>>>0<11){e=16}else{e=b+11&-8}f=nQ(a-8|0,e)|0;if((f|0)!=0){d=f+8|0;return d|0}f=nN(b)|0;if((f|0)==0){d=0;return d|0}e=c[a-4>>2]|0;g=(e&-8)-((e&3|0)==0?8:4)|0;e=g>>>0<b>>>0?g:b;n4(f|0,a|0,e)|0;nO(a);d=f;return d|0}function nQ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;d=a+4|0;e=c[d>>2]|0;f=e&-8;g=a;h=g+f|0;i=h;j=c[3400]|0;if(g>>>0<j>>>0){cX();return 0}k=e&3;if(!((k|0)!=1&g>>>0<h>>>0)){cX();return 0}l=g+(f|4)|0;m=c[l>>2]|0;if((m&1|0)==0){cX();return 0}if((k|0)==0){if(b>>>0<256){n=0;return n|0}do{if(f>>>0>=(b+4|0)>>>0){if((f-b|0)>>>0>c[3388]<<1>>>0){break}else{n=a}return n|0}}while(0);n=0;return n|0}if(f>>>0>=b>>>0){k=f-b|0;if(k>>>0<=15){n=a;return n|0}c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|3;c[l>>2]=c[l>>2]|1;nR(g+b|0,k);n=a;return n|0}if((i|0)==(c[3402]|0)){k=(c[3399]|0)+f|0;if(k>>>0<=b>>>0){n=0;return n|0}l=k-b|0;c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=l|1;c[3402]=g+b;c[3399]=l;n=a;return n|0}if((i|0)==(c[3401]|0)){l=(c[3398]|0)+f|0;if(l>>>0<b>>>0){n=0;return n|0}k=l-b|0;if(k>>>0>15){c[d>>2]=e&1|b|2;c[g+(b+4)>>2]=k|1;c[g+l>>2]=k;o=g+(l+4)|0;c[o>>2]=c[o>>2]&-2;p=g+b|0;q=k}else{c[d>>2]=e&1|l|2;e=g+(l+4)|0;c[e>>2]=c[e>>2]|1;p=0;q=0}c[3398]=q;c[3401]=p;n=a;return n|0}if((m&2|0)!=0){n=0;return n|0}p=(m&-8)+f|0;if(p>>>0<b>>>0){n=0;return n|0}q=p-b|0;e=m>>>3;L3543:do{if(m>>>0<256){l=c[g+(f+8)>>2]|0;k=c[g+(f+12)>>2]|0;o=13624+(e<<1<<2)|0;do{if((l|0)!=(o|0)){if(l>>>0<j>>>0){cX();return 0}if((c[l+12>>2]|0)==(i|0)){break}cX();return 0}}while(0);if((k|0)==(l|0)){c[3396]=c[3396]&~(1<<e);break}do{if((k|0)==(o|0)){r=k+8|0}else{if(k>>>0<j>>>0){cX();return 0}s=k+8|0;if((c[s>>2]|0)==(i|0)){r=s;break}cX();return 0}}while(0);c[l+12>>2]=k;c[r>>2]=l}else{o=h;s=c[g+(f+24)>>2]|0;t=c[g+(f+12)>>2]|0;do{if((t|0)==(o|0)){u=g+(f+20)|0;v=c[u>>2]|0;if((v|0)==0){w=g+(f+16)|0;x=c[w>>2]|0;if((x|0)==0){y=0;break}else{z=x;A=w}}else{z=v;A=u}while(1){u=z+20|0;v=c[u>>2]|0;if((v|0)!=0){z=v;A=u;continue}u=z+16|0;v=c[u>>2]|0;if((v|0)==0){break}else{z=v;A=u}}if(A>>>0<j>>>0){cX();return 0}else{c[A>>2]=0;y=z;break}}else{u=c[g+(f+8)>>2]|0;if(u>>>0<j>>>0){cX();return 0}v=u+12|0;if((c[v>>2]|0)!=(o|0)){cX();return 0}w=t+8|0;if((c[w>>2]|0)==(o|0)){c[v>>2]=t;c[w>>2]=u;y=t;break}else{cX();return 0}}}while(0);if((s|0)==0){break}t=g+(f+28)|0;l=13888+(c[t>>2]<<2)|0;do{if((o|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[3397]=c[3397]&~(1<<c[t>>2]);break L3543}else{if(s>>>0<(c[3400]|0)>>>0){cX();return 0}k=s+16|0;if((c[k>>2]|0)==(o|0)){c[k>>2]=y}else{c[s+20>>2]=y}if((y|0)==0){break L3543}}}while(0);if(y>>>0<(c[3400]|0)>>>0){cX();return 0}c[y+24>>2]=s;o=c[g+(f+16)>>2]|0;do{if((o|0)!=0){if(o>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[y+16>>2]=o;c[o+24>>2]=y;break}}}while(0);o=c[g+(f+20)>>2]|0;if((o|0)==0){break}if(o>>>0<(c[3400]|0)>>>0){cX();return 0}else{c[y+20>>2]=o;c[o+24>>2]=y;break}}}while(0);if(q>>>0<16){c[d>>2]=p|c[d>>2]&1|2;y=g+(p|4)|0;c[y>>2]=c[y>>2]|1;n=a;return n|0}else{c[d>>2]=c[d>>2]&1|b|2;c[g+(b+4)>>2]=q|3;d=g+(p|4)|0;c[d>>2]=c[d>>2]|1;nR(g+b|0,q);n=a;return n|0}return 0}
function dV(a){a=a|0;var b=0;b=i;i=i+a|0;i=i+7&-8;return b|0}function dW(){return i|0}function dX(a){a=a|0;i=a}function dY(a,b){a=a|0;b=b|0;if((x|0)==0){x=a;y=b}}function dZ(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0]}function d_(b){b=b|0;a[k]=a[b];a[k+1|0]=a[b+1|0];a[k+2|0]=a[b+2|0];a[k+3|0]=a[b+3|0];a[k+4|0]=a[b+4|0];a[k+5|0]=a[b+5|0];a[k+6|0]=a[b+6|0];a[k+7|0]=a[b+7|0]}function d$(a){a=a|0;K=a}function d0(a){a=a|0;L=a}function d1(a){a=a|0;M=a}function d2(a){a=a|0;N=a}function d3(a){a=a|0;O=a}function d4(a){a=a|0;P=a}function d5(a){a=a|0;Q=a}function d6(a){a=a|0;R=a}function d7(a){a=a|0;S=a}function d8(a){a=a|0;T=a}function d9(){c[1082]=44;c[1083]=186;c[1084]=92;c[1090]=284;c[1091]=246;c[1092]=42;c[1098]=116;c[1099]=28;c[1100]=44;c[1106]=116;c[1107]=388;c[1108]=44;c[1114]=152;c[1115]=10;c[1116]=142;c[1122]=152;c[1123]=26;c[1124]=142;c[1130]=250;c[1131]=138;c[1132]=78;c[1133]=2;c[1134]=10;c[1140]=376;c[1141]=272;c[1142]=78;c[1143]=4;c[1144]=16;c[1150]=244;c[1151]=274;c[1152]=78;c[1153]=8;c[1154]=12;c[1160]=378;c[1161]=216;c[1162]=78;c[1163]=6;c[1164]=10;c[1170]=372;c[1171]=150;c[1172]=78;c[1173]=2;c[1178]=242;c[1179]=178;c[1180]=78;c[1181]=4;c[1186]=64;c[1187]=180;c[1188]=78;c[1189]=158;c[1190]=4;c[1191]=40;c[1192]=6;c[1193]=24;c[1194]=66;c[1195]=2;c[1198]=20;c[1199]=10;c[1200]=38;c[1201]=14;c[1202]=2;c[1203]=34;c[1204]=164;c[1210]=356;c[1211]=330;c[1212]=78;c[1213]=18;c[1214]=18;c[1215]=72;c[1216]=32;c[1217]=22;c[1218]=2;c[1219]=4;c[1222]=78;c[1223]=138;c[1224]=150;c[1225]=162;c[1226]=124;c[1227]=52;c[1228]=64;c[1234]=124;c[1235]=278;c[1236]=78;c[1237]=56;c[1238]=46;c[1239]=12;c[1240]=68;c[1241]=80;c[1246]=100;c[1247]=108;c[1248]=78;c[1249]=50;c[1250]=108;c[1251]=22;c[1252]=86;c[1253]=2;c[1258]=360;c[1259]=2;c[1260]=78;c[1261]=38;c[1262]=36;c[1263]=102;c[1268]=72;c[1269]=308;c[1270]=78;c[1271]=18;c[1272]=14;c[1273]=32;c[1278]=318;c[1279]=182;c[1284]=40;c[1285]=214;c[1286]=44;c[1292]=8;c[1293]=256;c[1294]=78;c[1295]=8;c[1296]=6;c[1297]=14;c[1298]=4;c[1299]=12;c[1300]=4;c[1301]=2;c[1302]=12;c[1308]=156;c[1309]=22;c[1310]=78;c[1311]=24;c[1312]=28;c[1313]=44;c[1314]=26;c[1315]=42;c[1316]=8;c[1317]=6;c[1318]=22;c[1324]=66;c[1325]=32;c[1326]=78;c[1327]=58;c[1328]=56;c[1329]=48;c[1330]=50;c[1331]=38;c[1332]=54;c[1333]=46;c[1334]=64;c[1335]=62;c[1336]=60;c[1337]=30;c[1342]=86;c[1343]=6;c[1344]=78;c[1345]=68;c[1346]=82;c[1347]=76;c[1348]=78;c[1349]=70;c[1350]=80;c[1351]=74;c[1352]=88;c[1353]=86;c[1354]=84;c[1355]=52;c[1360]=120;c[1361]=148;c[1362]=78;c[1363]=14;c[1364]=26;c[1365]=24;c[1370]=36;c[1371]=258;c[1372]=78;c[1373]=26;c[1374]=34;c[1375]=6;c[1380]=14;c[1381]=270;c[1382]=78;c[1383]=2;c[1384]=12;c[1385]=22;c[1386]=156;c[1387]=130;c[1388]=36;c[1389]=146;c[1394]=262;c[1395]=204;c[1396]=78;c[1397]=14;c[1398]=16;c[1399]=30;c[1400]=60;c[1401]=8;c[1402]=32;c[1403]=120;c[1408]=262;c[1409]=134;c[1410]=78;c[1411]=6;c[1412]=4;c[1413]=10;c[1414]=128;c[1415]=72;c[1416]=18;c[1417]=168;c[1422]=262;c[1423]=160;c[1424]=78;c[1425]=8;c[1426]=10;c[1427]=34;c[1428]=30;c[1429]=88;c[1430]=16;c[1431]=174;c[1436]=262;c[1437]=52;c[1438]=78;c[1444]=94;c[1445]=196;c[1446]=78;c[1452]=262;c[1453]=130;c[1454]=78;c[1455]=34;c[1456]=4;c[1457]=16;c[1458]=34;c[1459]=32;c[1460]=46;c[1461]=56;c[1462]=10;c[1463]=10;c[1464]=24;c[1465]=20;c[1466]=8;c[1472]=386;c[1473]=56;c[1474]=78;c[1475]=20;c[1476]=8;c[1477]=42;c[1478]=58;c[1479]=18;c[1480]=20;c[1481]=40;c[1482]=20;c[1489]=302;c[1490]=282;c[1494]=46;c[1495]=162;c[1500]=112;c[1501]=326;c[1502]=98;c[1503]=30;c[1504]=28;c[1505]=56;c[1506]=32;c[1513]=292;c[1514]=380;c[1518]=74;c[1519]=98;c[1523]=290;c[1524]=296;c[1530]=262;c[1531]=140;c[1532]=78;c[1533]=8;c[1534]=10;c[1535]=34;c[1536]=30;c[1537]=88;c[1538]=16;c[1539]=174;c[1544]=262;c[1545]=248;c[1546]=78;c[1547]=8;c[1548]=10;c[1549]=34;c[1550]=30;c[1551]=88;c[1552]=16;c[1553]=174;c[1558]=80;c[1559]=316;c[1560]=98;c[1561]=62;c[1562]=30;c[1563]=4;c[1564]=58;c[1565]=110;c[1566]=32;c[1567]=160;c[1568]=12;c[1569]=60;c[1570]=30;c[1571]=34;c[1576]=200;c[1577]=342;c[1578]=36;c[1579]=36;c[1580]=16;c[1581]=28;c[1582]=112;c[1583]=132;c[1584]=54;c[1585]=26;c[1586]=24;c[1587]=12;c[1588]=4;c[1589]=52;c[1594]=12;c[1595]=188;c[1596]=98;c[1597]=62;c[1598]=34;c[1599]=24;c[1600]=58;c[1601]=110;c[1602]=32;c[1603]=6;c[1604]=12;c[1605]=66;c[1606]=30;c[1607]=50;c[1612]=158;c[1613]=346;c[1614]=6;c[1615]=30;c[1616]=28;c[1617]=56;c[1618]=6;c[1625]=238;c[1626]=260;c[1630]=166;c[1631]=42;c[1637]=70;c[1638]=306;c[1642]=226;c[1643]=198;c[1649]=320;c[1650]=344;c[1654]=176;c[1655]=288;c[1661]=142;c[1662]=390;c[1666]=264;c[1667]=340;c[1673]=174;c[1674]=300;c[1678]=212;c[1679]=84;c[1684]=310;c[1685]=104;c[1686]=72;c[1687]=44;c[1688]=18;c[1689]=6;c[1690]=54;c[1691]=110;c[1692]=32;c[1693]=118;c[1694]=12;c[1695]=38;c[1696]=30;c[1697]=64;c[1702]=298;c[1703]=266;c[1704]=44;c[1710]=362;c[1711]=334;c[1712]=26;c[1713]=36;c[1714]=16;c[1715]=28;c[1716]=68;c[1717]=132;c[1718]=54;c[1719]=26;c[1720]=24;c[1721]=12;c[1722]=4;c[1723]=68;c[1728]=236;c[1729]=304;c[1730]=56;c[1731]=62;c[1732]=34;c[1733]=24;c[1734]=114;c[1735]=110;c[1736]=32;c[1737]=6;c[1738]=12;c[1739]=66;c[1740]=30;c[1741]=30;c[1746]=106;c[1747]=222;c[1748]=78;c[1749]=76;c[1750]=152;c[1751]=54;c[1752]=132;c[1753]=6;c[1754]=50;c[1755]=62;c[1756]=42;c[1757]=64;c[1762]=170;c[1763]=92;c[1764]=78;c[1765]=144;c[1766]=4;c[1767]=106;c[1768]=122;c[1769]=126;c[1770]=44;c[1771]=148;c[1772]=82;c[1773]=14;c[1778]=332;c[1779]=184;c[1780]=78;c[1781]=16;c[1782]=70;c[1783]=8;c[1784]=74;c[1785]=134;c[1786]=84;c[1787]=122;c[1788]=90;c[1789]=24;c[1794]=122;c[1795]=254;c[1796]=78;c[1797]=134;c[1798]=140;c[1799]=48;c[1800]=114;c[1801]=46;c[1802]=38;c[1803]=100;c[1804]=110;c[1805]=108;c[1810]=144;c[1811]=20;c[1812]=62;c[1813]=36;c[1814]=16;c[1815]=28;c[1816]=112;c[1817]=132;c[1818]=54;c[1819]=82;c[1820]=106;c[1821]=24;c[1822]=4;c[1823]=52;c[1828]=18;c[1829]=322;c[1830]=104;c[1831]=62;c[1832]=34;c[1833]=24;c[1834]=58;c[1835]=110;c[1836]=32;c[1837]=126;c[1838]=22;c[1839]=2;c[1840]=30;c[1841]=50;c[1846]=202;c[1847]=230;c[1848]=66;c[1854]=370;c[1855]=286;c[1856]=102;c[1857]=234;c[1858]=16;c[1859]=2;c[1860]=6;c[1861]=12;c[q+8>>2]=370;c[q+12>>2]=358;c[q+16>>2]=102;c[q+20>>2]=234;c[q+24>>2]=16;c[q+28>>2]=10;c[q+32>>2]=2;c[q+36>>2]=10;c[p+8>>2]=370;c[p+12>>2]=136;c[p+16>>2]=102;c[p+20>>2]=234;c[p+24>>2]=16;c[p+28>>2]=32;c[p+32>>2]=4;c[p+36>>2]=20;c[1866]=336;c[1867]=294;c[1868]=368;c[1869]=2;c[1874]=366;c[1875]=172;c[1876]=2;c[1877]=24;c[1878]=314;c[1884]=364;c[1885]=34;c[1888]=5956;c[1889]=12884;c[1890]=12904;c[1891]=5976;c[1892]=6052;c[1893]=12964;c[1894]=13028;c[1895]=13048;c[1896]=12924;c[1897]=12944;c[1898]=13004;c[1899]=12984;c[1900]=6092;c[1901]=6072;c[1902]=6500;c[1903]=13068;c[1904]=13088;c[1905]=6520;c[2774]=p+8;c[2775]=7624;c[2776]=p+8;c[2777]=7640;c[2778]=q+8;c[2779]=7656;c[2782]=q+8;c[2783]=7672;c[2786]=q+8;c[2787]=7688;c[2790]=q+8;c[2791]=7712;c[2794]=q+8;c[2795]=7736;c[2798]=q+8;c[2799]=7760;c[2802]=p+8;c[2803]=7776;c[2804]=7416;c[2805]=7800;c[2812]=7416;c[2813]=7872;c[2820]=7416;c[2821]=7944;c[2828]=7416;c[2829]=8016;c[2836]=q+8;c[2837]=8088;c[2840]=q+8;c[2841]=8136;c[2844]=7416;c[2845]=8184;c[2850]=7416;c[2851]=8208;c[2856]=7416;c[2857]=8232;c[2862]=7416;c[2863]=8256;c[2868]=7416;c[2869]=8280;c[2876]=7416;c[2877]=8352;c[2884]=7416;c[2885]=8424;c[2894]=7416;c[2895]=8496;c[2904]=q+8;c[2905]=8568;c[2908]=q+8;c[2909]=8592;c[2912]=7416;c[2913]=8616;c[2920]=7416;c[2921]=8640;c[2928]=p+8;c[2929]=8664;c[2930]=q+8;c[2931]=8688;c[2934]=7416;c[2935]=8720;c[2942]=7416;c[2943]=8792;c[2950]=7416;c[2951]=8864;c[2958]=7416;c[2959]=8936;c[2966]=q+8;c[2967]=9008;c[2970]=q+8;c[2971]=9032;c[2974]=7416;c[2975]=9056;c[2982]=7416;c[2983]=9096;c[2990]=7416;c[2991]=9136;c[2998]=7416;c[2999]=9176;c[3006]=q+8;c[3007]=9216;c[3010]=q+8;c[3011]=9240;c[3014]=7416;c[3015]=9264;c[3022]=7416;c[3023]=9288;c[3030]=p+8;c[3031]=9312;c[3032]=p+8;c[3033]=9352;c[3034]=q+8;c[3035]=9392;c[3038]=q+8;c[3039]=9464;c[3042]=q+8;c[3043]=9496;c[3046]=q+8;c[3047]=9568;c[3050]=q+8;c[3051]=9608;c[3054]=q+8;c[3055]=9648;c[3058]=p+8;c[3059]=9720;c[3060]=p+8;c[3061]=9776;c[3062]=p+8;c[3063]=9832;c[3064]=7416;c[3065]=9864;c[3072]=q+8;c[3073]=9912;c[3076]=p+8;c[3077]=9960;c[3078]=p+8;c[3079]=9992;c[3080]=p+8;c[3081]=10024;c[3082]=p+8;c[3083]=10056;c[3084]=7416;c[3085]=10080;c[3090]=7416;c[3091]=10128;c[3096]=7416;c[3097]=10176;c[3102]=7416;c[3103]=10224;c[3108]=q+8;c[3109]=10272;c[3112]=q+8;c[3113]=10320;c[3116]=p+8;c[3117]=10344;c[3118]=q+8;c[3119]=10368;c[3122]=q+8;c[3123]=10392;c[3126]=q+8;c[3127]=10424;c[3130]=p+8;c[3131]=10456;c[3132]=p+8;c[3133]=10488;c[3134]=p+8;c[3135]=10520;c[3136]=p+8;c[3137]=10552;c[3138]=7416;c[3139]=10584;c[3146]=7416;c[3147]=10616;c[3154]=7416;c[3155]=10648;c[3162]=7416;c[3163]=10680;c[3170]=p+8;c[3171]=10712;c[3172]=p+8;c[3173]=10736;c[3174]=p+8;c[3175]=10760;c[3176]=q+8;c[3177]=10784;c[3180]=q+8;c[3181]=10808;c[3184]=q+8;c[3185]=10832;c[3188]=q+8;c[3189]=10848;c[3192]=q+8;c[3193]=10888;c[3196]=q+8;c[3197]=10928;c[3200]=q+8;c[3201]=10968;c[3204]=p+8;c[3205]=11008;c[3206]=p+8;c[3207]=11016;c[3208]=q+8;c[3209]=11024;c[3212]=q+8;c[3213]=11056;c[3216]=p+8;c[3217]=11080;c[3221]=320;c[3222]=344;c[3226]=176;c[3227]=288;c[3231]=320;c[3232]=344;c[3236]=176;c[3237]=288;c[3241]=374;c[3242]=268;c[3246]=350;c[3247]=328;c[3251]=218;c[3252]=164;c[3257]=174;c[3258]=300;c[3262]=212;c[3263]=84;c[3267]=174;c[3268]=300;c[3272]=212;c[3273]=84}function ea(){var a=0,b=0;a=c[4404]|0;if((a|0)!=0){b=a;return b|0}a=nS(24)|0;c[a>>2]=7536;n0(a+4|0,0,20);c[4404]=a;eb(0);b=c[4404]|0;return b|0}function eb(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0;b=i;i=i+104|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=b+40|0;j=b+56|0;k=b+72|0;l=b+88|0;if((cI()|0)==0){eD(3872,3856,104)}m=eT()|0;gG(g,2672,11);eA(f,m|0,g);m=c[f>>2]|0;if((m|0)==0){n=0}else{n=c[m+20>>2]|0}gI(g);g=eT()|0;gG(h,2376,12);eA(e,g|0,h);g=c[e>>2]|0;if((g|0)==0){o=0}else{o=c[g+20>>2]|0}gI(h);h=eT()|0;gG(k,1632,11);n0(l|0,0,12);ez(d,h+60|0,k);h=c[d>>2]|0;if((h|0)==0){x=0;aq(94,j|0,l|0);if(!x){p=15}else{x=0;p=25}}else{x=0;aq(94,j|0,h+20|0);if(!x){p=15}else{x=0;p=25}}do{if((p|0)==15){x=0;ap(384,l|0);if(x){x=0;h=cu(-1,-1)|0;q=K;r=h;break}gI(k);x=0,aI(4,n|0,o|0,5,6,5,0,0,0,65537)|0;do{if(!x){if((a[j]&1)==0){s=j+1|0}else{s=c[j+8>>2]|0}x=0;ap(110,s|0);if(x){x=0;break}x=0;ap(382,112);if(x){x=0;break}x=0;aN(2,0,0,n|0,o|0);if(x){x=0;break}gI(j);i=b;return}else{x=0}}while(0);h=cu(-1,-1)|0;d=K;x=0;ap(384,j|0);if(!x){t=d;u=h;v=u;w=0;y=v;z=t;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}else if((p|0)==25){h=cu(-1,-1)|0;d=K;x=0;ap(384,l|0);if(!x){q=d;r=h;break}else{x=0}A=cu(-1,-1,0)|0;B=K;cA()}}while(0);x=0;ap(384,k|0);if(!x){t=q;u=r;v=u;w=0;y=v;z=t;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}function ec(a){a=a|0;var b=0;c[a>>2]=7536;if((c[a+4>>2]|0)==0){b=a;nU(b);return}x=0;aK(10);if(!x){b=a;nU(b);return}else{x=0;b=cu(-1,-1)|0;nU(a);bk(b|0)}}function ed(a){a=a|0;var b=0;c[a>>2]=7536;b=a+4|0;if((c[b>>2]|0)==0){return}br();c[b>>2]=0;return}function ee(a,b){a=a|0;b=b|0;return}function ef(a){a=a|0;eg(a);eh(a);br();c[a+4>>2]=0;return}function eg(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0.0,O=0,P=0,Q=0,R=0.0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;b=i;i=i+192|0;d=b|0;e=b+16|0;f=b+32|0;h=b+48|0;j=b+64|0;k=b+80|0;l=b+96|0;m=b+112|0;n=b+128|0;o=b+144|0;p=b+160|0;q=b+176|0;g[a+16>>2]=0.0;g[a+20>>2]=.01666666753590107;a=eT()|0;gG(d,328,10);r=(x=0,aF(22,a|0,d|0)|0);if(x){x=0;a=cu(-1,-1)|0;s=K;x=0;ap(384,d|0);if(!x){t=a;u=s;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}c[r>>2]=64;gI(d);d=eT()|0;gG(e,3832,20);x=0;aJ(36,f|0,3608,18);L63:do{if(!x){r=(x=0,aF(14,d+60|0,e|0)|0);do{if(!x){x=0,aF(48,r|0,f|0)|0;if(x){x=0;break}x=0;ap(384,f|0);if(x){x=0;C=66;break L63}gI(e);s=eT()|0;gG(h,3288,22);x=0;aJ(36,j|0,3128,18);L69:do{if(!x){a=(x=0,aF(14,s+60|0,h|0)|0);do{if(!x){x=0,aF(48,a|0,j|0)|0;if(x){x=0;break}x=0;ap(384,j|0);if(x){x=0;C=69;break L69}gI(h);D=eT()|0;gG(k,2992,14);x=0;aJ(36,l|0,2928,16);L75:do{if(!x){E=(x=0,aF(14,D+60|0,k|0)|0);do{if(!x){x=0,aF(48,E|0,l|0)|0;if(x){x=0;break}x=0;ap(384,l|0);if(x){x=0;C=72;break L75}gI(k);F=eT()|0;gG(m,2872,13);G=(x=0,aF(22,F|0,m|0)|0);if(x){x=0;F=cu(-1,-1)|0;H=K;x=0;ap(384,m|0);if(!x){t=F;u=H;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}c[G>>2]=1;gI(m);G=eT()|0;gG(n,2808,9);H=(x=0,aF(22,G|0,n|0)|0);if(x){x=0;G=cu(-1,-1)|0;F=K;x=0;ap(384,n|0);if(!x){t=G;u=F;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}c[H>>2]=1;gI(n);H=nN(2304)|0;if((H|0)==0){eD(2752,3856,262)}F=H;G=H+1024|0;I=H+2048|0;J=I;n0(G|0,0,1024);L=0;do{M=L<<2;N=+((L<<1)-4|0)*100.0*.25;O=0;do{P=O+M|0;Q=P<<2;R=+((O<<1)-4|0)*100.0*.25;g[J+(Q<<2)>>2]=+(b7()|0)*32.0*4.656612873077393e-10+6.0;S=P<<4;g[F+(S<<2)>>2]=N;g[F+((S|1)<<2)>>2]=R;g[F+((S|2)<<2)>>2]=-100.0;g[F+((S|3)<<2)>>2]=1.0;S=Q|1;g[J+(S<<2)>>2]=+(b7()|0)*32.0*4.656612873077393e-10+6.0;P=S<<2;g[F+(P<<2)>>2]=N;g[F+((P|1)<<2)>>2]=R;g[F+((P|2)<<2)>>2]=-50.0;g[F+((P|3)<<2)>>2]=1.0;P=Q|2;g[J+(P<<2)>>2]=+(b7()|0)*32.0*4.656612873077393e-10+6.0;S=P<<2;g[F+(S<<2)>>2]=N;g[F+((S|1)<<2)>>2]=R;g[F+((S|2)<<2)>>2]=0.0;g[F+((S|3)<<2)>>2]=1.0;S=Q|3;g[J+(S<<2)>>2]=+(b7()|0)*32.0*4.656612873077393e-10+6.0;Q=S<<2;g[F+(Q<<2)>>2]=N;g[F+((Q|1)<<2)>>2]=R;g[F+((Q|2)<<2)>>2]=50.0;g[F+((Q|3)<<2)>>2]=1.0;O=O+1|0;}while((O|0)<4);L=L+1|0;}while((L|0)<4);L=eT()|0;gG(o,2720,3);F=(x=0,aF(4,L+80|0,o|0)|0);if(x){x=0;L=cu(-1,-1)|0;J=K;x=0;ap(384,o|0);if(!x){t=L;u=J;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}c[F>>2]=H;gI(o);F=eT()|0;gG(p,2664,5);J=(x=0,aF(4,F+80|0,p|0)|0);if(x){x=0;F=cu(-1,-1)|0;L=K;x=0;ap(384,p|0);if(!x){t=F;u=L;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}c[J>>2]=G;gI(p);J=eT()|0;gG(q,2640,8);L=(x=0,aF(4,J+80|0,q|0)|0);if(!x){c[L>>2]=I;gI(q);eC(0);fL(0);i=b;return}else{x=0}L=cu(-1,-1)|0;J=K;x=0;ap(384,q|0);if(!x){t=L;u=J;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}else{x=0}}while(0);E=cu(-1,-1)|0;J=K;x=0;ap(384,l|0);if(!x){T=E;U=J;break}else{x=0}A=cu(-1,-1,0)|0;B=K;cA()}else{x=0;C=72}}while(0);if((C|0)==72){D=cu(-1,-1)|0;T=D;U=K}x=0;ap(384,k|0);if(!x){t=T;u=U;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}else{x=0}}while(0);a=cu(-1,-1)|0;D=K;x=0;ap(384,j|0);if(!x){V=a;W=D;break}else{x=0}A=cu(-1,-1,0)|0;B=K;cA()}else{x=0;C=69}}while(0);if((C|0)==69){s=cu(-1,-1)|0;V=s;W=K}x=0;ap(384,h|0);if(!x){t=V;u=W;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}else{x=0}}while(0);r=cu(-1,-1)|0;s=K;x=0;ap(384,f|0);if(!x){X=r;Y=s;break}else{x=0}A=cu(-1,-1,0)|0;B=K;cA()}else{x=0;C=66}}while(0);if((C|0)==66){C=cu(-1,-1)|0;X=C;Y=K}x=0;ap(384,e|0);if(!x){t=X;u=Y;v=t;w=0;y=v;z=u;bk(y|0)}else{x=0;A=cu(-1,-1,0)|0;B=K;cA()}}function eh(a){a=a|0;var b=0,d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0.0;b=i;i=i+56|0;d=b|0;e=b+8|0;f=b+24|0;h=b+40|0;j=eT()|0;gG(f,1360,16);eA(b+16|0,j|0,f);gI(f);f=eT()|0;gG(h,1096,18);eA(e,f|0,h);f=c[e>>2]|0;if((f|0)==0){k=1}else{k=(c[f+20>>2]|0)==0}gI(h);cl(8)|0;h=a+16|0;f=a+20|0;a=(~~+a3()|0)==0;L148:do{if(k){L150:do{if(!a){e=hW(ei(17104,504)|0,1)|0;g3(d,e+(c[(c[e>>2]|0)-12>>2]|0)|0);j=(x=0,aF(62,d|0,17008)|0);do{if(!x){l=(x=0,aF(c[(c[j>>2]|0)+28>>2]|0,j|0,10)|0);if(x){x=0;break}lC(d);hY(e,l)|0;hH(e)|0;break L150}else{x=0}}while(0);e=cu(-1,-1)|0;m=K;n=e;break L148}}while(0);e=eB()|0;du[c[(c[e>>2]|0)+8>>2]&7](e,+g[h>>2]);e=fK()|0;dE[c[(c[e>>2]|0)+12>>2]&7](e,+g[h>>2],+g[f>>2]);e=eB()|0;dw[c[(c[e>>2]|0)+12>>2]&511](e);o=+g[f>>2]+ +g[h>>2];g[h>>2]=o;i=b;return}else{L159:do{if(!a){e=hW(ei(17104,504)|0,1)|0;g3(d,e+(c[(c[e>>2]|0)-12>>2]|0)|0);j=(x=0,aF(62,d|0,17008)|0);do{if(!x){l=(x=0,aF(c[(c[j>>2]|0)+28>>2]|0,j|0,10)|0);if(x){x=0;break}lC(d);hY(e,l)|0;hH(e)|0;break L159}else{x=0}}while(0);e=cu(-1,-1)|0;m=K;n=e;break L148}}while(0);e=eB()|0;du[c[(c[e>>2]|0)+8>>2]&7](e,+g[h>>2]);e=fK()|0;dE[c[(c[e>>2]|0)+12>>2]&7](e,+g[h>>2],+g[f>>2]);e=eB()|0;dw[c[(c[e>>2]|0)+12>>2]&511](e);o=+g[f>>2]+ +g[h>>2];g[h>>2]=o;i=b;return}}while(0);x=0;ap(228,d|0);if(!x){bk(n|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function ei(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;x=0;aq(130,g|0,b|0);L172:do{if(!x){L174:do{if((a[g|0]&1)!=0){k=n1(d|0)|0;l=b;m=c[(c[l>>2]|0)-12>>2]|0;n=b;c[h>>2]=c[n+(m+24)>>2];o=d+k|0;k=(c[n+(m+4)>>2]&176|0)==32?o:d;p=n+m|0;q=n+(m+76)|0;m=c[q>>2]|0;r=m&255;L176:do{if((m|0)==-1){x=0;aq(96,f|0,p|0);if(x){x=0;s=146;break}t=(x=0,aF(62,f|0,17008)|0);do{if(!x){u=(x=0,aF(c[(c[t>>2]|0)+28>>2]|0,t|0,32)|0);if(x){x=0;break}x=0;ap(228,f|0);if(x){x=0;s=146;break L176}c[q>>2]=u<<24>>24;v=u;s=142;break L176}else{x=0}}while(0);t=cu(-1,-1,0)|0;u=K;x=0;ap(228,f|0);if(!x){w=u;y=t;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}else{v=r;s=142}}while(0);do{if((s|0)==142){x=0;aB(28,j|0,h|0,d|0,k|0,o|0,p|0,v|0);if(x){x=0;s=146;break}if((c[j>>2]|0)!=0){break L174}r=c[(c[l>>2]|0)-12>>2]|0;x=0;aq(100,n+r|0,c[n+(r+16)>>2]|5|0);if(!x){break L174}else{x=0;s=146}}}while(0);if((s|0)==146){p=cu(-1,-1,0)|0;w=K;y=p}x=0;ap(338,g|0);if(!x){z=y;A=l;B=n;break L172}else{x=0}C=cu(-1,-1,0)|0;D=K;cA();return 0}}while(0);x=0;ap(338,g|0);if(x){x=0;s=145;break}i=e;return b|0}else{x=0;s=145}}while(0);if((s|0)==145){s=cu(-1,-1,0)|0;z=s;A=b;B=b}bW(z|0)|0;x=0;ap(224,B+(c[(c[A>>2]|0)-12>>2]|0)|0);if(!x){aU();i=e;return b|0}else{x=0}b=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(b|0)}else{x=0;C=cu(-1,-1,0)|0;D=K;cA();return 0}return 0}function ej(b,d,e,f,g,h,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;k=i;i=i+16|0;l=d;d=i;i=i+4|0;i=i+7&-8;c[d>>2]=c[l>>2];l=k|0;m=d|0;d=c[m>>2]|0;if((d|0)==0){c[b>>2]=0;i=k;return}n=g;g=e;o=n-g|0;p=h+12|0;h=c[p>>2]|0;q=(h|0)>(o|0)?h-o|0:0;o=f;h=o-g|0;do{if((h|0)>0){if((dB[c[(c[d>>2]|0)+48>>2]&127](d,e,h)|0)==(h|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);do{if((q|0)>0){gH(l,q,j);if((a[l]&1)==0){r=l+1|0}else{r=c[l+8>>2]|0}h=(x=0,au(c[(c[d>>2]|0)+48>>2]|0,d|0,r|0,q|0)|0);if(x){x=0;e=cu(-1,-1)|0;x=0;ap(384,l|0);if(!x){bk(e|0)}else{x=0;cu(-1,-1,0)|0;cA()}}if((h|0)==(q|0)){gI(l);break}c[m>>2]=0;c[b>>2]=0;gI(l);i=k;return}}while(0);l=n-o|0;do{if((l|0)>0){if((dB[c[(c[d>>2]|0)+48>>2]&127](d,f,l)|0)==(l|0)){break}c[m>>2]=0;c[b>>2]=0;i=k;return}}while(0);c[p>>2]=0;c[b>>2]=d;i=k;return}function ek(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=a|0;eo(e,g,b);a=c[e>>2]|0;if((a|0)!=0){h=a;j=h+20|0;i=d;return j|0}a=nS(24)|0;e=a;k=a+8|0;do{if((k|0)!=0){x=0;aq(94,k|0,b|0);if(!x){break}else{x=0}l=cu(-1,-1)|0;if((a|0)==0){bk(l|0)}nU(a);bk(l|0)}}while(0);b=a+20|0;if((b|0)!=0){c[b>>2]=0}x=0;aJ(10,f|0,g|0,e|0);if(!x){h=c[f>>2]|0;j=h+20|0;i=d;return j|0}else{x=0}j=cu(-1,-1)|0;if((a|0)==0){bk(j|0)}x=0;ap(384,k|0);if(x){x=0;k=cu(-1,-1)|0;b2(k|0);return 0}nU(a);bk(j|0);return 0}function el(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0;h=f+8|0;i=h;j=a[h]|0;h=(j&1)==0;if(h){k=i+1|0}else{k=c[f+16>>2]|0}l=j&255;j=(l&1|0)==0;if(j){m=l>>>1}else{m=c[f+12>>2]|0}if(m>>>0>3){n=m;o=k;p=m;while(1){q=o;r=ag(d[q]|d[q+1|0]<<8|d[q+2|0]<<16|d[q+3|0]<<24|0,1540483477)|0;q=ag(r>>>24^r,1540483477)|0;r=q^(ag(n,1540483477)|0);q=o+4|0;s=p-4|0;if(s>>>0>3){n=r;o=q;p=s}else{t=r;u=q;v=s;break}}}else{t=m;u=k;v=m}if((v|0)==3){w=d[u+2|0]<<16^t;x=217}else if((v|0)==2){w=t;x=217}else if((v|0)==1){y=t;x=218}else{z=t}if((x|0)==217){y=d[u+1|0]<<8^w;x=218}if((x|0)==218){z=ag(d[u]^y,1540483477)|0}y=ag(z>>>13^z,1540483477)|0;z=y>>>15^y;y=f+4|0;c[y>>2]=z;u=e+4|0;w=c[u>>2]|0;t=(w|0)==0;L284:do{if(t){A=0}else{v=w-1|0;m=(v&w|0)!=0;if(m){B=(z>>>0)%(w>>>0)|0}else{B=z&v}k=c[(c[e>>2]|0)+(B<<2)>>2]|0;if((k|0)==0){A=B;break}p=c[k>>2]|0;if((p|0)==0){A=B;break}k=i+1|0;o=f+16|0;n=f+12|0;s=p;L292:while(1){p=c[s+4>>2]|0;if(m){C=(p>>>0)%(w>>>0)|0}else{C=p&v}if((C|0)!=(B|0)){A=B;break L284}p=s+8|0;q=p;r=a[p]|0;p=r&255;if((p&1|0)==0){D=p>>>1}else{D=c[s+12>>2]|0}if(j){E=l>>>1}else{E=c[n>>2]|0}L307:do{if((D|0)==(E|0)){p=(r&1)==0;if(p){F=q+1|0}else{F=c[s+16>>2]|0}if(h){G=k}else{G=c[o>>2]|0}if(!p){if((n3(F|0,G|0,D|0)|0)==0){H=s;I=0;x=263;break L292}else{break}}if((D|0)==0){H=s;I=0;x=265;break L292}else{J=G;K=F;L=D}while(1){if((a[K]|0)!=(a[J]|0)){break L307}p=L-1|0;if((p|0)==0){H=s;I=0;x=266;break L292}else{J=J+1|0;K=K+1|0;L=p}}}}while(0);q=c[s>>2]|0;if((q|0)==0){A=B;break L284}else{s=q}}if((x|0)==263){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}else if((x|0)==265){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}else if((x|0)==266){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}}}while(0);x=e+12|0;O=+(((c[x>>2]|0)+1|0)>>>0>>>0);P=+g[e+16>>2];do{if(O>+(w>>>0>>>0)*P|t){if(w>>>0>2){Q=(w-1&w|0)!=0|0}else{Q=1}B=Q|w<<1;L=~~+af(+(O/P));em(e,B>>>0<L>>>0?L:B);B=c[u>>2]|0;L=c[y>>2]|0;K=B-1|0;if((K&B|0)==0){R=L&K;S=B;break}else{R=(L>>>0)%(B>>>0)|0;S=B;break}}else{R=A;S=w}}while(0);w=e|0;A=c[(c[w>>2]|0)+(R<<2)>>2]|0;do{if((A|0)==0){y=e+8|0;u=y|0;Q=f|0;c[Q>>2]=c[u>>2];c[u>>2]=f;c[(c[w>>2]|0)+(R<<2)>>2]=y;y=c[Q>>2]|0;if((y|0)==0){break}Q=c[y+4>>2]|0;y=S-1|0;if((y&S|0)==0){T=Q&y}else{T=(Q>>>0)%(S>>>0)|0}c[(c[w>>2]|0)+(T<<2)>>2]=f}else{Q=A|0;c[f>>2]=c[Q>>2];c[Q>>2]=f}}while(0);c[x>>2]=(c[x>>2]|0)+1;H=f;I=1;M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}function em(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;do{if((b|0)==1){d=2}else{if((b-1&b|0)==0){d=b;break}d=gC(b)|0}}while(0);b=c[a+4>>2]|0;if(d>>>0>b>>>0){en(a,d);return}if(d>>>0>=b>>>0){return}do{if(b>>>0>2){if((b-1&b|0)!=0){e=276;break}f=1<<32-(n2(~~+af(+(+((c[a+12>>2]|0)>>>0>>>0)/+g[a+16>>2]))-1|0)|0)}else{e=276}}while(0);if((e|0)==276){f=gC(~~+af(+(+((c[a+12>>2]|0)>>>0>>>0)/+g[a+16>>2])))|0}e=d>>>0<f>>>0?f:d;if(e>>>0>=b>>>0){return}en(a,e);return}function en(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=(d|0)!=0;if(e){f=nS(d<<2)|0}else{f=0}g=b|0;h=c[g>>2]|0;c[g>>2]=f;if((h|0)!=0){nU(h)}c[b+4>>2]=d;if(e){i=0}else{return}do{c[(c[g>>2]|0)+(i<<2)>>2]=0;i=i+1|0;}while(i>>>0<d>>>0);i=b+8|0;b=c[i>>2]|0;if((b|0)==0){return}e=c[b+4>>2]|0;h=d-1|0;f=(h&d|0)!=0;if(f){j=(e>>>0)%(d>>>0)|0}else{j=e&h}c[(c[g>>2]|0)+(j<<2)>>2]=i;i=b|0;e=c[i>>2]|0;if((e|0)==0){return}else{k=b;l=j;m=i;n=e}L390:while(1){e=k;i=m;j=n;L392:while(1){o=j;while(1){b=c[o+4>>2]|0;if(f){p=(b>>>0)%(d>>>0)|0}else{p=b&h}if((p|0)==(l|0)){break}q=(c[g>>2]|0)+(p<<2)|0;if((c[q>>2]|0)==0){break L392}b=o|0;r=c[b>>2]|0;L402:do{if((r|0)==0){s=b;t=0}else{u=o+8|0;v=a[u]|0;w=v&255;x=(w&1|0)==0;y=w>>>1;w=u+1|0;u=o+16|0;z=o+12|0;A=b;B=r;while(1){if(x){C=y}else{C=c[z>>2]|0}D=B+8|0;E=a[D]|0;F=E&255;if((F&1|0)==0){G=F>>>1}else{G=c[B+12>>2]|0}if((C|0)!=(G|0)){s=A;t=B;break L402}F=(v&1)==0;if(F){H=w}else{H=c[u>>2]|0}if((E&1)==0){I=D+1|0}else{I=c[B+16>>2]|0}do{if(F){if((C|0)==0){break}else{J=I;K=H;L=C}while(1){if((a[K]|0)!=(a[J]|0)){s=A;t=B;break L402}D=L-1|0;if((D|0)==0){break}else{J=J+1|0;K=K+1|0;L=D}}}else{if((n3(H|0,I|0,C|0)|0)!=0){s=A;t=B;break L402}}}while(0);F=B|0;D=c[F>>2]|0;if((D|0)==0){s=F;t=0;break}else{A=F;B=D}}}}while(0);c[i>>2]=t;c[s>>2]=c[c[(c[g>>2]|0)+(p<<2)>>2]>>2];c[c[(c[g>>2]|0)+(p<<2)>>2]>>2]=o;r=c[i>>2]|0;if((r|0)==0){M=330;break L390}else{o=r}}r=o|0;b=c[r>>2]|0;if((b|0)==0){M=328;break L390}else{e=o;i=r;j=b}}c[q>>2]=e;j=o|0;i=c[j>>2]|0;if((i|0)==0){M=329;break}else{k=o;l=p;m=j;n=i}}if((M|0)==328){return}else if((M|0)==329){return}else if((M|0)==330){return}}function eo(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=f;h=a[f]|0;i=(h&1)==0;if(i){j=g+1|0}else{j=c[f+8>>2]|0}k=h&255;h=(k&1|0)==0;if(h){l=k>>>1}else{l=c[f+4>>2]|0}if(l>>>0>3){m=l;n=j;o=l;while(1){p=n;q=ag(d[p]|d[p+1|0]<<8|d[p+2|0]<<16|d[p+3|0]<<24|0,1540483477)|0;p=ag(q>>>24^q,1540483477)|0;q=p^(ag(m,1540483477)|0);p=n+4|0;r=o-4|0;if(r>>>0>3){m=q;n=p;o=r}else{s=q;t=p;u=r;break}}}else{s=l;t=j;u=l}if((u|0)==1){v=s;w=342}else if((u|0)==3){x=d[t+2|0]<<16^s;w=341}else if((u|0)==2){x=s;w=341}else{y=s}if((w|0)==341){v=d[t+1|0]<<8^x;w=342}if((w|0)==342){y=ag(d[t]^v,1540483477)|0}v=ag(y>>>13^y,1540483477)|0;y=v>>>15^v;v=c[e+4>>2]|0;L455:do{if((v|0)!=0){t=v-1|0;w=(t&v|0)!=0;if(w){z=(y>>>0)%(v>>>0)|0}else{z=y&t}x=c[(c[e>>2]|0)+(z<<2)>>2]|0;if((x|0)==0){break}s=c[x>>2]|0;if((s|0)==0){break}x=g+1|0;u=f+8|0;l=f+4|0;j=s;L463:while(1){s=c[j+4>>2]|0;if(w){A=(s>>>0)%(v>>>0)|0}else{A=s&t}if((A|0)!=(z|0)){break L455}s=j+8|0;o=s;n=a[s]|0;s=n&255;if((s&1|0)==0){B=s>>>1}else{B=c[j+12>>2]|0}if(h){C=k>>>1}else{C=c[l>>2]|0}L478:do{if((B|0)==(C|0)){s=(n&1)==0;if(s){D=o+1|0}else{D=c[j+16>>2]|0}if(i){E=x}else{E=c[u>>2]|0}if(!s){if((n3(D|0,E|0,B|0)|0)==0){break L463}else{break}}if((B|0)==0){break L463}else{F=E;G=D;H=B}while(1){if((a[G]|0)!=(a[F]|0)){break L478}s=H-1|0;if((s|0)==0){break L463}else{F=F+1|0;G=G+1|0;H=s}}}}while(0);o=c[j>>2]|0;if((o|0)==0){break L455}else{j=o}}c[b>>2]=j;return}}while(0);c[b>>2]=0;return}function ep(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=a|0;et(e,g,b);a=c[e>>2]|0;if((a|0)!=0){h=a;j=h+20|0;i=d;return j|0}a=nS(32)|0;e=a;k=a+8|0;do{if((k|0)!=0){x=0;aq(94,k|0,b|0);if(!x){break}else{x=0}l=cu(-1,-1)|0;if((a|0)==0){bk(l|0)}nU(a);bk(l|0)}}while(0);b=a+20|0;if((b|0)!=0){n0(b|0,0,12)}x=0;aJ(26,f|0,g|0,e|0);if(!x){h=c[f>>2]|0;j=h+20|0;i=d;return j|0}else{x=0}j=cu(-1,-1)|0;if((a|0)==0){bk(j|0)}x=0;ap(384,b|0);if(x){x=0;m=cu(-1,-1)|0;n=K;o=m;b2(o|0);return 0}x=0;ap(384,k|0);if(x){x=0;m=cu(-1,-1)|0;n=K;o=m;b2(o|0);return 0}nU(a);bk(j|0);return 0}function eq(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0;h=f+8|0;i=h;j=a[h]|0;h=(j&1)==0;if(h){k=i+1|0}else{k=c[f+16>>2]|0}l=j&255;j=(l&1|0)==0;if(j){m=l>>>1}else{m=c[f+12>>2]|0}if(m>>>0>3){n=m;o=k;p=m;while(1){q=o;r=ag(d[q]|d[q+1|0]<<8|d[q+2|0]<<16|d[q+3|0]<<24|0,1540483477)|0;q=ag(r>>>24^r,1540483477)|0;r=q^(ag(n,1540483477)|0);q=o+4|0;s=p-4|0;if(s>>>0>3){n=r;o=q;p=s}else{t=r;u=q;v=s;break}}}else{t=m;u=k;v=m}if((v|0)==3){w=d[u+2|0]<<16^t;x=412}else if((v|0)==2){w=t;x=412}else if((v|0)==1){y=t;x=413}else{z=t}if((x|0)==412){y=d[u+1|0]<<8^w;x=413}if((x|0)==413){z=ag(d[u]^y,1540483477)|0}y=ag(z>>>13^z,1540483477)|0;z=y>>>15^y;y=f+4|0;c[y>>2]=z;u=e+4|0;w=c[u>>2]|0;t=(w|0)==0;L547:do{if(t){A=0}else{v=w-1|0;m=(v&w|0)!=0;if(m){B=(z>>>0)%(w>>>0)|0}else{B=z&v}k=c[(c[e>>2]|0)+(B<<2)>>2]|0;if((k|0)==0){A=B;break}p=c[k>>2]|0;if((p|0)==0){A=B;break}k=i+1|0;o=f+16|0;n=f+12|0;s=p;L555:while(1){p=c[s+4>>2]|0;if(m){C=(p>>>0)%(w>>>0)|0}else{C=p&v}if((C|0)!=(B|0)){A=B;break L547}p=s+8|0;q=p;r=a[p]|0;p=r&255;if((p&1|0)==0){D=p>>>1}else{D=c[s+12>>2]|0}if(j){E=l>>>1}else{E=c[n>>2]|0}L570:do{if((D|0)==(E|0)){p=(r&1)==0;if(p){F=q+1|0}else{F=c[s+16>>2]|0}if(h){G=k}else{G=c[o>>2]|0}if(!p){if((n3(F|0,G|0,D|0)|0)==0){H=s;I=0;x=458;break L555}else{break}}if((D|0)==0){H=s;I=0;x=461;break L555}else{J=G;K=F;L=D}while(1){if((a[K]|0)!=(a[J]|0)){break L570}p=L-1|0;if((p|0)==0){H=s;I=0;x=459;break L555}else{J=J+1|0;K=K+1|0;L=p}}}}while(0);q=c[s>>2]|0;if((q|0)==0){A=B;break L547}else{s=q}}if((x|0)==458){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}else if((x|0)==459){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}else if((x|0)==461){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}}}while(0);x=e+12|0;O=+(((c[x>>2]|0)+1|0)>>>0>>>0);P=+g[e+16>>2];do{if(O>+(w>>>0>>>0)*P|t){if(w>>>0>2){Q=(w-1&w|0)!=0|0}else{Q=1}B=Q|w<<1;L=~~+af(+(O/P));er(e,B>>>0<L>>>0?L:B);B=c[u>>2]|0;L=c[y>>2]|0;K=B-1|0;if((K&B|0)==0){R=L&K;S=B;break}else{R=(L>>>0)%(B>>>0)|0;S=B;break}}else{R=A;S=w}}while(0);w=e|0;A=c[(c[w>>2]|0)+(R<<2)>>2]|0;do{if((A|0)==0){y=e+8|0;u=y|0;Q=f|0;c[Q>>2]=c[u>>2];c[u>>2]=f;c[(c[w>>2]|0)+(R<<2)>>2]=y;y=c[Q>>2]|0;if((y|0)==0){break}Q=c[y+4>>2]|0;y=S-1|0;if((y&S|0)==0){T=Q&y}else{T=(Q>>>0)%(S>>>0)|0}c[(c[w>>2]|0)+(T<<2)>>2]=f}else{Q=A|0;c[f>>2]=c[Q>>2];c[Q>>2]=f}}while(0);c[x>>2]=(c[x>>2]|0)+1;H=f;I=1;M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}function er(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;do{if((b|0)==1){d=2}else{if((b-1&b|0)==0){d=b;break}d=gC(b)|0}}while(0);b=c[a+4>>2]|0;if(d>>>0>b>>>0){es(a,d);return}if(d>>>0>=b>>>0){return}do{if(b>>>0>2){if((b-1&b|0)!=0){e=471;break}f=1<<32-(n2(~~+af(+(+((c[a+12>>2]|0)>>>0>>>0)/+g[a+16>>2]))-1|0)|0)}else{e=471}}while(0);if((e|0)==471){f=gC(~~+af(+(+((c[a+12>>2]|0)>>>0>>>0)/+g[a+16>>2])))|0}e=d>>>0<f>>>0?f:d;if(e>>>0>=b>>>0){return}es(a,e);return}function es(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=(d|0)!=0;if(e){f=nS(d<<2)|0}else{f=0}g=b|0;h=c[g>>2]|0;c[g>>2]=f;if((h|0)!=0){nU(h)}c[b+4>>2]=d;if(e){i=0}else{return}do{c[(c[g>>2]|0)+(i<<2)>>2]=0;i=i+1|0;}while(i>>>0<d>>>0);i=b+8|0;b=c[i>>2]|0;if((b|0)==0){return}e=c[b+4>>2]|0;h=d-1|0;f=(h&d|0)!=0;if(f){j=(e>>>0)%(d>>>0)|0}else{j=e&h}c[(c[g>>2]|0)+(j<<2)>>2]=i;i=b|0;e=c[i>>2]|0;if((e|0)==0){return}else{k=b;l=j;m=i;n=e}L653:while(1){e=k;i=m;j=n;L655:while(1){o=j;while(1){b=c[o+4>>2]|0;if(f){p=(b>>>0)%(d>>>0)|0}else{p=b&h}if((p|0)==(l|0)){break}q=(c[g>>2]|0)+(p<<2)|0;if((c[q>>2]|0)==0){break L655}b=o|0;r=c[b>>2]|0;L665:do{if((r|0)==0){s=b;t=0}else{u=o+8|0;v=a[u]|0;w=v&255;x=(w&1|0)==0;y=w>>>1;w=u+1|0;u=o+16|0;z=o+12|0;A=b;B=r;while(1){if(x){C=y}else{C=c[z>>2]|0}D=B+8|0;E=a[D]|0;F=E&255;if((F&1|0)==0){G=F>>>1}else{G=c[B+12>>2]|0}if((C|0)!=(G|0)){s=A;t=B;break L665}F=(v&1)==0;if(F){H=w}else{H=c[u>>2]|0}if((E&1)==0){I=D+1|0}else{I=c[B+16>>2]|0}do{if(F){if((C|0)==0){break}else{J=I;K=H;L=C}while(1){if((a[K]|0)!=(a[J]|0)){s=A;t=B;break L665}D=L-1|0;if((D|0)==0){break}else{J=J+1|0;K=K+1|0;L=D}}}else{if((n3(H|0,I|0,C|0)|0)!=0){s=A;t=B;break L665}}}while(0);F=B|0;D=c[F>>2]|0;if((D|0)==0){s=F;t=0;break}else{A=F;B=D}}}}while(0);c[i>>2]=t;c[s>>2]=c[c[(c[g>>2]|0)+(p<<2)>>2]>>2];c[c[(c[g>>2]|0)+(p<<2)>>2]>>2]=o;r=c[i>>2]|0;if((r|0)==0){M=525;break L653}else{o=r}}r=o|0;b=c[r>>2]|0;if((b|0)==0){M=521;break L653}else{e=o;i=r;j=b}}c[q>>2]=e;j=o|0;i=c[j>>2]|0;if((i|0)==0){M=520;break}else{k=o;l=p;m=j;n=i}}if((M|0)==520){return}else if((M|0)==521){return}else if((M|0)==525){return}}function et(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=f;h=a[f]|0;i=(h&1)==0;if(i){j=g+1|0}else{j=c[f+8>>2]|0}k=h&255;h=(k&1|0)==0;if(h){l=k>>>1}else{l=c[f+4>>2]|0}if(l>>>0>3){m=l;n=j;o=l;while(1){p=n;q=ag(d[p]|d[p+1|0]<<8|d[p+2|0]<<16|d[p+3|0]<<24|0,1540483477)|0;p=ag(q>>>24^q,1540483477)|0;q=p^(ag(m,1540483477)|0);p=n+4|0;r=o-4|0;if(r>>>0>3){m=q;n=p;o=r}else{s=q;t=p;u=r;break}}}else{s=l;t=j;u=l}if((u|0)==2){v=s;w=536}else if((u|0)==1){x=s;w=537}else if((u|0)==3){v=d[t+2|0]<<16^s;w=536}else{y=s}if((w|0)==536){x=d[t+1|0]<<8^v;w=537}if((w|0)==537){y=ag(d[t]^x,1540483477)|0}x=ag(y>>>13^y,1540483477)|0;y=x>>>15^x;x=c[e+4>>2]|0;L718:do{if((x|0)!=0){t=x-1|0;w=(t&x|0)!=0;if(w){z=(y>>>0)%(x>>>0)|0}else{z=y&t}v=c[(c[e>>2]|0)+(z<<2)>>2]|0;if((v|0)==0){break}s=c[v>>2]|0;if((s|0)==0){break}v=g+1|0;u=f+8|0;l=f+4|0;j=s;L726:while(1){s=c[j+4>>2]|0;if(w){A=(s>>>0)%(x>>>0)|0}else{A=s&t}if((A|0)!=(z|0)){break L718}s=j+8|0;o=s;n=a[s]|0;s=n&255;if((s&1|0)==0){B=s>>>1}else{B=c[j+12>>2]|0}if(h){C=k>>>1}else{C=c[l>>2]|0}L741:do{if((B|0)==(C|0)){s=(n&1)==0;if(s){D=o+1|0}else{D=c[j+16>>2]|0}if(i){E=v}else{E=c[u>>2]|0}if(!s){if((n3(D|0,E|0,B|0)|0)==0){break L726}else{break}}if((B|0)==0){break L726}else{F=E;G=D;H=B}while(1){if((a[G]|0)!=(a[F]|0)){break L741}s=H-1|0;if((s|0)==0){break L726}else{F=F+1|0;G=G+1|0;H=s}}}}while(0);o=c[j>>2]|0;if((o|0)==0){break L718}else{j=o}}c[b>>2]=j;return}}while(0);c[b>>2]=0;return}function eu(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=a|0;ey(e,g,b);a=c[e>>2]|0;if((a|0)!=0){h=a;j=h+20|0;i=d;return j|0}a=nS(24)|0;e=a;k=a+8|0;do{if((k|0)!=0){x=0;aq(94,k|0,b|0);if(!x){break}else{x=0}l=cu(-1,-1)|0;if((a|0)==0){bk(l|0)}nU(a);bk(l|0)}}while(0);b=a+20|0;if((b|0)!=0){c[b>>2]=0}x=0;aJ(14,f|0,g|0,e|0);if(!x){h=c[f>>2]|0;j=h+20|0;i=d;return j|0}else{x=0}j=cu(-1,-1)|0;if((a|0)==0){bk(j|0)}x=0;ap(384,k|0);if(x){x=0;k=cu(-1,-1)|0;b2(k|0);return 0}nU(a);bk(j|0);return 0}function ev(b,e,f){b=b|0;e=e|0;f=f|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0.0,P=0.0,Q=0,R=0,S=0,T=0;h=f+8|0;i=h;j=a[h]|0;h=(j&1)==0;if(h){k=i+1|0}else{k=c[f+16>>2]|0}l=j&255;j=(l&1|0)==0;if(j){m=l>>>1}else{m=c[f+12>>2]|0}if(m>>>0>3){n=m;o=k;p=m;while(1){q=o;r=ag(d[q]|d[q+1|0]<<8|d[q+2|0]<<16|d[q+3|0]<<24|0,1540483477)|0;q=ag(r>>>24^r,1540483477)|0;r=q^(ag(n,1540483477)|0);q=o+4|0;s=p-4|0;if(s>>>0>3){n=r;o=q;p=s}else{t=r;u=q;v=s;break}}}else{t=m;u=k;v=m}if((v|0)==3){w=d[u+2|0]<<16^t;x=604}else if((v|0)==1){y=t;x=605}else if((v|0)==2){w=t;x=604}else{z=t}if((x|0)==604){y=d[u+1|0]<<8^w;x=605}if((x|0)==605){z=ag(d[u]^y,1540483477)|0}y=ag(z>>>13^z,1540483477)|0;z=y>>>15^y;y=f+4|0;c[y>>2]=z;u=e+4|0;w=c[u>>2]|0;t=(w|0)==0;L807:do{if(t){A=0}else{v=w-1|0;m=(v&w|0)!=0;if(m){B=(z>>>0)%(w>>>0)|0}else{B=z&v}k=c[(c[e>>2]|0)+(B<<2)>>2]|0;if((k|0)==0){A=B;break}p=c[k>>2]|0;if((p|0)==0){A=B;break}k=i+1|0;o=f+16|0;n=f+12|0;s=p;L815:while(1){p=c[s+4>>2]|0;if(m){C=(p>>>0)%(w>>>0)|0}else{C=p&v}if((C|0)!=(B|0)){A=B;break L807}p=s+8|0;q=p;r=a[p]|0;p=r&255;if((p&1|0)==0){D=p>>>1}else{D=c[s+12>>2]|0}if(j){E=l>>>1}else{E=c[n>>2]|0}L830:do{if((D|0)==(E|0)){p=(r&1)==0;if(p){F=q+1|0}else{F=c[s+16>>2]|0}if(h){G=k}else{G=c[o>>2]|0}if(!p){if((n3(F|0,G|0,D|0)|0)==0){H=s;I=0;x=651;break L815}else{break}}if((D|0)==0){H=s;I=0;x=653;break L815}else{J=G;K=F;L=D}while(1){if((a[K]|0)!=(a[J]|0)){break L830}p=L-1|0;if((p|0)==0){H=s;I=0;x=652;break L815}else{J=J+1|0;K=K+1|0;L=p}}}}while(0);q=c[s>>2]|0;if((q|0)==0){A=B;break L807}else{s=q}}if((x|0)==651){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}else if((x|0)==652){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}else if((x|0)==653){M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}}}while(0);x=e+12|0;O=+(((c[x>>2]|0)+1|0)>>>0>>>0);P=+g[e+16>>2];do{if(O>+(w>>>0>>>0)*P|t){if(w>>>0>2){Q=(w-1&w|0)!=0|0}else{Q=1}B=Q|w<<1;L=~~+af(+(O/P));ew(e,B>>>0<L>>>0?L:B);B=c[u>>2]|0;L=c[y>>2]|0;K=B-1|0;if((K&B|0)==0){R=L&K;S=B;break}else{R=(L>>>0)%(B>>>0)|0;S=B;break}}else{R=A;S=w}}while(0);w=e|0;A=c[(c[w>>2]|0)+(R<<2)>>2]|0;do{if((A|0)==0){y=e+8|0;u=y|0;Q=f|0;c[Q>>2]=c[u>>2];c[u>>2]=f;c[(c[w>>2]|0)+(R<<2)>>2]=y;y=c[Q>>2]|0;if((y|0)==0){break}Q=c[y+4>>2]|0;y=S-1|0;if((y&S|0)==0){T=Q&y}else{T=(Q>>>0)%(S>>>0)|0}c[(c[w>>2]|0)+(T<<2)>>2]=f}else{Q=A|0;c[f>>2]=c[Q>>2];c[Q>>2]=f}}while(0);c[x>>2]=(c[x>>2]|0)+1;H=f;I=1;M=b|0;c[M>>2]=H;N=b+4|0;a[N]=I;return}function ew(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;do{if((b|0)==1){d=2}else{if((b-1&b|0)==0){d=b;break}d=gC(b)|0}}while(0);b=c[a+4>>2]|0;if(d>>>0>b>>>0){ex(a,d);return}if(d>>>0>=b>>>0){return}do{if(b>>>0>2){if((b-1&b|0)!=0){e=663;break}f=1<<32-(n2(~~+af(+(+((c[a+12>>2]|0)>>>0>>>0)/+g[a+16>>2]))-1|0)|0)}else{e=663}}while(0);if((e|0)==663){f=gC(~~+af(+(+((c[a+12>>2]|0)>>>0>>>0)/+g[a+16>>2])))|0}e=d>>>0<f>>>0?f:d;if(e>>>0>=b>>>0){return}ex(a,e);return}function ex(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;e=(d|0)!=0;if(e){f=nS(d<<2)|0}else{f=0}g=b|0;h=c[g>>2]|0;c[g>>2]=f;if((h|0)!=0){nU(h)}c[b+4>>2]=d;if(e){i=0}else{return}do{c[(c[g>>2]|0)+(i<<2)>>2]=0;i=i+1|0;}while(i>>>0<d>>>0);i=b+8|0;b=c[i>>2]|0;if((b|0)==0){return}e=c[b+4>>2]|0;h=d-1|0;f=(h&d|0)!=0;if(f){j=(e>>>0)%(d>>>0)|0}else{j=e&h}c[(c[g>>2]|0)+(j<<2)>>2]=i;i=b|0;e=c[i>>2]|0;if((e|0)==0){return}else{k=b;l=j;m=i;n=e}L913:while(1){e=k;i=m;j=n;L915:while(1){o=j;while(1){b=c[o+4>>2]|0;if(f){p=(b>>>0)%(d>>>0)|0}else{p=b&h}if((p|0)==(l|0)){break}q=(c[g>>2]|0)+(p<<2)|0;if((c[q>>2]|0)==0){break L915}b=o|0;r=c[b>>2]|0;L925:do{if((r|0)==0){s=b;t=0}else{u=o+8|0;v=a[u]|0;w=v&255;x=(w&1|0)==0;y=w>>>1;w=u+1|0;u=o+16|0;z=o+12|0;A=b;B=r;while(1){if(x){C=y}else{C=c[z>>2]|0}D=B+8|0;E=a[D]|0;F=E&255;if((F&1|0)==0){G=F>>>1}else{G=c[B+12>>2]|0}if((C|0)!=(G|0)){s=A;t=B;break L925}F=(v&1)==0;if(F){H=w}else{H=c[u>>2]|0}if((E&1)==0){I=D+1|0}else{I=c[B+16>>2]|0}do{if(F){if((C|0)==0){break}else{J=I;K=H;L=C}while(1){if((a[K]|0)!=(a[J]|0)){s=A;t=B;break L925}D=L-1|0;if((D|0)==0){break}else{J=J+1|0;K=K+1|0;L=D}}}else{if((n3(H|0,I|0,C|0)|0)!=0){s=A;t=B;break L925}}}while(0);F=B|0;D=c[F>>2]|0;if((D|0)==0){s=F;t=0;break}else{A=F;B=D}}}}while(0);c[i>>2]=t;c[s>>2]=c[c[(c[g>>2]|0)+(p<<2)>>2]>>2];c[c[(c[g>>2]|0)+(p<<2)>>2]>>2]=o;r=c[i>>2]|0;if((r|0)==0){M=713;break L913}else{o=r}}r=o|0;b=c[r>>2]|0;if((b|0)==0){M=714;break L913}else{e=o;i=r;j=b}}c[q>>2]=e;j=o|0;i=c[j>>2]|0;if((i|0)==0){M=715;break}else{k=o;l=p;m=j;n=i}}if((M|0)==713){return}else if((M|0)==714){return}else if((M|0)==715){return}}function ey(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=f;h=a[f]|0;i=(h&1)==0;if(i){j=g+1|0}else{j=c[f+8>>2]|0}k=h&255;h=(k&1|0)==0;if(h){l=k>>>1}else{l=c[f+4>>2]|0}if(l>>>0>3){m=l;n=j;o=l;while(1){p=n;q=ag(d[p]|d[p+1|0]<<8|d[p+2|0]<<16|d[p+3|0]<<24|0,1540483477)|0;p=ag(q>>>24^q,1540483477)|0;q=p^(ag(m,1540483477)|0);p=n+4|0;r=o-4|0;if(r>>>0>3){m=q;n=p;o=r}else{s=q;t=p;u=r;break}}}else{s=l;t=j;u=l}if((u|0)==3){v=d[t+2|0]<<16^s;w=728}else if((u|0)==2){v=s;w=728}else if((u|0)==1){x=s;w=729}else{y=s}if((w|0)==728){x=d[t+1|0]<<8^v;w=729}if((w|0)==729){y=ag(d[t]^x,1540483477)|0}x=ag(y>>>13^y,1540483477)|0;y=x>>>15^x;x=c[e+4>>2]|0;L978:do{if((x|0)!=0){t=x-1|0;w=(t&x|0)!=0;if(w){z=(y>>>0)%(x>>>0)|0}else{z=y&t}v=c[(c[e>>2]|0)+(z<<2)>>2]|0;if((v|0)==0){break}s=c[v>>2]|0;if((s|0)==0){break}v=g+1|0;u=f+8|0;l=f+4|0;j=s;L986:while(1){s=c[j+4>>2]|0;if(w){A=(s>>>0)%(x>>>0)|0}else{A=s&t}if((A|0)!=(z|0)){break L978}s=j+8|0;o=s;n=a[s]|0;s=n&255;if((s&1|0)==0){B=s>>>1}else{B=c[j+12>>2]|0}if(h){C=k>>>1}else{C=c[l>>2]|0}L1001:do{if((B|0)==(C|0)){s=(n&1)==0;if(s){D=o+1|0}else{D=c[j+16>>2]|0}if(i){E=v}else{E=c[u>>2]|0}if(!s){if((n3(D|0,E|0,B|0)|0)==0){break L986}else{break}}if((B|0)==0){break L986}else{F=E;G=D;H=B}while(1){if((a[G]|0)!=(a[F]|0)){break L1001}s=H-1|0;if((s|0)==0){break L986}else{F=F+1|0;G=G+1|0;H=s}}}}while(0);o=c[j>>2]|0;if((o|0)==0){break L978}else{j=o}}c[b>>2]=j;return}}while(0);c[b>>2]=0;return}function ez(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=f;h=a[f]|0;i=(h&1)==0;if(i){j=g+1|0}else{j=c[f+8>>2]|0}k=h&255;h=(k&1|0)==0;if(h){l=k>>>1}else{l=c[f+4>>2]|0}if(l>>>0>3){m=l;n=j;o=l;while(1){p=n;q=ag(d[p]|d[p+1|0]<<8|d[p+2|0]<<16|d[p+3|0]<<24|0,1540483477)|0;p=ag(q>>>24^q,1540483477)|0;q=p^(ag(m,1540483477)|0);p=n+4|0;r=o-4|0;if(r>>>0>3){m=q;n=p;o=r}else{s=q;t=p;u=r;break}}}else{s=l;t=j;u=l}if((u|0)==1){v=s;w=775}else if((u|0)==3){x=d[t+2|0]<<16^s;w=774}else if((u|0)==2){x=s;w=774}else{y=s}if((w|0)==774){v=d[t+1|0]<<8^x;w=775}if((w|0)==775){y=ag(d[t]^v,1540483477)|0}v=ag(y>>>13^y,1540483477)|0;y=v>>>15^v;v=c[e+4>>2]|0;L1041:do{if((v|0)!=0){t=v-1|0;w=(t&v|0)!=0;if(w){z=(y>>>0)%(v>>>0)|0}else{z=y&t}x=c[(c[e>>2]|0)+(z<<2)>>2]|0;if((x|0)==0){break}s=c[x>>2]|0;if((s|0)==0){break}x=g+1|0;u=f+8|0;l=f+4|0;j=s;L1049:while(1){s=c[j+4>>2]|0;if(w){A=(s>>>0)%(v>>>0)|0}else{A=s&t}if((A|0)!=(z|0)){break L1041}s=j+8|0;o=s;n=a[s]|0;s=n&255;if((s&1|0)==0){B=s>>>1}else{B=c[j+12>>2]|0}if(h){C=k>>>1}else{C=c[l>>2]|0}L1064:do{if((B|0)==(C|0)){s=(n&1)==0;if(s){D=o+1|0}else{D=c[j+16>>2]|0}if(i){E=x}else{E=c[u>>2]|0}if(!s){if((n3(D|0,E|0,B|0)|0)==0){break L1049}else{break}}if((B|0)==0){break L1049}else{F=E;G=D;H=B}while(1){if((a[G]|0)!=(a[F]|0)){break L1064}s=H-1|0;if((s|0)==0){break L1049}else{F=F+1|0;G=G+1|0;H=s}}}}while(0);o=c[j>>2]|0;if((o|0)==0){break L1041}else{j=o}}c[b>>2]=j;return}}while(0);c[b>>2]=0;return}function eA(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;g=f;h=a[f]|0;i=(h&1)==0;if(i){j=g+1|0}else{j=c[f+8>>2]|0}k=h&255;h=(k&1|0)==0;if(h){l=k>>>1}else{l=c[f+4>>2]|0}if(l>>>0>3){m=l;n=j;o=l;while(1){p=n;q=ag(d[p]|d[p+1|0]<<8|d[p+2|0]<<16|d[p+3|0]<<24|0,1540483477)|0;p=ag(q>>>24^q,1540483477)|0;q=p^(ag(m,1540483477)|0);p=n+4|0;r=o-4|0;if(r>>>0>3){m=q;n=p;o=r}else{s=q;t=p;u=r;break}}}else{s=l;t=j;u=l}if((u|0)==1){v=s;w=821}else if((u|0)==3){x=d[t+2|0]<<16^s;w=820}else if((u|0)==2){x=s;w=820}else{y=s}if((w|0)==820){v=d[t+1|0]<<8^x;w=821}if((w|0)==821){y=ag(d[t]^v,1540483477)|0}v=ag(y>>>13^y,1540483477)|0;y=v>>>15^v;v=c[e+4>>2]|0;L1104:do{if((v|0)!=0){t=v-1|0;w=(t&v|0)!=0;if(w){z=(y>>>0)%(v>>>0)|0}else{z=y&t}x=c[(c[e>>2]|0)+(z<<2)>>2]|0;if((x|0)==0){break}s=c[x>>2]|0;if((s|0)==0){break}x=g+1|0;u=f+8|0;l=f+4|0;L1112:do{if(w){j=s;while(1){if((((c[j+4>>2]|0)>>>0)%(v>>>0)|0|0)!=(z|0)){break L1104}o=j+8|0;n=o;m=a[o]|0;o=m&255;if((o&1|0)==0){A=o>>>1}else{A=c[j+12>>2]|0}if(h){B=k>>>1}else{B=c[l>>2]|0}L1151:do{if((A|0)==(B|0)){o=(m&1)==0;if(o){C=n+1|0}else{C=c[j+16>>2]|0}if(i){D=x}else{D=c[u>>2]|0}if(!o){if((n3(C|0,D|0,A|0)|0)==0){E=j;break L1112}else{break}}if((A|0)==0){E=j;break L1112}else{F=D;G=C;H=A}while(1){if((a[G]|0)!=(a[F]|0)){break L1151}o=H-1|0;if((o|0)==0){E=j;break L1112}else{F=F+1|0;G=G+1|0;H=o}}}}while(0);j=c[j>>2]|0;if((j|0)==0){break L1104}}}else{j=s;while(1){if((c[j+4>>2]&t|0)!=(z|0)){break L1104}n=j+8|0;m=n;o=a[n]|0;n=o&255;if((n&1|0)==0){I=n>>>1}else{I=c[j+12>>2]|0}if(h){J=k>>>1}else{J=c[l>>2]|0}L1124:do{if((I|0)==(J|0)){n=(o&1)==0;if(n){K=m+1|0}else{K=c[j+16>>2]|0}if(i){L=x}else{L=c[u>>2]|0}if(!n){if((n3(K|0,L|0,I|0)|0)==0){E=j;break L1112}else{break}}if((I|0)==0){E=j;break L1112}else{M=L;N=K;O=I}while(1){if((a[N]|0)!=(a[M]|0)){break L1124}n=O-1|0;if((n|0)==0){E=j;break L1112}else{M=M+1|0;N=N+1|0;O=n}}}}while(0);j=c[j>>2]|0;if((j|0)==0){break L1104}}}}while(0);c[b>>2]=E;return}}while(0);c[b>>2]=0;return}function eB(){return c[4402]|0}function eC(a){a=a|0;var b=0,d=0,e=0,f=0;do{if((a|0)==0){b=nS(48)|0;x=0;ap(82,b|0);if(!x){d=b;c[4402]=d;e=d;break}else{x=0;d=cu(-1,-1)|0;nU(b);bk(d|0)}}else{e=c[4402]|0}}while(0);if((e|0)==0){eD(744,3592,45);f=c[4402]|0}else{f=e}dw[c[(c[f>>2]|0)+16>>2]&511](f);return}function eD(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0;f=i;i=i+24|0;g=f|0;h=f+8|0;f=h;j=i;i=i+144|0;k=i;i=i+12|0;i=i+7&-8;db(2600,(l=i,i=i+24|0,c[l>>2]=b,c[l+8>>2]=d,c[l+16>>2]=e,l)|0)|0;i=l;l=j+64|0;m=j|0;n=j+8|0;o=n|0;c[o>>2]=6072;p=j;q=j+12|0;r=q|0;c[m>>2]=13028;s=j+64|0;c[s>>2]=13048;c[j+4>>2]=0;x=0;aq(78,j+64|0,q|0);do{if(!x){c[j+136>>2]=0;c[j+140>>2]=-1;t=j+8|0;c[m>>2]=6052;c[l>>2]=6092;c[o>>2]=6072;x=0;ap(62,r|0);do{if(!x){u=q|0;c[u>>2]=6232;v=j+44|0;w=j+56|0;y=j+60|0;n0(j+44|0,0,16);c[y>>2]=24;n0(f|0,0,12);x=0;aq(116,q|0,h|0);do{if(!x){x=0;ap(384,h|0);if(x){x=0;z=cu(-1,-1)|0;A=z;B=K;break}z=(x=0,aF(40,n|0,b|0)|0);L1195:do{if(!x){C=(x=0,aF(40,z|0,3264)|0);if(x){x=0;D=939;break}E=(x=0,aF(40,C|0,d|0)|0);if(x){x=0;D=939;break}C=(x=0,aF(40,E|0,2592)|0);if(x){x=0;D=939;break}E=(x=0,aF(46,C|0,e|0)|0);if(x){x=0;D=939;break}x=0;aq(96,g|0,E+(c[(c[E>>2]|0)-12>>2]|0)|0);if(x){x=0;D=939;break}C=(x=0,aF(62,g|0,17008)|0);do{if(!x){F=(x=0,aF(c[(c[C>>2]|0)+28>>2]|0,C|0,10)|0);if(x){x=0;break}x=0;ap(228,g|0);if(x){x=0;D=939;break L1195}x=0,aF(6,E|0,F|0)|0;if(x){x=0;D=939;break L1195}x=0,as(90,E|0)|0;if(x){x=0;D=939;break L1195}F=c9(8)|0;G=k;H=c[y>>2]|0;L1208:do{if((H&16|0)==0){if((H&8|0)==0){n0(G|0,0,12);D=937;break}I=c[j+20>>2]|0;J=c[j+28>>2]|0;L=I;M=J-L|0;do{if((M|0)==-1){x=0;ap(118,k|0);if(!x){D=929}else{x=0;D=941;break L1208}}else{if(M>>>0>=11){D=929;break}a[G]=M<<1&255;N=k+1|0}}while(0);if((D|0)==929){O=M+16&-16;P=(x=0,as(154,O|0)|0);if(x){x=0;D=941;break}c[k+8>>2]=P;c[k>>2]=O|1;c[k+4>>2]=M;N=P}if((I|0)==(J|0)){Q=N}else{P=J+(-L|0)|0;O=N;R=I;while(1){a[O]=a[R]|0;S=R+1|0;if((S|0)==(J|0)){break}else{O=O+1|0;R=S}}Q=N+P|0}a[Q]=0;D=937}else{R=c[w>>2]|0;O=c[j+36>>2]|0;if(R>>>0<O>>>0){c[w>>2]=O;T=O}else{T=R}R=c[j+32>>2]|0;O=R;J=T-O|0;do{if((J|0)==-1){x=0;ap(118,k|0);if(!x){D=917}else{x=0;D=941;break L1208}}else{if(J>>>0>=11){D=917;break}a[G]=J<<1&255;U=k+1|0}}while(0);if((D|0)==917){P=J+16&-16;I=(x=0,as(154,P|0)|0);if(x){x=0;D=941;break}c[k+8>>2]=I;c[k>>2]=P|1;c[k+4>>2]=J;U=I}if((R|0)==(T|0)){V=U}else{I=T+(-O|0)|0;P=U;L=R;while(1){a[P]=a[L]|0;M=L+1|0;if((M|0)==(T|0)){break}else{P=P+1|0;L=M}}V=U+I|0}a[V]=0;D=937}}while(0);if((D|0)==937){x=0;aq(60,F|0,k|0);do{if(!x){x=0;aJ(12,F|0,11160,30);if(x){x=0;W=0;break}}else{x=0;W=1}}while(0);G=cu(-1,-1)|0;H=G;G=K;x=0;ap(384,k|0);if(x){x=0;break L1195}if(W){X=H;Y=G}else{Z=G;_=H;D=945;break L1195}}else if((D|0)==941){H=cu(-1,-1)|0;X=H;Y=K}by(F|0);Z=Y;_=X;D=945;break L1195}else{x=0}}while(0);E=cu(-1,-1)|0;C=K;x=0;ap(228,g|0);if(!x){$=C;aa=E;D=940;break}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;D=939}}while(0);if((D|0)==939){z=cu(-1,-1)|0;$=K;aa=z;D=940}if((D|0)==940){Z=$;_=aa;D=945}L1260:do{if((D|0)==945){c[m>>2]=6052;c[s>>2]=6092;c[t>>2]=6072;c[u>>2]=6232;x=0;ap(384,v|0);do{if(!x){x=0;ap(146,r|0);if(x){x=0;cu(-1,-1,0)|0;D=951;break}x=0;aq(16,p|0,7572);if(x){x=0;cu(-1,-1,0)|0;break}x=0;ap(54,l|0);if(x){x=0;break L1260}bk(_|0)}else{x=0;cu(-1,-1,0)|0;x=0;ap(146,r|0);if(!x){D=951;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((D|0)==951){x=0;aq(16,p|0,7572);if(!x){break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,l|0);if(!x){cA()}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);cu(-1,-1,0)|0;cA()}else{x=0;z=cu(-1,-1)|0;E=K;x=0;ap(384,h|0);if(!x){A=z;B=E;break}else{x=0}ab=cu(-1,-1,0)|0;ac=K;cA()}}while(0);x=0;ap(384,v|0);if(x){x=0;ab=cu(-1,-1,0)|0;ac=K;cA()}x=0;ap(146,r|0);if(!x){ad=B;ae=A;break}else{x=0;ab=cu(-1,-1,0)|0;ac=K;cA()}}else{x=0;u=cu(-1,-1)|0;ad=K;ae=u}}while(0);x=0;aq(16,p|0,7572);if(!x){af=ad;ag=ae;break}else{x=0}ah=cu(-1,-1,0)|0;ai=K;cA()}else{x=0;t=cu(-1,-1)|0;af=K;ag=t}}while(0);x=0;ap(54,l|0);if(!x){bk(ag|0)}else{x=0;ah=cu(-1,-1,0)|0;ai=K;cA()}}function eE(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[a>>2]=6052;c[a+64>>2]=6092;c[a+8>>2]=6072;b=a+12|0;c[b>>2]=6232;x=0;ap(384,a+44|0);do{if(!x){x=0;ap(146,b|0);if(x){x=0;d=cu(-1,-1)|0;e=K;f=d;g=974;break}x=0;aq(16,a|0,7572);if(!x){g2(a+64|0);return}else{x=0;d=cu(-1,-1)|0;h=K;i=d;break}}else{x=0;d=cu(-1,-1)|0;j=K;x=0;ap(146,b|0);if(!x){e=j;f=d;g=974;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((g|0)==974){x=0;aq(16,a|0,7572);if(!x){h=e;i=f;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a+64|0);if(!x){bk(i|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eF(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[a>>2]=6052;c[a+64>>2]=6092;c[a+8>>2]=6072;b=a+12|0;c[b>>2]=6232;x=0;ap(384,a+44|0);do{if(!x){x=0;ap(146,b|0);if(x){x=0;d=cu(-1,-1)|0;e=K;f=d;g=987;break}x=0;aq(16,a|0,7572);if(x){x=0;d=cu(-1,-1)|0;h=K;i=d;break}x=0;ap(54,a+64|0);if(!x){nU(a);return}else{x=0}d=cu(-1,-1)|0;j=K;k=d;l=a;nU(l);bk(k|0)}else{x=0;d=cu(-1,-1)|0;m=K;x=0;ap(146,b|0);if(!x){e=m;f=d;g=987;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((g|0)==987){x=0;aq(16,a|0,7572);if(!x){h=e;i=f;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a+64|0);if(!x){j=h;k=i;l=a;nU(l);bk(k|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eG(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a-144+136|0;c[b>>2]=6052;a=b+64|0;c[a>>2]=6092;c[b+8>>2]=6072;d=b+12|0;c[d>>2]=6232;x=0;ap(384,b+44|0);do{if(!x){x=0;ap(146,d|0);if(x){x=0;e=cu(-1,-1)|0;f=K;g=e;h=1004;break}x=0;aq(16,b|0,7572);if(!x){g2(a);return}else{x=0;e=cu(-1,-1)|0;i=K;j=e;break}}else{x=0;e=cu(-1,-1)|0;k=K;x=0;ap(146,d|0);if(!x){f=k;g=e;h=1004;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((h|0)==1004){x=0;aq(16,b|0,7572);if(!x){i=f;j=g;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a|0);if(!x){bk(j|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eH(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=a-144+136|0;c[b>>2]=6052;a=b+64|0;c[a>>2]=6092;c[b+8>>2]=6072;d=b+12|0;c[d>>2]=6232;x=0;ap(384,b+44|0);do{if(!x){x=0;ap(146,d|0);if(x){x=0;e=cu(-1,-1)|0;f=K;g=e;h=1017;break}x=0;aq(16,b|0,7572);if(x){x=0;e=cu(-1,-1)|0;i=K;j=e;break}x=0;ap(54,a|0);if(!x){nU(b);return}else{x=0}e=cu(-1,-1)|0;k=K;l=e;m=b;nU(m);bk(l|0)}else{x=0;e=cu(-1,-1)|0;n=K;x=0;ap(146,d|0);if(!x){f=n;g=e;h=1017;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((h|0)==1017){x=0;aq(16,b|0,7572);if(!x){i=f;j=g;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a|0);if(!x){k=i;l=j;m=b;nU(m);bk(l|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eI(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=6052;e=b+(d+64)|0;c[e>>2]=6092;c[b+(d+8)>>2]=6072;f=b+(d+12)|0;c[f>>2]=6232;x=0;ap(384,b+(d+44)|0);do{if(!x){x=0;ap(146,f|0);if(x){x=0;d=cu(-1,-1)|0;g=K;h=d;i=1034;break}x=0;aq(16,a|0,7572);if(!x){g2(e);return}else{x=0;d=cu(-1,-1)|0;j=K;k=d;break}}else{x=0;d=cu(-1,-1)|0;b=K;x=0;ap(146,f|0);if(!x){g=b;h=d;i=1034;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((i|0)==1034){x=0;aq(16,a|0,7572);if(!x){j=g;k=h;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,e|0);if(!x){bk(k|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eJ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=6052;e=b+(d+64)|0;c[e>>2]=6092;c[b+(d+8)>>2]=6072;f=b+(d+12)|0;c[f>>2]=6232;x=0;ap(384,b+(d+44)|0);do{if(!x){x=0;ap(146,f|0);if(x){x=0;d=cu(-1,-1)|0;g=K;h=d;i=1047;break}x=0;aq(16,a|0,7572);if(x){x=0;d=cu(-1,-1)|0;j=K;k=d;break}x=0;ap(54,e|0);if(!x){nU(a);return}else{x=0}d=cu(-1,-1)|0;l=K;m=d;nU(a);bk(m|0)}else{x=0;d=cu(-1,-1)|0;b=K;x=0;ap(146,f|0);if(!x){g=b;h=d;i=1047;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((i|0)==1047){x=0;aq(16,a|0,7572);if(!x){j=g;k=h;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,e|0);if(!x){l=j;m=k;nU(a);bk(m|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eK(a){a=a|0;var b=0;c[a>>2]=6232;x=0;ap(384,a+32|0);if(!x){g8(a|0);return}else{x=0}b=cu(-1,-1)|0;x=0;ap(146,a|0);if(!x){bk(b|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eL(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=6232;x=0;ap(384,a+32|0);if(x){x=0;b=cu(-1,-1)|0;d=K;x=0;ap(146,a|0);if(!x){e=d;f=b;g=a;nU(g);bk(f|0)}else{x=0;cu(-1,-1,0)|0;cA()}}x=0;ap(146,a|0);if(!x){nU(a);return}else{x=0}b=cu(-1,-1)|0;e=K;f=b;g=a;nU(g);bk(f|0)}function eM(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;i=d+44|0;j=c[i>>2]|0;k=d+24|0;l=c[k>>2]|0;if(j>>>0<l>>>0){c[i>>2]=l;m=l}else{m=j}j=h&24;do{if((j|0)==24){if((g|0)==0){n=0;o=0;break}else if((g|0)==2){p=1082;break}else if((g|0)!=1){p=1086;break}i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else if((j|0)==0){i=b;c[i>>2]=0;c[i+4>>2]=0;i=b+8|0;c[i>>2]=-1;c[i+4>>2]=-1;return}else{if((g|0)==0){n=0;o=0;break}else if((g|0)==2){p=1082;break}else if((g|0)!=1){p=1086;break}if((h&8|0)==0){i=l-(c[d+20>>2]|0)|0;n=(i|0)<0?-1:0;o=i;break}else{i=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;n=(i|0)<0?-1:0;o=i;break}}}while(0);if((p|0)==1086){g=b;c[g>>2]=0;c[g+4>>2]=0;g=b+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return}if((p|0)==1082){p=d+32|0;if((a[p]&1)==0){q=p+1|0}else{q=c[d+40>>2]|0}p=m-q|0;n=(p|0)<0?-1:0;o=p}p=n6(o,n,e,f)|0;f=K;e=0;do{if(!((f|0)<(e|0)|(f|0)==(e|0)&p>>>0<0>>>0)){n=d+32|0;if((a[n]&1)==0){r=n+1|0}else{r=c[d+40>>2]|0}n=m-r|0;o=(n|0)<0?-1:0;if((o|0)<(f|0)|(o|0)==(f|0)&n>>>0<p>>>0){break}n=h&8;do{if(!((p|0)==0&(f|0)==0)){do{if((n|0)!=0){if((c[d+12>>2]|0)!=0){break}o=b;c[o>>2]=0;c[o+4>>2]=0;o=b+8|0;c[o>>2]=-1;c[o+4>>2]=-1;return}}while(0);if(!((h&16|0)!=0&(l|0)==0)){break}o=b;c[o>>2]=0;c[o+4>>2]=0;o=b+8|0;c[o>>2]=-1;c[o+4>>2]=-1;return}}while(0);if((n|0)!=0){c[d+12>>2]=(c[d+8>>2]|0)+p;c[d+16>>2]=m}if((h&16|0)!=0){c[k>>2]=(c[d+20>>2]|0)+p}o=b;c[o>>2]=0;c[o+4>>2]=0;o=b+8|0;c[o>>2]=p;c[o+4>>2]=f;return}}while(0);f=b;c[f>>2]=0;c[f+4>>2]=0;f=b+8|0;c[f>>2]=-1;c[f+4>>2]=-1;return}function eN(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;g=d;d=i;i=i+16|0;c[d>>2]=c[g>>2];c[d+4>>2]=c[g+4>>2];c[d+8>>2]=c[g+8>>2];c[d+12>>2]=c[g+12>>2];g=d+8|0;dF[c[(c[b>>2]|0)+16>>2]&63](a,b,c[g>>2]|0,c[g+4>>2]|0,0,e);i=f;return}function eO(a){a=a|0;var b=0,e=0,f=0,g=0,h=0,i=0;b=a+44|0;e=c[b>>2]|0;f=c[a+24>>2]|0;if(e>>>0<f>>>0){c[b>>2]=f;g=f}else{g=e}if((c[a+48>>2]&8|0)==0){h=-1;return h|0}e=a+16|0;f=c[e>>2]|0;b=c[a+12>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;i=g}else{i=f}if(b>>>0>=i>>>0){h=-1;return h|0}h=d[b]|0;return h|0}function eP(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b+44|0;f=c[e>>2]|0;g=c[b+24>>2]|0;if(f>>>0<g>>>0){c[e>>2]=g;h=g}else{h=f}f=b+8|0;g=c[f>>2]|0;e=b+12|0;i=c[e>>2]|0;if(g>>>0>=i>>>0){j=-1;return j|0}if((d|0)==-1){c[f>>2]=g;c[e>>2]=i-1;c[b+16>>2]=h;j=0;return j|0}k=i-1|0;do{if((c[b+48>>2]&16|0)==0){if((d<<24>>24|0)==(a[k]|0)){break}else{j=-1}return j|0}}while(0);c[f>>2]=g;c[e>>2]=k;c[b+16>>2]=h;a[k]=d&255;j=d;return j|0}function eQ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;if((d|0)==-1){e=0;return e|0}f=b|0;g=b+12|0;h=b+8|0;i=(c[g>>2]|0)-(c[h>>2]|0)|0;j=b+24|0;k=c[j>>2]|0;l=b+28|0;m=c[l>>2]|0;L1521:do{if((k|0)==(m|0)){n=b+48|0;if((c[n>>2]&16|0)==0){e=-1;return e|0}o=b+20|0;p=c[o>>2]|0;q=k-p|0;r=b+44|0;s=(c[r>>2]|0)-p|0;p=b+32|0;x=0;aq(120,p|0,0);do{if(!x){t=p;if((a[t]&1)==0){u=10}else{u=(c[p>>2]&-2)-1|0}x=0;aJ(34,p|0,u|0,0);if(x){x=0;break}v=a[t]|0;if((v&1)==0){w=p+1|0}else{w=c[b+40>>2]|0}t=v&255;if((t&1|0)==0){y=t>>>1}else{y=c[b+36>>2]|0}t=w+y|0;c[o>>2]=w;c[l>>2]=t;v=w+q|0;c[j>>2]=v;z=w+s|0;c[r>>2]=z;A=v;B=t;C=z;D=n;break L1521}else{x=0}}while(0);n=cu(-1,-1,0)|0;r=n;bW(r|0)|0;aU();e=-1;return e|0}else{A=k;B=m;C=c[b+44>>2]|0;D=b+48|0}}while(0);m=A+1|0;k=m>>>0<C>>>0?C:m;c[b+44>>2]=k;if((c[D>>2]&8|0)!=0){D=b+32|0;if((a[D]&1)==0){E=D+1|0}else{E=c[b+40>>2]|0}c[h>>2]=E;c[g>>2]=E+i;c[b+16>>2]=k}if((A|0)==(B|0)){e=dM[c[(c[b>>2]|0)+52>>2]&127](f,d&255)|0;return e|0}else{c[j>>2]=m;a[A]=d&255;e=d&255;return e|0}return 0}function eR(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;e=b+32|0;gJ(e,d)|0;d=b+44|0;c[d>>2]=0;f=b+48|0;g=c[f>>2]|0;if((g&8|0)!=0){h=e;i=a[e]|0;j=(i&1)==0;if(j){k=h+1|0}else{k=c[b+40>>2]|0}l=i&255;if((l&1|0)==0){m=l>>>1}else{m=c[b+36>>2]|0}l=k+m|0;c[d>>2]=l;if(j){n=h+1|0;o=h+1|0}else{h=c[b+40>>2]|0;n=h;o=h}c[b+8>>2]=o;c[b+12>>2]=n;c[b+16>>2]=l}if((g&16|0)==0){return}g=e;l=e;n=a[l]|0;o=n&255;if((o&1|0)==0){p=o>>>1}else{p=c[b+36>>2]|0}if((n&1)==0){c[d>>2]=g+1+p;q=10}else{c[d>>2]=(c[b+40>>2]|0)+p;q=(c[e>>2]&-2)-1|0}gL(e,q,0);q=a[l]|0;if((q&1)==0){r=g+1|0;s=g+1|0}else{g=c[b+40>>2]|0;r=g;s=g}g=q&255;if((g&1|0)==0){t=g>>>1}else{t=c[b+36>>2]|0}g=b+24|0;c[g>>2]=s;c[b+20>>2]=s;c[b+28>>2]=r+t;if((c[f>>2]&3|0)==0){return}c[g>>2]=s+p;return}function eS(a){a=a|0;eU(a);return}function eT(){return 17496}function eU(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=c[a+88>>2]|0;L1598:do{if((b|0)!=0){d=b;while(1){e=c[d>>2]|0;x=0;ap(384,d+8|0);if(x){x=0;break}nU(d);if((e|0)==0){break L1598}else{d=e}}d=cu(-1,-1)|0;b2(d|0)}}while(0);b=a+80|0;d=c[b>>2]|0;c[b>>2]=0;if((d|0)!=0){nU(d)}d=c[a+68>>2]|0;L1607:do{if((d|0)!=0){b=d;while(1){e=c[b>>2]|0;f=b+8|0;x=0;ap(384,b+20|0);if(x){x=0;break}x=0;ap(384,f|0);if(x){x=0;g=1211;break}nU(b);if((e|0)==0){break L1607}else{b=e}}if((g|0)==1211){b=cu(-1,-1)|0;h=K;i=b;j=i;b2(j|0)}b=cu(-1,-1)|0;e=K;x=0;ap(384,f|0);if(!x){h=e;i=b;j=i;b2(j|0)}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);j=a+60|0;i=c[j>>2]|0;c[j>>2]=0;if((i|0)!=0){nU(i)}i=c[a+48>>2]|0;L1623:do{if((i|0)!=0){j=i;while(1){h=c[j>>2]|0;x=0;ap(384,j+8|0);if(x){x=0;break}nU(j);if((h|0)==0){break L1623}else{j=h}}j=cu(-1,-1)|0;b2(j|0)}}while(0);i=a+40|0;j=c[i>>2]|0;c[i>>2]=0;if((j|0)!=0){nU(j)}j=c[a+28>>2]|0;L1632:do{if((j|0)!=0){i=j;while(1){h=c[i>>2]|0;x=0;ap(384,i+8|0);if(x){x=0;break}nU(i);if((h|0)==0){break L1632}else{i=h}}i=cu(-1,-1)|0;b2(i|0)}}while(0);j=a+20|0;i=c[j>>2]|0;c[j>>2]=0;if((i|0)!=0){nU(i)}i=c[a+8>>2]|0;L1641:do{if((i|0)!=0){j=i;while(1){h=c[j>>2]|0;x=0;ap(384,j+8|0);if(x){x=0;break}nU(j);if((h|0)==0){break L1641}else{j=h}}j=cu(-1,-1)|0;b2(j|0)}}while(0);i=a|0;a=c[i>>2]|0;c[i>>2]=0;if((a|0)==0){return}nU(a);return}function eV(){n0(17496,0,16);g[4378]=1.0;n0(17516,0,16);g[4383]=1.0;n0(17536,0,16);g[4388]=1.0;n0(17556,0,16);g[4393]=1.0;n0(17576,0,16);g[4398]=1.0;bx(168,17496,u|0)|0;return}function eW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,ar=0,at=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aG=0,aH=0,aI=0,aK=0,aL=0,aM=0,aO=0,aP=0,aQ=0,aR=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=h;k=i;i=i+188|0;i=i+7&-8;l=i;i=i+12|0;i=i+7&-8;m=i;i=i+144|0;n=i;i=i+12|0;i=i+7&-8;o=i;i=i+4|0;i=i+7&-8;p=i;i=i+4|0;i=i+7&-8;q=i;i=i+4|0;i=i+7&-8;r=i;i=i+12|0;i=i+7&-8;s=i;i=i+4|0;i=i+7&-8;t=i;i=i+12|0;i=i+7&-8;u=b;v=b;if((a[v]&1)==0){w=u+1|0}else{w=c[b+8>>2]|0}y=k;z=k+108|0;A=k|0;B=k;C=k+8|0;D=C|0;E=k;c[A>>2]=13068;F=k+108|0;c[F>>2]=13088;c[k+4>>2]=0;x=0;aq(78,k+108|0,C|0);do{if(!x){c[k+180>>2]=0;c[k+184>>2]=-1;c[A>>2]=6500;c[z>>2]=6520;x=0;ap(4,C|0);L1659:do{if(!x){G=k+72|0;do{if((c[G>>2]|0)==0){H=cg(w|0,672)|0;c[G>>2]=H;if((H|0)==0){I=1247;break}c[k+96>>2]=8;I=1272}else{I=1247}}while(0);L1664:do{if((I|0)==1247){H=c[(c[E>>2]|0)-12>>2]|0;x=0;aq(100,y+H|0,c[y+(H+16)>>2]|4|0);if(x){x=0;H=cu(-1,-1)|0;J=K;x=0;ap(208,C|0);if(!x){L=H;M=J;break L1659}else{x=0}N=cu(-1,-1,0)|0;O=K;cA();return 0}if((c[G>>2]|0)!=0){I=1272;break}x=0;aJ(36,l|0,2288,27);if(x){x=0;I=1269;break}J=a[v]|0;if((J&1)==0){P=u+1|0}else{P=c[b+8>>2]|0}H=J&255;if((H&1|0)==0){Q=H>>>1}else{Q=c[b+4>>2]|0}x=0,au(42,l|0,P|0,Q|0)|0;do{if(!x){if((a[l]&1)==0){R=l+1|0}else{R=c[l+8>>2]|0}x=0;aJ(28,R|0,3064,49);if(x){x=0;break}x=0;ap(384,l|0);if(!x){I=1272;break L1664}else{x=0;I=1269;break L1664}}else{x=0}}while(0);H=cu(-1,-1)|0;J=K;x=0;ap(384,l|0);if(!x){S=J;T=H;I=1423}else{x=0}}}while(0);L1688:do{if((I|0)==1272){H=(x=0,as(80,d|0)|0);if(x){x=0;I=1269;break}if((H|0)==0){x=0;aJ(28,2544,3064,54);if(x){x=0;I=1269;break}}J=m+64|0;U=m|0;V=m+8|0;W=V|0;c[W>>2]=6072;X=m;Y=m+12|0;Z=Y|0;c[U>>2]=13028;_=m+64|0;c[_>>2]=13048;c[m+4>>2]=0;x=0;aq(78,m+64|0,Y|0);do{if(!x){c[m+136>>2]=0;c[m+140>>2]=-1;$=m+8|0;c[U>>2]=6052;c[J>>2]=6092;c[W>>2]=6072;x=0;ap(62,Z|0);do{if(!x){aa=Y|0;c[aa>>2]=6232;ab=m+44|0;ac=m+56|0;ad=m+60|0;n0(m+44|0,0,16);c[ad>>2]=24;n0(j|0,0,12);x=0;aq(116,Y|0,h|0);do{if(!x){x=0;ap(384,h|0);if(x){x=0;ae=cu(-1,-1)|0;af=ae;ag=K;break}ae=V;x=0,aF(16,ae|0,D|0)|0;L1706:do{if(!x){ae=c[G>>2]|0;do{if((ae|0)==0){I=1297}else{ah=(x=0,as(c[(c[C>>2]|0)+24>>2]|0,C|0)|0);if(x){x=0;ai=cu(-1,-1)|0;aj=K;aS(ae|0)|0;ak=aj;al=ai;I=1365;break L1706}if((aS(ae|0)|0)!=0){I=1297;break}c[G>>2]=0;if((ah|0)!=0){I=1297}}}while(0);if((I|0)==1297){ae=c[(c[E>>2]|0)-12>>2]|0;x=0;aq(100,y+ae|0,c[y+(ae+16)>>2]|4|0);if(x){x=0;I=1364;break}}ae=n;ah=c[ad>>2]|0;do{if((ah&16|0)==0){if((ah&8|0)==0){n0(ae|0,0,12);break}ai=c[m+20>>2]|0;aj=c[m+28>>2]|0;am=ai;an=aj-am|0;do{if((an|0)==-1){x=0;ap(118,n|0);if(!x){I=1317}else{x=0;I=1364;break L1706}}else{if(an>>>0>=11){I=1317;break}a[ae]=an<<1&255;ao=n+1|0}}while(0);if((I|0)==1317){ar=an+16&-16;at=(x=0,as(154,ar|0)|0);if(x){x=0;I=1364;break L1706}c[n+8>>2]=at;c[n>>2]=ar|1;c[n+4>>2]=an;ao=at}if((ai|0)==(aj|0)){av=ao}else{at=aj+(-am|0)|0;ar=ao;aw=ai;while(1){a[ar]=a[aw]|0;ax=aw+1|0;if((ax|0)==(aj|0)){break}else{ar=ar+1|0;aw=ax}}av=ao+at|0}a[av]=0}else{aw=c[ac>>2]|0;ar=c[m+36>>2]|0;if(aw>>>0<ar>>>0){c[ac>>2]=ar;ay=ar}else{ay=aw}aw=c[m+32>>2]|0;ar=aw;aj=ay-ar|0;do{if((aj|0)==-1){x=0;ap(118,n|0);if(!x){I=1305}else{x=0;I=1364;break L1706}}else{if(aj>>>0>=11){I=1305;break}a[ae]=aj<<1&255;az=n+1|0}}while(0);if((I|0)==1305){at=aj+16&-16;ai=(x=0,as(154,at|0)|0);if(x){x=0;I=1364;break L1706}c[n+8>>2]=ai;c[n>>2]=at|1;c[n+4>>2]=aj;az=ai}if((aw|0)==(ay|0)){aA=az}else{ai=ay+(-ar|0)|0;at=az;am=aw;while(1){a[at]=a[am]|0;an=am+1|0;if((an|0)==(ay|0)){break}else{at=at+1|0;am=an}}aA=az+ai|0}a[aA]=0}}while(0);ah=o|0;if((a[ae]&1)==0){aB=n+1|0}else{aB=c[n+8>>2]|0}c[ah>>2]=aB;x=0;aN(18,H|0,1,ah|0,0);L1759:do{if(!x){x=0;ap(348,H|0);if(x){x=0;I=1366;break}x=0;aJ(18,H|0,35713,p|0);if(x){x=0;I=1366;break}L1763:do{if((c[p>>2]|0)==0){ah=(x=0,aF(40,17280,2160)|0);if(x){x=0;I=1366;break L1759}am=(x=0,aF(28,ah|0,b|0)|0);if(x){x=0;I=1366;break L1759}x=0;aq(96,g|0,am+(c[(c[am>>2]|0)-12>>2]|0)|0);if(x){x=0;I=1366;break L1759}ah=(x=0,aF(62,g|0,17008)|0);do{if(!x){at=(x=0,aF(c[(c[ah>>2]|0)+28>>2]|0,ah|0,10)|0);if(x){x=0;break}x=0;ap(228,g|0);if(x){x=0;I=1366;break L1759}x=0,aF(6,am|0,at|0)|0;if(x){x=0;I=1366;break L1759}x=0,as(90,am|0)|0;if(x){x=0;I=1366;break L1759}x=0;aJ(18,H|0,35716,q|0);if(x){x=0;I=1366;break L1759}at=c[q>>2]|0;L1775:do{if((at|0)>0){aw=r|0;c[aw>>2]=0;ar=r+4|0;c[ar>>2]=0;aj=r+8|0;c[aj>>2]=0;an=(x=0,as(154,at|0)|0);if(x){x=0;ax=cu(-1,-1)|0;aC=K;aD=ax;I=1367;break L1759}c[ar>>2]=an;c[aw>>2]=an;c[aj>>2]=an+at;aj=at;ax=an;do{if((ax|0)==0){aE=0}else{a[ax]=0;aE=ax}ax=aE+1|0;aj=aj-1|0;}while((aj|0)!=0);c[ar>>2]=ax;aj=c[aw>>2]|0;x=0;aN(30,H|0,c[q>>2]|0,s|0,aj|0);L1786:do{if(!x){an=(x=0,aF(40,17280,aj|0)|0);if(x){x=0;I=1368;break}x=0;aq(96,f|0,an+(c[(c[an>>2]|0)-12>>2]|0)|0);if(x){x=0;I=1368;break}aG=(x=0,aF(62,f|0,17008)|0);do{if(!x){aH=(x=0,aF(c[(c[aG>>2]|0)+28>>2]|0,aG|0,10)|0);if(x){x=0;break}x=0;ap(228,f|0);if(x){x=0;I=1368;break L1786}x=0,aF(6,an|0,aH|0)|0;if(x){x=0;I=1368;break L1786}x=0,as(90,an|0)|0;if(x){x=0;I=1368;break L1786}if((aj|0)==0){break L1775}if((aj|0)!=(ax|0)){c[ar>>2]=aj}nU(aj);break L1775}else{x=0}}while(0);an=cu(-1,-1)|0;aG=K;x=0;ap(228,f|0);if(!x){aI=aG;aK=an;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}else{x=0;I=1368}}while(0);if((I|0)==1368){aw=cu(-1,-1)|0;aI=K;aK=aw}aw=aK;an=aI;if((aj|0)==0){aL=an;aM=aw;break L1759}if((aj|0)!=(ax|0)){c[ar>>2]=aj}nU(aj);aL=an;aM=aw;break L1759}}while(0);x=0;ap(352,H|0);if(x){x=0;I=1366;break L1759}x=0;aJ(36,t|0,1512,25);if(x){x=0;I=1366;break L1759}at=a[v]|0;if((at&1)==0){aO=u+1|0}else{aO=c[b+8>>2]|0}aw=at&255;if((aw&1|0)==0){aP=aw>>>1}else{aP=c[b+4>>2]|0}x=0,au(42,t|0,aO|0,aP|0)|0;do{if(!x){if((a[t]&1)==0){aQ=t+1|0}else{aQ=c[t+8>>2]|0}x=0;aJ(28,aQ|0,3064,89);if(x){x=0;break}x=0;ap(384,t|0);if(!x){break L1763}else{x=0;I=1366;break L1759}}else{x=0}}while(0);aw=cu(-1,-1)|0;at=K;x=0;ap(384,t|0);if(!x){aL=at;aM=aw;break L1759}else{x=0;break L1688}}else{x=0}}while(0);am=cu(-1,-1)|0;ah=K;x=0;ap(228,g|0);if(!x){aC=ah;aD=am;I=1367;break L1759}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);x=0;ap(384,n|0);if(x){x=0;I=1364;break L1706}c[U>>2]=6052;c[_>>2]=6092;c[$>>2]=6072;c[aa>>2]=6232;x=0;ap(384,ab|0);do{if(!x){x=0;ap(146,Z|0);if(x){x=0;ai=cu(-1,-1)|0;aR=K;aT=ai;I=1395;break}x=0;aq(16,X|0,7572);if(x){x=0;ai=cu(-1,-1)|0;aU=K;aV=ai;break}x=0;ap(54,J|0);if(x){x=0;I=1269;break L1688}c[A>>2]=6500;c[F>>2]=6520;x=0;ap(208,C|0);do{if(!x){x=0;aq(88,B|0,7612);if(!x){g2(z);i=e;return H|0}else{x=0;ai=cu(-1,-1)|0;aW=K;aX=ai;break}}else{x=0;ai=cu(-1,-1)|0;am=K;x=0;aq(88,B|0,7612);if(!x){aW=am;aX=ai;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);x=0;ap(54,z|0);if(!x){bk(aX|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else{x=0;ai=cu(-1,-1)|0;am=K;x=0;ap(146,Z|0);if(!x){aR=am;aT=ai;I=1395;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);do{if((I|0)==1395){x=0;aq(16,X|0,7572);if(!x){aU=aR;aV=aT;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);x=0;ap(54,J|0);if(!x){aY=aU;aZ=aV;I=1270;break L1688}else{x=0}cu(-1,-1,0)|0;cA();return 0}else{x=0;I=1366}}while(0);if((I|0)==1366){ae=cu(-1,-1)|0;aC=K;aD=ae;I=1367}if((I|0)==1367){aL=aC;aM=aD}x=0;ap(384,n|0);if(!x){a_=aL;a$=aM}else{x=0;break L1688}}else{x=0;I=1364}}while(0);if((I|0)==1364){ae=cu(-1,-1)|0;ak=K;al=ae;I=1365}if((I|0)==1365){a_=ak;a$=al}c[U>>2]=6052;c[_>>2]=6092;c[$>>2]=6072;c[aa>>2]=6232;x=0;ap(384,ab|0);do{if(!x){x=0;ap(146,Z|0);if(x){x=0;cu(-1,-1,0)|0;I=1417;break}x=0;aq(16,X|0,7572);if(!x){x=0;ap(54,J|0);if(!x){S=a_;T=a$;I=1423;break L1688}else{x=0;break L1688}}else{x=0;cu(-1,-1,0)|0;break}}else{x=0;cu(-1,-1,0)|0;x=0;ap(146,Z|0);if(!x){I=1417;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);do{if((I|0)==1417){x=0;aq(16,X|0,7572);if(!x){break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);x=0;ap(54,J|0);if(!x){cA();return 0}else{x=0;cu(-1,-1,0)|0;cA();return 0}}else{x=0;ae=cu(-1,-1)|0;ai=K;x=0;ap(384,h|0);if(!x){af=ae;ag=ai;break}else{x=0}a0=cu(-1,-1,0)|0;a1=K;cA();return 0}}while(0);x=0;ap(384,ab|0);if(x){x=0;a0=cu(-1,-1,0)|0;a1=K;cA();return 0}x=0;ap(146,Z|0);if(!x){a2=ag;a3=af;break}else{x=0;a0=cu(-1,-1,0)|0;a1=K;cA();return 0}}else{x=0;aa=cu(-1,-1)|0;a2=K;a3=aa}}while(0);x=0;aq(16,X|0,7572);if(!x){a4=a3;a5=a2;break}else{x=0}a6=cu(-1,-1,0)|0;a7=K;cA();return 0}else{x=0;$=cu(-1,-1)|0;a4=$;a5=K}}while(0);x=0;ap(54,J|0);if(!x){aY=a5;aZ=a4;I=1270;break}else{x=0;a6=cu(-1,-1,0)|0;a7=K;cA();return 0}}}while(0);if((I|0)==1269){G=cu(-1,-1)|0;aY=K;aZ=G;I=1270}if((I|0)==1270){S=aY;T=aZ;I=1423}L1904:do{if((I|0)==1423){c[A>>2]=6500;c[F>>2]=6520;x=0;ap(208,C|0);do{if(!x){x=0;aq(88,B|0,7612);if(x){x=0;cu(-1,-1,0)|0;break}x=0;ap(54,z|0);if(x){x=0;break L1904}bk(T|0)}else{x=0;cu(-1,-1,0)|0;x=0;aq(88,B|0,7612);if(!x){break}else{x=0}cu(-1,-1,0)|0;cA();return 0}}while(0);x=0;ap(54,z|0);if(!x){cA();return 0}else{x=0;cu(-1,-1,0)|0;cA();return 0}}}while(0);cu(-1,-1,0)|0;cA();return 0}else{x=0;J=cu(-1,-1)|0;L=J;M=K}}while(0);x=0;aq(88,B|0,7612);if(!x){a8=L;a9=M;break}else{x=0}N=cu(-1,-1,0)|0;O=K;cA();return 0}else{x=0;J=cu(-1,-1)|0;a8=J;a9=K}}while(0);x=0;ap(54,z|0);if(!x){bk(a8|0)}else{x=0;N=cu(-1,-1,0)|0;O=K;cA();return 0}return 0}function eX(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;x=0;aq(130,g|0,b|0);L1929:do{if(!x){L1931:do{if((a[g|0]&1)!=0){k=d;l=a[d]|0;m=l&255;if((m&1|0)==0){n=m>>>1}else{n=c[d+4>>2]|0}m=b;o=c[(c[m>>2]|0)-12>>2]|0;p=b;c[h>>2]=c[p+(o+24)>>2];q=(l&1)==0;if(q){r=k+1|0}else{r=c[d+8>>2]|0}do{if((c[p+(o+4)>>2]&176|0)==32){if(q){s=k+1+n|0;t=1461;break}else{u=(c[d+8>>2]|0)+n|0;t=1460;break}}else{if(q){s=k+1|0;t=1461;break}else{u=c[d+8>>2]|0;t=1460;break}}}while(0);if((t|0)==1461){v=k+1|0;w=s}else if((t|0)==1460){v=c[d+8>>2]|0;w=u}q=v+n|0;l=p+o|0;y=p+(o+76)|0;z=c[y>>2]|0;A=z&255;L1954:do{if((z|0)==-1){x=0;aq(96,f|0,l|0);if(x){x=0;t=1474;break}B=(x=0,aF(62,f|0,17008)|0);do{if(!x){C=(x=0,aF(c[(c[B>>2]|0)+28>>2]|0,B|0,32)|0);if(x){x=0;break}x=0;ap(228,f|0);if(x){x=0;t=1474;break L1954}c[y>>2]=C<<24>>24;D=C;t=1470;break L1954}else{x=0}}while(0);B=cu(-1,-1,0)|0;C=K;x=0;ap(228,f|0);if(!x){E=C;F=B;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}else{D=A;t=1470}}while(0);do{if((t|0)==1470){x=0;aB(28,j|0,h|0,r|0,w|0,q|0,l|0,D|0);if(x){x=0;t=1474;break}if((c[j>>2]|0)!=0){break L1931}A=c[(c[m>>2]|0)-12>>2]|0;x=0;aq(100,p+A|0,c[p+(A+16)>>2]|5|0);if(!x){break L1931}else{x=0;t=1474}}}while(0);if((t|0)==1474){l=cu(-1,-1,0)|0;E=K;F=l}x=0;ap(338,g|0);if(!x){G=F;H=m;I=p;break L1929}else{x=0}J=cu(-1,-1,0)|0;L=K;cA();return 0}}while(0);x=0;ap(338,g|0);if(x){x=0;t=1473;break}i=e;return b|0}else{x=0;t=1473}}while(0);if((t|0)==1473){t=cu(-1,-1,0)|0;G=t;H=b;I=b}bW(G|0)|0;x=0;ap(224,I+(c[(c[H>>2]|0)-12>>2]|0)|0);if(!x){aU();i=e;return b|0}else{x=0}b=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(b|0)}else{x=0;J=cu(-1,-1,0)|0;L=K;cA();return 0}return 0}function eY(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=6500;c[a+108>>2]=6520;x=0;ap(208,a+8|0);do{if(!x){x=0;aq(88,a|0,7612);if(!x){g2(a+108|0);return}else{x=0;b=cu(-1,-1)|0;d=K;e=b;break}}else{x=0;b=cu(-1,-1)|0;f=K;x=0;aq(88,a|0,7612);if(!x){d=f;e=b;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a+108|0);if(!x){bk(e|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function eZ(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;b=a+4|0;d=a;e=c[b>>2]|0;L1996:do{if((e|0)!=(d|0)){f=e;while(1){x=0;ap(352,c[f+8>>2]|0);if(x){x=0;break}f=c[f+4>>2]|0;if((f|0)==(d|0)){break L1996}}f=cu(-1,-1)|0;g=a+8|0;if((c[g>>2]|0)==0){bk(f|0)}h=c[b>>2]|0;i=(c[a>>2]|0)+4|0;j=h|0;c[(c[j>>2]|0)+4>>2]=c[i>>2];c[c[i>>2]>>2]=c[j>>2];c[g>>2]=0;if((h|0)==(d|0)){bk(f|0)}else{k=h}while(1){h=c[k+4>>2]|0;nU(k);if((h|0)==(d|0)){break}else{k=h}}bk(f|0)}}while(0);k=a+8|0;if((c[k>>2]|0)==0){return}e=c[b>>2]|0;b=(c[a>>2]|0)+4|0;a=e|0;c[(c[a>>2]|0)+4>>2]=c[b>>2];c[c[b>>2]>>2]=c[a>>2];c[k>>2]=0;if((e|0)==(d|0)){return}else{l=e}while(1){e=c[l+4>>2]|0;nU(l);if((e|0)==(d|0)){break}else{l=e}}return}function e_(a){a=a|0;e2(a);return}function e$(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;c[a>>2]=6500;c[a+108>>2]=6520;x=0;ap(208,a+8|0);do{if(!x){x=0;aq(88,a|0,7612);if(x){x=0;b=cu(-1,-1)|0;d=K;e=b;break}x=0;ap(54,a+108|0);if(!x){nU(a);return}else{x=0}b=cu(-1,-1)|0;f=K;g=b;h=a;nU(h);bk(g|0)}else{x=0;b=cu(-1,-1)|0;i=K;x=0;aq(88,a|0,7612);if(!x){d=i;e=b;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a+108|0);if(!x){f=d;g=e;h=a;nU(h);bk(g|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function e0(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=6500;e=b+(d+108)|0;c[e>>2]=6520;x=0;ap(208,b+(d+8)|0);do{if(!x){x=0;aq(88,a|0,7612);if(!x){g2(e);return}else{x=0;d=cu(-1,-1)|0;f=K;g=d;break}}else{x=0;d=cu(-1,-1)|0;b=K;x=0;aq(88,a|0,7612);if(!x){f=b;g=d;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,e|0);if(!x){bk(g|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function e1(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=6500;e=b+(d+108)|0;c[e>>2]=6520;x=0;ap(208,b+(d+8)|0);do{if(!x){x=0;aq(88,a|0,7612);if(x){x=0;d=cu(-1,-1)|0;f=K;g=d;break}x=0;ap(54,e|0);if(!x){nU(a);return}else{x=0}d=cu(-1,-1)|0;h=K;i=d;nU(a);bk(i|0)}else{x=0;d=cu(-1,-1)|0;b=K;x=0;aq(88,a|0,7612);if(!x){f=b;g=d;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,e|0);if(!x){h=f;i=g;nU(a);bk(i|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function e2(b){b=b|0;var d=0,e=0,f=0,g=0,h=0;c[b>>2]=6736;d=b+64|0;e=c[d>>2]|0;do{if((e|0)!=0){x=0,as(54,b|0)|0;if(!x){if((aS(e|0)|0)!=0){break}c[d>>2]=0;break}else{x=0}f=cu(-1,-1,0)|0;aS(e|0)|0;g=f;bW(g|0)|0;x=0;aK(8);if(!x){break}else{x=0}g=cu(-1,-1)|0;x=0;ap(146,b|0);if(!x){bk(g|0)}else{x=0;cu(-1,-1,0)|0;cA()}}}while(0);do{if((a[b+96|0]&1)!=0){e=c[b+32>>2]|0;if((e|0)==0){break}nV(e)}}while(0);if((a[b+97|0]&1)==0){h=b|0;g8(h);return}e=c[b+56>>2]|0;if((e|0)==0){h=b|0;g8(h);return}nV(e);h=b|0;g8(h);return}function e3(a){a=a|0;var b=0;x=0;ap(208,a|0);if(!x){nU(a);return}else{x=0;b=cu(-1,-1)|0;nU(a);bk(b|0)}}function e4(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;dz[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=lE(d,16704)|0;d=e;c[b+68>>2]=d;f=b+98|0;g=a[f]&1;h=dz[c[(c[e>>2]|0)+28>>2]&255](d)|0;a[f]=h&1;if((g&255|0)==(h&1|0)){return}g=b+96|0;n0(b+8|0,0,24);f=(a[g]&1)!=0;if(h){h=b+32|0;do{if(f){d=c[h>>2]|0;if((d|0)==0){break}nV(d)}}while(0);d=b+97|0;a[g]=a[d]&1;e=b+60|0;c[b+52>>2]=c[e>>2];i=b+56|0;c[h>>2]=c[i>>2];c[e>>2]=0;c[i>>2]=0;a[d]=0;return}do{if(!f){d=b+32|0;i=c[d>>2]|0;if((i|0)==(b+44|0)){break}e=c[b+52>>2]|0;c[b+60>>2]=e;c[b+56>>2]=i;a[b+97|0]=0;c[d>>2]=nT(e)|0;a[g]=1;return}}while(0);g=c[b+52>>2]|0;c[b+60>>2]=g;c[b+56>>2]=nT(g)|0;a[b+97|0]=1;return}function e5(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;f=b|0;g=b+96|0;n0(b+8|0,0,24);do{if((a[g]&1)!=0){h=c[b+32>>2]|0;if((h|0)==0){break}nV(h)}}while(0);h=b+97|0;do{if((a[h]&1)!=0){i=c[b+56>>2]|0;if((i|0)==0){break}nV(i)}}while(0);i=b+52|0;c[i>>2]=e;do{if(e>>>0>8){j=a[b+98|0]|0;if((j&1)==0|(d|0)==0){c[b+32>>2]=nT(e)|0;a[g]=1;k=j;break}else{c[b+32>>2]=d;a[g]=0;k=j;break}}else{c[b+32>>2]=b+44;c[i>>2]=8;a[g]=0;k=a[b+98|0]|0}}while(0);if((k&1)!=0){c[b+60>>2]=0;c[b+56>>2]=0;a[h]=0;return f|0}k=(e|0)<8?8:e;c[b+60>>2]=k;if((d|0)!=0&k>>>0>7){c[b+56>>2]=d;a[h]=0;return f|0}else{c[b+56>>2]=nT(k)|0;a[h]=1;return f|0}return 0}function e6(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;g=c[b+68>>2]|0;if((g|0)==0){h=c9(4)|0;ns(h);ca(h|0,11128,210)}h=dz[c[(c[g>>2]|0)+24>>2]&255](g)|0;g=b+64|0;do{if((c[g>>2]|0)!=0){i=(h|0)>0;if(!(i|(d|0)==0&(e|0)==0)){break}if((dz[c[(c[b>>2]|0)+24>>2]&255](b)|0)!=0){break}if(f>>>0>=3){j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=-1;c[j+4>>2]=-1;return}j=c[g>>2]|0;if(i){i=of(h,(h|0)<0?-1:0,d,e)|0;k=i}else{k=0}if((c3(j|0,k|0,f|0)|0)==0){j=bH(c[g>>2]|0)|0;i=b+72|0;l=c[i+4>>2]|0;m=a;c[m>>2]=c[i>>2];c[m+4>>2]=l;l=a+8|0;c[l>>2]=j;c[l+4>>2]=(j|0)<0?-1:0;return}else{j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=-1;c[j+4>>2]=-1;return}}}while(0);b=a;c[b>>2]=0;c[b+4>>2]=0;b=a+8|0;c[b>>2]=-1;c[b+4>>2]=-1;return}function e7(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;e=i;f=d;d=i;i=i+16|0;c[d>>2]=c[f>>2];c[d+4>>2]=c[f+4>>2];c[d+8>>2]=c[f+8>>2];c[d+12>>2]=c[f+12>>2];f=b+64|0;do{if((c[f>>2]|0)!=0){if((dz[c[(c[b>>2]|0)+24>>2]&255](b)|0)!=0){break}if((c3(c[f>>2]|0,c[d+8>>2]|0,0)|0)==0){g=d;h=c[g+4>>2]|0;j=b+72|0;c[j>>2]=c[g>>2];c[j+4>>2]=h;h=a;j=d;c[h>>2]=c[j>>2];c[h+4>>2]=c[j+4>>2];c[h+8>>2]=c[j+8>>2];c[h+12>>2]=c[j+12>>2];i=e;return}else{j=a;c[j>>2]=0;c[j+4>>2]=0;j=a+8|0;c[j>>2]=-1;c[j+4>>2]=-1;i=e;return}}}while(0);d=a;c[d>>2]=0;c[d+4>>2]=0;d=a+8|0;c[d>>2]=-1;c[d+4>>2]=-1;i=e;return}function e8(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=f;h=b+64|0;if((c[h>>2]|0)==0){j=0;i=d;return j|0}k=b+68|0;l=c[k>>2]|0;if((l|0)==0){m=c9(4)|0;ns(m);ca(m|0,11128,210);return 0}m=b+92|0;n=c[m>>2]|0;do{if((n&16|0)==0){if((n&8|0)==0){break}o=b+80|0;p=c[o+4>>2]|0;c[f>>2]=c[o>>2];c[f+4>>2]=p;do{if((a[b+98|0]&1)==0){p=dz[c[(c[l>>2]|0)+24>>2]&255](l)|0;o=b+36|0;q=c[o>>2]|0;r=(c[b+40>>2]|0)-q|0;if((p|0)>0){s=(ag((c[b+16>>2]|0)-(c[b+12>>2]|0)|0,p)|0)+r|0;t=0;break}p=c[b+12>>2]|0;if((p|0)==(c[b+16>>2]|0)){s=r;t=0;break}u=c[k>>2]|0;v=b+32|0;w=dN[c[(c[u>>2]|0)+32>>2]&63](u,g,c[v>>2]|0,q,p-(c[b+8>>2]|0)|0)|0;s=r-w+(c[o>>2]|0)-(c[v>>2]|0)|0;t=1}else{s=(c[b+16>>2]|0)-(c[b+12>>2]|0)|0;t=0}}while(0);if((c3(c[h>>2]|0,-s|0,1)|0)!=0){j=-1;i=d;return j|0}if(t){v=b+72|0;o=c[f+4>>2]|0;c[v>>2]=c[f>>2];c[v+4>>2]=o}o=c[b+32>>2]|0;c[b+40>>2]=o;c[b+36>>2]=o;c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;c[m>>2]=0}else{do{if((c[b+24>>2]|0)!=(c[b+20>>2]|0)){if((dM[c[(c[b>>2]|0)+52>>2]&127](b,-1)|0)==-1){j=-1}else{break}i=d;return j|0}}while(0);o=b+72|0;v=b+32|0;w=b+52|0;while(1){r=c[k>>2]|0;p=c[v>>2]|0;q=dN[c[(c[r>>2]|0)+20>>2]&63](r,o,p,p+(c[w>>2]|0)|0,e)|0;p=c[v>>2]|0;r=(c[e>>2]|0)-p|0;if((a0(p|0,1,r|0,c[h>>2]|0)|0)!=(r|0)){j=-1;x=1658;break}if((q|0)==2){j=-1;x=1657;break}else if((q|0)!=1){x=1642;break}}if((x|0)==1657){i=d;return j|0}else if((x|0)==1642){if((aY(c[h>>2]|0)|0)==0){break}else{j=-1}i=d;return j|0}else if((x|0)==1658){i=d;return j|0}}}while(0);j=0;i=d;return j|0}function e9(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;e=i;i=i+16|0;f=e|0;g=e+8|0;h=b+64|0;if((c[h>>2]|0)==0){j=-1;i=e;return j|0}k=b+92|0;if((c[k>>2]&8|0)==0){c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0;if((a[b+98|0]&1)==0){l=c[b+56>>2]|0;m=l+(c[b+60>>2]|0)|0;c[b+8>>2]=l;c[b+12>>2]=m;c[b+16>>2]=m;n=m}else{m=c[b+32>>2]|0;l=m+(c[b+52>>2]|0)|0;c[b+8>>2]=m;c[b+12>>2]=l;c[b+16>>2]=l;n=l}c[k>>2]=8;o=1;p=n;q=b+12|0}else{n=b+12|0;o=0;p=c[n>>2]|0;q=n}if((p|0)==0){n=f+1|0;c[b+8>>2]=f;c[q>>2]=n;c[b+16>>2]=n;r=n}else{r=p}p=c[b+16>>2]|0;if(o){s=0}else{o=(p-(c[b+8>>2]|0)|0)/2|0;s=o>>>0>4?4:o}o=b+16|0;do{if((r|0)==(p|0)){n=b+8|0;n5(c[n>>2]|0,r+(-s|0)|0,s|0);if((a[b+98|0]&1)!=0){k=c[n>>2]|0;l=cU(k+s|0,1,(c[o>>2]|0)-s-k|0,c[h>>2]|0)|0;if((l|0)==0){t=-1;u=n;break}k=c[n>>2]|0;m=k+s|0;c[q>>2]=m;c[o>>2]=k+(l+s);t=d[m]|0;u=n;break}m=b+32|0;l=b+36|0;k=c[l>>2]|0;v=b+40|0;n5(c[m>>2]|0,k|0,(c[v>>2]|0)-k|0);k=c[m>>2]|0;w=k+((c[v>>2]|0)-(c[l>>2]|0))|0;c[l>>2]=w;if((k|0)==(b+44|0)){x=8}else{x=c[b+52>>2]|0}y=k+x|0;c[v>>2]=y;k=b+60|0;z=(c[k>>2]|0)-s|0;A=y-w|0;y=b+72|0;B=y;C=b+80|0;D=c[B+4>>2]|0;c[C>>2]=c[B>>2];c[C+4>>2]=D;D=cU(w|0,1,(A>>>0<z>>>0?A:z)|0,c[h>>2]|0)|0;if((D|0)==0){t=-1;u=n;break}z=c[b+68>>2]|0;if((z|0)==0){A=c9(4)|0;ns(A);ca(A|0,11128,210);return 0}A=(c[l>>2]|0)+D|0;c[v>>2]=A;D=c[n>>2]|0;if((dS[c[(c[z>>2]|0)+16>>2]&31](z,y,c[m>>2]|0,A,l,D+s|0,D+(c[k>>2]|0)|0,g)|0)==3){k=c[m>>2]|0;m=c[v>>2]|0;c[n>>2]=k;c[q>>2]=k;c[o>>2]=m;t=d[k]|0;u=n;break}k=c[g>>2]|0;m=c[n>>2]|0;v=m+s|0;if((k|0)==(v|0)){t=-1;u=n;break}c[n>>2]=m;c[q>>2]=v;c[o>>2]=k;t=d[v]|0;u=n}else{t=d[r]|0;u=b+8|0}}while(0);if((c[u>>2]|0)!=(f|0)){j=t;i=e;return j|0}c[u>>2]=0;c[q>>2]=0;c[o>>2]=0;j=t;i=e;return j|0}function fa(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;if((c[b+64>>2]|0)==0){e=-1;return e|0}f=b+12|0;g=c[f>>2]|0;if((c[b+8>>2]|0)>>>0>=g>>>0){e=-1;return e|0}if((d|0)==-1){c[f>>2]=g-1;e=0;return e|0}h=g-1|0;do{if((c[b+88>>2]&16|0)==0){if((d<<24>>24|0)==(a[h]|0)){break}else{e=-1}return e|0}}while(0);c[f>>2]=h;a[h]=d&255;e=d;return e|0}function fb(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;e=i;i=i+24|0;f=e|0;g=e+8|0;h=e+16|0;j=b+64|0;if((c[j>>2]|0)==0){k=-1;i=e;return k|0}l=b+92|0;if((c[l>>2]&16|0)==0){c[b+8>>2]=0;c[b+12>>2]=0;c[b+16>>2]=0;m=c[b+52>>2]|0;do{if(m>>>0>8){if((a[b+98|0]&1)==0){n=c[b+56>>2]|0;o=n+((c[b+60>>2]|0)-1)|0;c[b+24>>2]=n;c[b+20>>2]=n;c[b+28>>2]=o;p=n;q=o;break}else{o=c[b+32>>2]|0;n=o+(m-1)|0;c[b+24>>2]=o;c[b+20>>2]=o;c[b+28>>2]=n;p=o;q=n;break}}else{c[b+24>>2]=0;c[b+20>>2]=0;c[b+28>>2]=0;p=0;q=0}}while(0);c[l>>2]=16;r=p;s=q;t=b+20|0;u=b+28|0}else{q=b+20|0;p=b+28|0;r=c[q>>2]|0;s=c[p>>2]|0;t=q;u=p}p=(d|0)==-1;q=b+24|0;l=c[q>>2]|0;if(p){v=r;w=l}else{if((l|0)==0){c[q>>2]=f;c[t>>2]=f;c[u>>2]=f+1;x=f}else{x=l}a[x]=d&255;x=(c[q>>2]|0)+1|0;c[q>>2]=x;v=c[t>>2]|0;w=x}x=b+24|0;if((w|0)!=(v|0)){L2285:do{if((a[b+98|0]&1)==0){q=b+32|0;l=c[q>>2]|0;c[g>>2]=l;f=b+68|0;m=c[f>>2]|0;if((m|0)==0){y=c9(4)|0;z=y;ns(z);ca(y|0,11128,210);return 0}n=b+72|0;o=b+52|0;A=m;m=v;B=w;C=l;while(1){l=dS[c[(c[A>>2]|0)+12>>2]&31](A,n,m,B,h,C,C+(c[o>>2]|0)|0,g)|0;D=c[t>>2]|0;if((c[h>>2]|0)==(D|0)){k=-1;E=1744;break}if((l|0)==3){E=1728;break}if(l>>>0>=2){k=-1;E=1745;break}F=c[q>>2]|0;G=(c[g>>2]|0)-F|0;if((a0(F|0,1,G|0,c[j>>2]|0)|0)!=(G|0)){k=-1;E=1743;break}if((l|0)!=1){break L2285}l=c[h>>2]|0;G=c[x>>2]|0;c[t>>2]=l;c[u>>2]=G;F=l+(G-l)|0;c[x>>2]=F;G=c[f>>2]|0;if((G|0)==0){E=1737;break}A=G;m=l;B=F;C=c[q>>2]|0}if((E|0)==1728){q=(c[x>>2]|0)-D|0;if((a0(D|0,1,q|0,c[j>>2]|0)|0)==(q|0)){break}else{k=-1}i=e;return k|0}else if((E|0)==1743){i=e;return k|0}else if((E|0)==1744){i=e;return k|0}else if((E|0)==1745){i=e;return k|0}else if((E|0)==1737){y=c9(4)|0;z=y;ns(z);ca(y|0,11128,210);return 0}}else{q=w-v|0;if((a0(v|0,1,q|0,c[j>>2]|0)|0)==(q|0)){break}else{k=-1}i=e;return k|0}}while(0);c[x>>2]=r;c[t>>2]=r;c[u>>2]=s}k=p?0:d;i=e;return k|0}function fc(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=i;i=i+16|0;e=d|0;f=d+8|0;g=b|0;g9(g);c[b>>2]=6736;c[b+32>>2]=0;c[b+36>>2]=0;c[b+40>>2]=0;h=b+68|0;j=b+98|0;k=b+4|0;n0(b+52|0,0,47);lB(e,k);l=(x=0,aF(54,e|0,16704)|0);if(x){x=0;m=cu(-1,-1)|0;b2(m|0)}x=0;ap(228,e|0);L2314:do{if(!x){do{if(l){lB(f,k);e=(x=0,aF(62,f|0,16704)|0);if(!x){c[h>>2]=e;x=0;ap(228,f|0);if(x){x=0;n=1753;break L2314}e=c[h>>2]|0;a[j]=(dz[c[(c[e>>2]|0)+28>>2]&255](e)|0)&1;break}else{x=0;e=cu(-1,-1)|0;m=K;x=0;ap(228,f|0);if(!x){o=m;p=e;break L2314}else{x=0}q=cu(-1,-1,0)|0;r=K;cA()}}}while(0);e=c[(c[b>>2]|0)+12>>2]|0;x=0,au(e|0,b|0,0,4096)|0;if(x){x=0;n=1753;break}i=d;return}else{x=0;n=1753}}while(0);if((n|0)==1753){n=cu(-1,-1)|0;o=K;p=n}x=0;ap(146,g|0);if(!x){bk(p|0)}else{x=0;q=cu(-1,-1,0)|0;r=K;cA()}}function fd(a){a=a|0;c[a>>2]=7496;n0(a+4|0,0,44);return}function fe(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;c[a>>2]=7496;b=c[a+32>>2]|0;d=b;if((b|0)!=0){e=a+36|0;f=c[e>>2]|0;if((b|0)!=(f|0)){c[e>>2]=f+(~((f-4+(-d|0)|0)>>>2)<<2)}nU(b)}b=c[a+20>>2]|0;if((b|0)==0){g=a;nU(g);return}d=a+24|0;f=c[d>>2]|0;if((b|0)!=(f|0)){c[d>>2]=f+(~((f-4+(-b|0)|0)>>>2)<<2)}nU(b);g=a;nU(g);return}function ff(a){a=a|0;var b=0,d=0,e=0,f=0;c[a>>2]=7496;b=c[a+32>>2]|0;d=b;if((b|0)!=0){e=a+36|0;f=c[e>>2]|0;if((b|0)!=(f|0)){c[e>>2]=f+(~((f-4+(-d|0)|0)>>>2)<<2)}nU(b)}b=c[a+20>>2]|0;if((b|0)==0){return}d=a+24|0;a=c[d>>2]|0;if((b|0)!=(a|0)){c[d>>2]=a+(~((a-4+(-b|0)|0)>>>2)<<2)}nU(b);return}function fg(b){b=b|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,ao=0,ar=0,at=0,au=0,av=0,aw=0,ax=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aG=0,aI=0,aK=0,aL=0.0,aM=0.0,aO=0,aP=0,aQ=0,aR=0,aS=0,aT=0;e=i;i=i+144|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=e+32|0;l=e+40|0;m=e+48|0;n=e+56|0;o=e+64|0;p=e+72|0;q=e+80|0;r=e+96|0;s=e+112|0;t=e+128|0;u=t;v=i;i=i+12|0;i=i+7&-8;w=i;i=i+12|0;i=i+7&-8;y=i;i=i+12|0;i=i+7&-8;z=y;A=i;i=i+12|0;i=i+7&-8;B=i;i=i+12|0;i=i+7&-8;C=i;i=i+12|0;i=i+7&-8;D=C;E=i;i=i+4|0;i=i+7&-8;F=i;i=i+4|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=i;i=i+4|0;i=i+7&-8;I=i;i=i+12|0;i=i+7&-8;J=i;i=i+12|0;i=i+7&-8;L=i;i=i+12|0;i=i+7&-8;M=i;i=i+12|0;i=i+7&-8;N=i;i=i+12|0;i=i+7&-8;O=i;i=i+12|0;i=i+7&-8;P=i;i=i+12|0;i=i+7&-8;Q=i;i=i+12|0;i=i+7&-8;R=q|0;S=q;c[R>>2]=S;T=q+4|0;c[T>>2]=S;U=q+8|0;c[U>>2]=0;V=(x=0,aH(8)|0);L2361:do{if(!x){x=0;aJ(36,s|0,1760,20);if(x){x=0;W=1825;break}n0(u|0,0,12);ez(p,V+60|0,s);X=c[p>>2]|0;if((X|0)==0){x=0;aq(94,r|0,t|0);if(!x){W=1790}else{x=0;W=1827}}else{x=0;aq(94,r|0,X+20|0);if(!x){W=1790}else{x=0;W=1827}}L2367:do{if((W|0)==1790){X=(x=0,aF(8,r|0,35633)|0);do{if(!x){Y=(x=0,as(154,12)|0);if(x){x=0;break}Z=Y;_=Y+8|0;if((_|0)!=0){c[_>>2]=X}c[(c[R>>2]|0)+4>>2]=Z;c[Y>>2]=c[R>>2];c[R>>2]=Z;c[Y+4>>2]=S;c[U>>2]=(c[U>>2]|0)+1;x=0;ap(384,r|0);if(x){x=0;W=1827;break L2367}x=0;ap(384,t|0);if(x){x=0;Y=cu(-1,-1)|0;$=Y;aa=K;break L2367}x=0;ap(384,s|0);if(x){x=0;W=1825;break L2361}Y=(x=0,aH(8)|0);if(x){x=0;W=1825;break L2361}x=0;aJ(36,w|0,3008,22);if(x){x=0;W=1825;break L2361}n0(z|0,0,12);ez(o,Y+60|0,w);Y=c[o>>2]|0;if((Y|0)==0){x=0;aq(94,v|0,y|0);if(!x){W=1802}else{x=0;W=1832}}else{x=0;aq(94,v|0,Y+20|0);if(!x){W=1802}else{x=0;W=1832}}L2385:do{if((W|0)==1802){Y=(x=0,aF(8,v|0,35632)|0);do{if(!x){Z=(x=0,as(154,12)|0);if(x){x=0;break}_=Z;ab=Z+8|0;if((ab|0)!=0){c[ab>>2]=Y}c[(c[R>>2]|0)+4>>2]=_;c[Z>>2]=c[R>>2];c[R>>2]=_;c[Z+4>>2]=S;c[U>>2]=(c[U>>2]|0)+1;x=0;ap(384,v|0);if(x){x=0;W=1832;break L2385}x=0;ap(384,y|0);if(x){x=0;Z=cu(-1,-1)|0;ac=Z;ad=K;break L2385}x=0;ap(384,w|0);if(x){x=0;W=1825;break L2361}Z=(x=0,aH(8)|0);if(x){x=0;W=1825;break L2361}x=0;aJ(36,B|0,2520,22);if(x){x=0;W=1825;break L2361}n0(D|0,0,12);ez(n,Z+60|0,B);Z=c[n>>2]|0;if((Z|0)==0){x=0;aq(94,A|0,C|0);if(!x){W=1814}else{x=0;W=1837}}else{x=0;aq(94,A|0,Z+20|0);if(!x){W=1814}else{x=0;W=1837}}do{if((W|0)==1814){x=0;ap(384,C|0);if(x){x=0;Z=cu(-1,-1)|0;ae=Z;af=K;break}x=0;ap(384,B|0);if(x){x=0;W=1825;break L2361}Z=d[A]|0;if((Z&1|0)==0){ag=Z>>>1}else{ag=c[A+4>>2]|0}do{if((ag|0)==0){W=1842}else{Z=(x=0,aF(8,A|0,36313)|0);if(x){x=0;W=1840;break}_=(x=0,as(154,12)|0);if(x){x=0;W=1840;break}ab=_;ah=_+8|0;if((ah|0)!=0){c[ah>>2]=Z}c[(c[R>>2]|0)+4>>2]=ab;c[_>>2]=c[R>>2];c[R>>2]=ab;c[_+4>>2]=S;c[U>>2]=(c[U>>2]|0)+1;W=1842}}while(0);L2420:do{if((W|0)==1842){_=(x=0,aH(12)|0);if(x){x=0;W=1840;break}ab=b+16|0;c[ab>>2]=_;if((_|0)==0){x=0;aJ(28,2096,1464,63);if(x){x=0;W=1840;break}ai=c[ab>>2]|0}else{ai=_}x=0;aJ(22,ai|0,0,1304);if(x){x=0;W=1840;break}x=0;aJ(22,c[ab>>2]|0,1,960);if(x){x=0;W=1840;break}x=0;aJ(22,c[ab>>2]|0,2,640);if(x){x=0;W=1840;break}_=c[T>>2]|0;Z=c[ab>>2]|0;L2430:do{if((_|0)==(S|0)){aj=Z}else{ah=_;ak=Z;while(1){x=0;aq(10,ak|0,c[ah+8>>2]|0);if(x){x=0;break}al=c[ah+4>>2]|0;am=c[ab>>2]|0;if((al|0)==(S|0)){aj=am;break L2430}else{ah=al;ak=am}}ak=cu(-1,-1)|0;ao=K;ar=ak;W=1841;break L2420}}while(0);x=0;ap(96,aj|0);if(x){x=0;W=1840;break}x=0;aJ(16,c[ab>>2]|0,35714,E|0);if(x){x=0;W=1840;break}x=0;aJ(16,c[ab>>2]|0,35716,F|0);if(x){x=0;W=1840;break}Z=c[F>>2]|0;L2439:do{if((Z|0)>0){_=G|0;c[_>>2]=0;ak=G+4|0;c[ak>>2]=0;ah=G+8|0;c[ah>>2]=0;am=(x=0,as(154,Z|0)|0);if(x){x=0;al=cu(-1,-1)|0;ao=K;ar=al;W=1841;break L2420}c[ak>>2]=am;c[_>>2]=am;c[ah>>2]=am+Z;ah=Z;al=am;do{if((al|0)==0){at=0}else{a[al]=0;at=al}al=at+1|0;ah=ah-1|0;}while((ah|0)!=0);c[ak>>2]=al;ah=c[_>>2]|0;x=0;aN(32,c[ab>>2]|0,c[F>>2]|0,H|0,ah|0);L2450:do{if(!x){am=(x=0,aF(40,17280,ah|0)|0);if(x){x=0;W=1876;break}x=0;aq(96,m|0,am+(c[(c[am>>2]|0)-12>>2]|0)|0);if(x){x=0;W=1876;break}au=(x=0,aF(62,m|0,17008)|0);do{if(!x){av=(x=0,aF(c[(c[au>>2]|0)+28>>2]|0,au|0,10)|0);if(x){x=0;break}x=0;ap(228,m|0);if(x){x=0;W=1876;break L2450}x=0,aF(6,am|0,av|0)|0;if(x){x=0;W=1876;break L2450}x=0,as(90,am|0)|0;if(x){x=0;W=1876;break L2450}if((ah|0)==0){break L2439}if((ah|0)!=(al|0)){c[ak>>2]=ah}nU(ah);break L2439}else{x=0}}while(0);am=cu(-1,-1)|0;au=K;x=0;ap(228,m|0);if(!x){aw=au;ax=am;break}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;W=1876}}while(0);if((W|0)==1876){_=cu(-1,-1)|0;aw=K;ax=_}_=ax;am=aw;if((ah|0)==0){az=_;aA=am;break L2420}if((ah|0)!=(al|0)){c[ak>>2]=ah}nU(ah);az=_;aA=am;break L2420}}while(0);if((c[E>>2]|0)==0){x=0;ap(206,c[ab>>2]|0);if(x){x=0;W=1840;break}x=0;aJ(28,408,1464,92);if(x){x=0;W=1840;break}}x=0;ap(114,c[ab>>2]|0);if(x){x=0;W=1840;break}Z=(x=0,aH(8)|0);if(x){x=0;W=1840;break}x=0;aJ(36,I|0,168,10);if(x){x=0;W=1840;break}eA(l,Z|0,I);Z=c[l>>2]|0;if((Z|0)==0){aB=0}else{aB=c[Z+20>>2]<<4}x=0;ap(384,I|0);if(x){x=0;W=1840;break}Z=b+4|0;x=0;aq(40,1,Z|0);if(x){x=0;W=1840;break}x=0;aq(34,34962,c[Z>>2]|0);if(x){x=0;W=1840;break}am=(x=0,aH(8)|0);if(x){x=0;W=1840;break}x=0;aJ(36,J|0,3784,3);if(x){x=0;W=1840;break}fl(k,am+80|0,J);am=c[k>>2]|0;if((am|0)==0){aC=0}else{aC=c[am+20>>2]|0}x=0;aN(22,34962,aB|0,aC|0,35048);if(x){x=0;am=cu(-1,-1)|0;_=K;x=0;ap(384,J|0);if(!x){az=am;aA=_;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}x=0;ap(384,J|0);if(x){x=0;W=1840;break}_=b+8|0;x=0;aq(40,1,_|0);if(x){x=0;W=1840;break}x=0;aq(34,34962,c[_>>2]|0);if(x){x=0;W=1840;break}am=(x=0,aH(8)|0);if(x){x=0;W=1840;break}x=0;aJ(36,L|0,3400,5);if(x){x=0;W=1840;break}fl(j,am+80|0,L);am=c[j>>2]|0;if((am|0)==0){aG=0}else{aG=c[am+20>>2]|0}x=0;aN(22,34962,aB|0,aG|0,35048);if(x){x=0;am=cu(-1,-1)|0;au=K;x=0;ap(384,L|0);if(!x){az=am;aA=au;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}x=0;ap(384,L|0);if(x){x=0;W=1840;break}au=b+12|0;x=0;aq(128,1,au|0);if(x){x=0;W=1840;break}x=0;ap(90,c[au>>2]|0);if(x){x=0;W=1840;break}x=0;ap(88,0);if(x){x=0;W=1840;break}x=0;ap(88,1);if(x){x=0;W=1840;break}x=0;aq(34,34962,c[Z>>2]|0);if(x){x=0;W=1840;break}x=0;ay(20,0,4,5126,0,0,0);if(x){x=0;W=1840;break}x=0;aq(34,34962,c[_>>2]|0);if(x){x=0;W=1840;break}x=0;ay(20,1,4,5126,0,0,0);if(x){x=0;W=1840;break}au=(x=0,aH(8)|0);if(x){x=0;W=1840;break}x=0;aJ(36,M|0,3208,13);if(x){x=0;W=1840;break}eA(h,au|0,M);au=c[h>>2]|0;if((au|0)==0){aI=0}else{aI=(c[au+20>>2]|0)!=0}x=0;ap(384,M|0);if(x){x=0;W=1840;break}do{if(aI){au=(x=0,aH(8)|0);if(x){x=0;W=1840;break L2420}x=0;aJ(36,N|0,3040,6);if(x){x=0;W=1840;break L2420}am=c[Z>>2]|0;av=(x=0,aF(4,au+20|0,N|0)|0);if(x){x=0;au=cu(-1,-1)|0;aK=K;x=0;ap(384,N|0);if(!x){az=au;aA=aK;break L2420}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}c[av>>2]=am;x=0;ap(384,N|0);if(x){x=0;W=1840;break L2420}am=(x=0,aH(8)|0);if(x){x=0;W=1840;break L2420}x=0;aJ(36,O|0,2960,8);if(x){x=0;W=1840;break L2420}av=c[_>>2]|0;aK=(x=0,aF(4,am+20|0,O|0)|0);if(!x){c[aK>>2]=av;x=0;ap(384,O|0);if(!x){break}else{x=0;W=1840;break L2420}}else{x=0}av=cu(-1,-1)|0;aK=K;x=0;ap(384,O|0);if(!x){az=av;aA=aK;break L2420}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}}while(0);_=(x=0,aH(8)|0);if(x){x=0;W=1840;break}x=0;aJ(36,P|0,2904,11);if(x){x=0;W=1840;break}eA(g,_|0,P);_=c[g>>2]|0;if((_|0)==0){aL=0.0}else{aL=+(c[_+20>>2]|0)}x=0;ap(384,P|0);if(x){x=0;W=1840;break}_=(x=0,aH(8)|0);if(x){x=0;W=1840;break}x=0;aJ(36,Q|0,2840,12);if(x){x=0;W=1840;break}eA(f,_|0,Q);_=c[f>>2]|0;if((_|0)==0){aM=0.0}else{aM=+(c[_+20>>2]|0)}x=0;ap(384,Q|0);if(x){x=0;W=1840;break}_=(x=0,aF(58,c[ab>>2]|0,2904)|0);if(x){x=0;W=1840;break}x=0;an(4,_|0,+aL);if(x){x=0;W=1840;break}_=(x=0,aF(58,c[ab>>2]|0,2840)|0);if(x){x=0;W=1840;break}x=0;an(4,_|0,+aM);if(x){x=0;W=1840;break}_=b+20|0;Z=b+24|0;aK=c[Z>>2]|0;av=c[_>>2]|0;am=aK-av>>2;do{if((am|0)==0){x=0;aq(28,_|0,1);if(x){x=0;W=1840;break L2420}}else{if(am>>>0<=1){break}au=av+4|0;if((au|0)==(aK|0)){break}c[Z>>2]=aK+(~((aK-4+(-au|0)|0)>>>2)<<2)}}while(0);aK=b+36|0;av=c[aK>>2]|0;am=c[b+32>>2]|0;if((am|0)!=(av|0)){c[aK>>2]=av+(~((av-4+(-am|0)|0)>>>2)<<2)}c[(c[Z>>2]|0)-4>>2]=0;x=0;ap(240,3042);if(x){x=0;W=1840;break}x=0;aN(14,770,771,1,771);if(x){x=0;W=1840;break}x=0;ap(384,A|0);if(x){x=0;W=1825;break L2361}eZ(q);i=e;return}}while(0);if((W|0)==1840){am=cu(-1,-1)|0;ao=K;ar=am;W=1841}if((W|0)==1841){az=ar;aA=ao}x=0;ap(384,A|0);if(!x){aO=az;aP=aA;break L2361}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}else if((W|0)==1837){am=cu(-1,-1)|0;av=K;x=0;ap(384,C|0);if(!x){ae=am;af=av;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}}while(0);x=0;ap(384,B|0);if(!x){aO=ae;aP=af;break L2361}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}else{x=0}}while(0);Y=cu(-1,-1)|0;av=K;x=0;ap(384,v|0);if(!x){aQ=Y;aR=av;W=1834;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}}while(0);if((W|0)==1832){av=cu(-1,-1)|0;aQ=av;aR=K;W=1834}do{if((W|0)==1834){x=0;ap(384,y|0);if(!x){ac=aQ;ad=aR;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}}while(0);x=0;ap(384,w|0);if(!x){aO=ac;aP=ad;break L2361}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}else{x=0}}while(0);X=cu(-1,-1)|0;av=K;x=0;ap(384,r|0);if(!x){aS=X;aT=av;W=1829;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}}while(0);if((W|0)==1827){av=cu(-1,-1)|0;aS=av;aT=K;W=1829}do{if((W|0)==1829){x=0;ap(384,t|0);if(!x){$=aS;aa=aT;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}}while(0);x=0;ap(384,s|0);if(!x){aO=$;aP=aa;break}else{x=0}aD=cu(-1,-1,0)|0;aE=K;cA()}else{x=0;W=1825}}while(0);if((W|0)==1825){W=cu(-1,-1)|0;aO=W;aP=K}x=0;ap(38,q|0);if(!x){bk(aO|0)}else{x=0;aD=cu(-1,-1,0)|0;aE=K;cA()}}function fh(a,b){a=a|0;b=+b;var d=0,e=0,f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0;d=i;i=i+456|0;e=d|0;f=d+8|0;h=d+16|0;j=d+24|0;k=d+40|0;l=d+56|0;m=d+72|0;n=d+136|0;o=d+200|0;p=d+264|0;q=d+328|0;r=d+392|0;s=eT()|0;gG(j,168,10);eA(h,s|0,j);s=c[h>>2]|0;if((s|0)==0){t=0}else{t=c[s+20>>2]|0}gI(j);j=eT()|0;gG(k,2904,11);eA(f,j|0,k);j=c[f>>2]|0;if((j|0)==0){u=0.0}else{u=+(c[j+20>>2]|0)}gI(k);k=eT()|0;gG(l,2840,12);eA(e,k|0,l);k=c[e>>2]|0;if((k|0)==0){v=0.0}else{v=+(c[k+20>>2]|0)}gI(l);w=u/v;l=a+16|0;bj(bz(c[l>>2]|0,2792)|0,+b);k=bz(c[l>>2]|0,2728)|0;e=bz(c[l>>2]|0,2712)|0;v=b*.4;b=+Y(+v)*100.0;u=+Z(+v)*100.0;n0(m|0,0,60);l=m|0;g[l>>2]=1.0;n0(m+4|0,0,16);g[m+20>>2]=1.0;n0(m+24|0,0,16);g[m+40>>2]=1.0;n0(m+44|0,0,16);g[m+60>>2]=1.0;n0(n|0,0,60);g[n>>2]=1.0;n0(n+4|0,0,16);g[n+20>>2]=1.0;n0(n+24|0,0,16);g[n+40>>2]=1.0;n0(n+44|0,0,16);g[n+60>>2]=1.0;v=0.0-b;x=0.0-u;y=1.0/+W(+(v*v+x*x+0.0));z=v*y;v=x*y;x=y*0.0;y=x*0.0;A=v-y;B=y-z;y=z*0.0-v*0.0;C=1.0/+W(+(y*y+(A*A+B*B)));D=C*A;A=C*B;B=C*y;y=x*A-v*B;C=z*B-x*D;E=v*D-z*A;m=o|0;j=o+16|0;f=o+32|0;s=o+48|0;n0(o|0,0,52);g[o+60>>2]=1.0;g[m>>2]=D;g[j>>2]=A;g[f>>2]=B;g[m+4>>2]=y;g[j+4>>2]=C;g[f+4>>2]=E;g[m+8>>2]=-0.0-z;g[j+8>>2]=-0.0-v;g[f+8>>2]=-0.0-x;g[s>>2]=-0.0-(B*25.0+(b*D+u*A));g[s+4>>2]=-0.0-(E*25.0+(b*y+u*C));g[s+8>>2]=x*25.0+(b*z+u*v);v=+_(.21816615760326385)*10.0;s=p+32|0;n0(p|0,0,64);g[p>>2]=20.0/(w*v-w*(-0.0-v));g[p+20>>2]=20.0/(v+v);g[s+8>>2]=-1.105263113975525;g[s+12>>2]=-1.0;g[p+56>>2]=-21.052631378173828;fi(r,p,o);fi(q,r,n);n=a+20|0;bC(36160,c[c[n>>2]>>2]|0);cm(16384);bm(e|0,0);dm(k|0,1,0,q|0);cW(c[a+12>>2]|0);ci(0,0,t|0);c8();t=a+24|0;q=c[n>>2]|0;if(((c[t>>2]|0)-q|0)<=4){i=d;return}r=a+32|0;o=a+44|0;a=1;p=q;do{bC(36160,c[p+(a<<2)>>2]|0);cr(33984);aX(3553,c[(c[r>>2]|0)+(a-1<<2)>>2]|0);cm(16384);bm(e|0,a|0);dm(k|0,1,0,l|0);cW(c[o>>2]|0);ci(4,0,6);c8();a=a+1|0;p=c[n>>2]|0;}while((a|0)<((c[t>>2]|0)-p>>2|0));i=d;return}function fi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0.0,q=0.0,r=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0.0;d=+g[b>>2];e=+g[b+4>>2];f=+g[b+8>>2];h=+g[b+12>>2];i=+g[b+16>>2];j=+g[b+20>>2];k=+g[b+24>>2];l=+g[b+28>>2];m=+g[b+32>>2];n=+g[b+36>>2];o=+g[b+40>>2];p=+g[b+44>>2];q=+g[b+48>>2];r=+g[b+52>>2];s=+g[b+56>>2];t=+g[b+60>>2];u=+g[c>>2];v=+g[c+4>>2];w=+g[c+8>>2];x=+g[c+12>>2];y=+g[c+16>>2];z=+g[c+20>>2];A=+g[c+24>>2];B=+g[c+28>>2];C=+g[c+32>>2];D=+g[c+36>>2];E=+g[c+40>>2];F=+g[c+44>>2];G=+g[c+48>>2];H=+g[c+52>>2];I=+g[c+56>>2];J=+g[c+60>>2];n0(a|0,0,60);g[a>>2]=d*u+i*v+m*w+q*x;g[a+4>>2]=e*u+j*v+n*w+r*x;g[a+8>>2]=f*u+k*v+o*w+s*x;g[a+12>>2]=h*u+l*v+p*w+t*x;g[a+16>>2]=d*y+i*z+m*A+q*B;g[a+20>>2]=e*y+j*z+n*A+r*B;g[a+24>>2]=f*y+k*z+o*A+s*B;g[a+28>>2]=h*y+l*z+p*A+t*B;g[a+32>>2]=d*C+i*D+m*E+q*F;g[a+36>>2]=e*C+j*D+n*E+r*F;g[a+40>>2]=f*C+k*D+o*E+s*F;g[a+44>>2]=h*C+l*D+p*E+t*F;g[a+48>>2]=d*G+i*H+m*I+q*J;g[a+52>>2]=e*G+j*H+n*I+r*J;g[a+56>>2]=f*G+k*H+o*I+s*J;g[a+60>>2]=h*G+l*H+p*I+t*J;return}function fj(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;b=i;i=i+120|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=b+32|0;j=b+40|0;k=b+56|0;l=b+72|0;m=b+88|0;n=b+104|0;o=eT()|0;gG(j,3208,13);eA(h,o|0,j);o=c[h>>2]|0;do{if((o|0)==0){gI(j)}else{h=(c[o+20>>2]|0)==0;gI(j);if(h){break}i=b;return}}while(0);ct(34962,c[a+4>>2]|0);j=eT()|0;gG(k,168,10);eA(g,j|0,k);j=c[g>>2]|0;if((j|0)==0){p=0}else{p=c[j+20>>2]<<4}j=(x=0,aH(8)|0);do{if(!x){x=0;aJ(36,l|0,3784,3);if(x){x=0;q=2008;break}fl(f,j+80|0,l);g=c[f>>2]|0;if((g|0)==0){r=0}else{r=c[g+20>>2]|0}x=0;aN(8,34962,0,p|0,r|0);if(x){x=0;g=cu(-1,-1)|0;o=K;x=0;ap(384,l|0);if(!x){s=o;t=g;break}else{x=0}u=cu(-1,-1,0)|0;v=K;cA()}x=0;ap(384,l|0);if(x){x=0;q=2008;break}gI(k);ct(34962,c[a+8>>2]|0);g=eT()|0;gG(m,168,10);eA(e,g|0,m);g=c[e>>2]|0;if((g|0)==0){w=0}else{w=c[g+20>>2]<<4}g=(x=0,aH(8)|0);do{if(!x){x=0;aJ(36,n|0,3400,5);if(x){x=0;q=2011;break}fl(d,g+80|0,n);o=c[d>>2]|0;if((o|0)==0){y=0}else{y=c[o+20>>2]|0}x=0;aN(8,34962,0,w|0,y|0);if(x){x=0;o=cu(-1,-1)|0;h=K;x=0;ap(384,n|0);if(!x){z=h;A=o;break}else{x=0}u=cu(-1,-1,0)|0;v=K;cA()}x=0;ap(384,n|0);if(x){x=0;q=2011;break}gI(m);i=b;return}else{x=0;q=2011}}while(0);if((q|0)==2011){g=cu(-1,-1)|0;z=K;A=g}x=0;ap(384,m|0);if(!x){B=z;C=A;D=C;E=0;F=D;G=B;bk(F|0)}else{x=0;u=cu(-1,-1,0)|0;v=K;cA()}}else{x=0;q=2008}}while(0);if((q|0)==2008){q=cu(-1,-1)|0;s=K;t=q}x=0;ap(384,k|0);if(!x){B=s;C=t;D=C;E=0;F=D;G=B;bk(F|0)}else{x=0;u=cu(-1,-1,0)|0;v=K;cA()}}function fk(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;d=a+8|0;e=c[d>>2]|0;f=a+4|0;g=c[f>>2]|0;h=g;if(e-h>>2>>>0>=b>>>0){i=b;j=g;do{if((j|0)==0){k=0}else{c[j>>2]=0;k=c[f>>2]|0}j=k+4|0;c[f>>2]=j;i=i-1|0;}while((i|0)!=0);return}i=a|0;j=c[i>>2]|0;k=(h-j>>2)+b|0;if(k>>>0>1073741823){lu(a);l=c[d>>2]|0;m=c[i>>2]|0}else{l=e;m=j}j=m;m=l-j|0;if(m>>2>>>0>536870910){n=1073741823;o=(c[f>>2]|0)-j>>2;p=2034}else{l=m>>1;m=l>>>0<k>>>0?k:l;l=(c[f>>2]|0)-j>>2;if((m|0)==0){q=0;r=0;s=l}else{n=m;o=l;p=2034}}if((p|0)==2034){q=nS(n<<2)|0;r=n;s=o}o=b;b=q+(s<<2)|0;do{if((b|0)==0){t=0}else{c[b>>2]=0;t=b}b=t+4|0;o=o-1|0;}while((o|0)!=0);o=q+(r<<2)|0;r=c[i>>2]|0;t=(c[f>>2]|0)-r|0;n=q+(s-(t>>2)<<2)|0;s=n;q=r;n4(s|0,q|0,t)|0;c[i>>2]=n;c[f>>2]=b;c[d>>2]=o;if((r|0)==0){return}nU(q);return}function fl(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;g=f;h=a[f]|0;i=(h&1)==0;if(i){j=g+1|0}else{j=c[f+8>>2]|0}k=h&255;h=(k&1|0)==0;if(h){l=k>>>1}else{l=c[f+4>>2]|0}if(l>>>0>3){m=l;n=j;o=l;while(1){p=n;q=ag(d[p]|d[p+1|0]<<8|d[p+2|0]<<16|d[p+3|0]<<24|0,1540483477)|0;p=ag(q>>>24^q,1540483477)|0;q=p^(ag(m,1540483477)|0);p=n+4|0;r=o-4|0;if(r>>>0>3){m=q;n=p;o=r}else{s=q;t=p;u=r;break}}}else{s=l;t=j;u=l}if((u|0)==3){v=d[t+2|0]<<16^s;w=2055}else if((u|0)==2){v=s;w=2055}else if((u|0)==1){x=s;w=2056}else{y=s}if((w|0)==2055){x=d[t+1|0]<<8^v;w=2056}if((w|0)==2056){y=ag(d[t]^x,1540483477)|0}x=ag(y>>>13^y,1540483477)|0;y=x>>>15^x;x=c[e+4>>2]|0;L2713:do{if((x|0)!=0){t=x-1|0;w=(t&x|0)!=0;if(w){z=(y>>>0)%(x>>>0)|0}else{z=y&t}v=c[(c[e>>2]|0)+(z<<2)>>2]|0;if((v|0)==0){break}s=c[v>>2]|0;if((s|0)==0){break}v=g+1|0;u=f+8|0;l=f+4|0;j=s;L2721:while(1){s=c[j+4>>2]|0;if(w){A=(s>>>0)%(x>>>0)|0}else{A=s&t}if((A|0)!=(z|0)){break L2713}s=j+8|0;o=s;n=a[s]|0;s=n&255;if((s&1|0)==0){B=s>>>1}else{B=c[j+12>>2]|0}if(h){C=k>>>1}else{C=c[l>>2]|0}L2736:do{if((B|0)==(C|0)){s=(n&1)==0;if(s){D=o+1|0}else{D=c[j+16>>2]|0}if(i){E=v}else{E=c[u>>2]|0}if(!s){if((n3(D|0,E|0,B|0)|0)==0){break L2721}else{break}}if((B|0)==0){break L2721}else{F=E;G=D;H=B}while(1){if((a[G]|0)!=(a[F]|0)){break L2736}s=H-1|0;if((s|0)==0){break L2721}else{F=F+1|0;G=G+1|0;H=s}}}}while(0);o=c[j>>2]|0;if((o|0)==0){break L2713}else{j=o}}c[b>>2]=j;return}}while(0);c[b>>2]=0;return}function fm(a){a=a|0;c[a>>2]=7464;n0(a+4|0,0,40);return}function fn(a){a=a|0;var b=0;x=0;ap(336,a|0);if(!x){nU(a);return}else{x=0;b=cu(-1,-1)|0;nU(a);bk(b|0)}}function fo(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;c[a>>2]=7464;b=a+32|0;d=c[b>>2]|0;if((d|0)!=0){e=a+36|0;f=c[e>>2]|0;do{if((d|0)==(f|0)){g=d}else{h=f;while(1){i=h-4|0;c[e>>2]=i;j=c[i>>2]|0;if((j|0)==0){k=i}else{x=0,as(32,j|0)|0;if(x){x=0;l=2101;break}k=c[e>>2]|0}if((d|0)==(k|0)){l=2102;break}else{h=k}}if((l|0)==2102){g=c[b>>2]|0;break}else if((l|0)==2101){h=cu(-1,-1)|0;b2(h|0)}}}while(0);nU(g)}g=c[a+28>>2]|0;do{if((g|0)==0){l=2106}else{x=0,as(32,g|0)|0;if(!x){l=2106;break}else{x=0}b=cu(-1,-1)|0;k=b;b=K;d=c[a+24>>2]|0;if((d|0)==0){m=b;n=k;l=2123;break}x=0,as(32,d|0)|0;if(!x){m=b;n=k;l=2123;break}else{x=0}o=cu(-1,-1,0)|0;p=K;cA()}}while(0);L2781:do{if((l|0)==2106){g=c[a+24>>2]|0;do{if((g|0)!=0){x=0,as(32,g|0)|0;if(!x){break}else{x=0}k=cu(-1,-1)|0;m=K;n=k;l=2123;break L2781}}while(0);g=c[a+20>>2]|0;do{if((g|0)!=0){x=0,as(32,g|0)|0;if(!x){break}else{x=0}k=cu(-1,-1)|0;q=K;r=k;l=2126;break L2781}}while(0);g=c[a+16>>2]|0;do{if((g|0)!=0){x=0,as(102,g|0)|0;if(!x){break}else{x=0}k=cu(-1,-1)|0;s=K;t=k;l=2129;break L2781}}while(0);g=c[a+12>>2]|0;do{if((g|0)!=0){x=0,as(94,g|0)|0;if(!x){break}else{x=0}k=cu(-1,-1)|0;u=K;v=k;l=2132;break L2781}}while(0);g=c[a+8>>2]|0;do{if((g|0)!=0){x=0,as(40,g|0)|0;if(!x){break}else{x=0}k=cu(-1,-1)|0;w=K;y=k;break L2781}}while(0);g=c[a+4>>2]|0;if((g|0)==0){return}x=0,as(170,g|0)|0;if(!x){return}else{x=0}g=cu(-1,-1)|0;z=K;A=g;B=A;C=0;D=B;E=z;bk(D|0)}}while(0);do{if((l|0)==2123){g=c[a+20>>2]|0;if((g|0)==0){q=m;r=n;l=2126;break}x=0,as(32,g|0)|0;if(!x){q=m;r=n;l=2126;break}else{x=0}o=cu(-1,-1,0)|0;p=K;cA()}}while(0);do{if((l|0)==2126){n=c[a+16>>2]|0;if((n|0)==0){s=q;t=r;l=2129;break}x=0,as(102,n|0)|0;if(!x){s=q;t=r;l=2129;break}else{x=0}o=cu(-1,-1,0)|0;p=K;cA()}}while(0);do{if((l|0)==2129){r=c[a+12>>2]|0;if((r|0)==0){u=s;v=t;l=2132;break}x=0,as(94,r|0)|0;if(!x){u=s;v=t;l=2132;break}else{x=0}o=cu(-1,-1,0)|0;p=K;cA()}}while(0);do{if((l|0)==2132){t=c[a+8>>2]|0;if((t|0)==0){w=u;y=v;break}x=0,as(40,t|0)|0;if(!x){w=u;y=v;break}else{x=0}o=cu(-1,-1,0)|0;p=K;cA()}}while(0);v=c[a+4>>2]|0;if((v|0)==0){z=w;A=y;B=A;C=0;D=B;E=z;bk(D|0)}x=0,as(170,v|0)|0;if(!x){z=w;A=y;B=A;C=0;D=B;E=z;bk(D|0)}else{x=0;o=cu(-1,-1,0)|0;p=K;cA()}}function fp(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0;d=i;i=i+24|0;e=d|0;f=d+8|0;g=f;h=i;i=i+144|0;j=i;i=i+12|0;i=i+7&-8;x=0;ap(76,b|0);if(!x){i=d;return}else{x=0}b=cu(-1,-1,12736)|0;k=b;b=K;if((b|0)!=(dl(12736)|0)){l=b;m=k;n=m;o=0;p=n;q=l;bk(p|0)}b=bW(k|0)|0;k=b;r=h+64|0;s=h|0;t=h+8|0;u=t|0;c[u>>2]=6072;v=h;w=h+12|0;y=w|0;c[s>>2]=13028;z=h+64|0;c[z>>2]=13048;c[h+4>>2]=0;x=0;aq(78,h+64|0,w|0);L2840:do{if(!x){c[h+136>>2]=0;c[h+140>>2]=-1;A=h+8|0;c[s>>2]=6052;c[r>>2]=6092;c[u>>2]=6072;x=0;ap(62,y|0);do{if(!x){B=w|0;c[B>>2]=6232;C=h+44|0;n0(h+44|0,0,16);c[h+60>>2]=24;n0(g|0,0,12);x=0;aq(116,w|0,f|0);do{if(!x){x=0;ap(384,f|0);if(x){x=0;D=cu(-1,-1)|0;E=D;F=K;break}D=(x=0,aF(40,t|0,1080)|0);L2849:do{if(!x){G=dz[c[(c[b>>2]|0)+8>>2]&255](k)|0;H=(x=0,aF(40,D|0,G|0)|0);if(x){x=0;I=2202;break}G=(x=0,aF(40,H|0,2864)|0);if(x){x=0;I=2202;break}H=(x=0,aF(46,G|0,c[b+4>>2]|0)|0);if(x){x=0;I=2202;break}x=0;aq(96,e|0,H+(c[(c[H>>2]|0)-12>>2]|0)|0);if(x){x=0;I=2202;break}G=(x=0,aF(62,e|0,17008)|0);do{if(!x){J=(x=0,aF(c[(c[G>>2]|0)+28>>2]|0,G|0,10)|0);if(x){x=0;break}x=0;ap(228,e|0);if(x){x=0;I=2202;break L2849}x=0,aF(6,H|0,J|0)|0;if(x){x=0;I=2202;break L2849}x=0,as(90,H|0)|0;if(x){x=0;I=2202;break L2849}x=0;aq(30,j|0,w|0);if(x){x=0;I=2202;break L2849}if((a[j]&1)==0){L=j+1|0}else{L=c[j+8>>2]|0}x=0;aJ(28,L|0,2480,53);if(x){x=0;J=cu(-1,-1)|0;M=K;x=0;ap(384,j|0);if(!x){N=M;O=J;break L2849}else{x=0;break L2840}}x=0;ap(384,j|0);if(x){x=0;I=2202;break L2849}c[s>>2]=6052;c[z>>2]=6092;c[A>>2]=6072;c[B>>2]=6232;x=0;ap(384,C|0);do{if(!x){x=0;ap(146,y|0);if(x){x=0;J=cu(-1,-1)|0;P=K;Q=J;I=2192;break}x=0;aq(16,v|0,7572);if(x){x=0;J=cu(-1,-1)|0;R=K;S=J;break}x=0;ap(54,r|0);if(x){x=0;J=cu(-1,-1)|0;T=K;U=J;I=2201;break L2840}aU();i=d;return}else{x=0;J=cu(-1,-1)|0;M=K;x=0;ap(146,y|0);if(!x){P=M;Q=J;I=2192;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((I|0)==2192){x=0;aq(16,v|0,7572);if(!x){R=P;S=Q;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,r|0);if(!x){T=R;U=S;I=2201;break L2840}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0}}while(0);H=cu(-1,-1)|0;G=K;x=0;ap(228,e|0);if(!x){V=G;W=H;I=2203;break}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;I=2202}}while(0);if((I|0)==2202){D=cu(-1,-1)|0;V=K;W=D;I=2203}if((I|0)==2203){N=V;O=W}c[s>>2]=6052;c[z>>2]=6092;c[A>>2]=6072;c[B>>2]=6232;x=0;ap(384,C|0);do{if(!x){x=0;ap(146,y|0);if(x){x=0;cu(-1,-1,0)|0;I=2211;break}x=0;aq(16,v|0,7572);if(!x){x=0;ap(54,r|0);if(!x){X=N;Y=O;I=2217;break L2840}else{x=0;break L2840}}else{x=0;cu(-1,-1,0)|0;break}}else{x=0;cu(-1,-1,0)|0;x=0;ap(146,y|0);if(!x){I=2211;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((I|0)==2211){x=0;aq(16,v|0,7572);if(!x){break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,r|0);if(!x){cA()}else{x=0;cu(-1,-1,0)|0;cA()}}else{x=0;D=cu(-1,-1)|0;H=K;x=0;ap(384,f|0);if(!x){E=D;F=H;break}else{x=0}Z=cu(-1,-1,0)|0;_=K;cA()}}while(0);x=0;ap(384,C|0);if(x){x=0;Z=cu(-1,-1,0)|0;_=K;cA()}x=0;ap(146,y|0);if(!x){$=F;aa=E;break}else{x=0;Z=cu(-1,-1,0)|0;_=K;cA()}}else{x=0;B=cu(-1,-1)|0;$=K;aa=B}}while(0);x=0;aq(16,v|0,7572);if(!x){ab=$;ac=aa;I=2165;break}else{x=0}ad=cu(-1,-1,0)|0;ae=K;cA()}else{x=0;A=cu(-1,-1)|0;ab=K;ac=A;I=2165}}while(0);do{if((I|0)==2165){x=0;ap(54,r|0);if(!x){T=ab;U=ac;I=2201;break}else{x=0;ad=cu(-1,-1,0)|0;ae=K;cA()}}}while(0);if((I|0)==2201){X=T;Y=U;I=2217}do{if((I|0)==2217){x=0;aK(8);if(!x){l=X;m=Y}else{x=0;break}n=m;o=0;p=n;q=l;bk(p|0)}}while(0);cu(-1,-1,0)|0;cA()}function fq(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,at=0,av=0,aw=0,ax=0,ay=0,az=0,aA=0,aB=0,aC=0,aD=0,aE=0,aI=0,aL=0,aM=0,aO=0,aP=0,aQ=0,aR=0,aT=0,aU=0,aV=0,aW=0,aX=0,aY=0,aZ=0,a_=0,a$=0,a0=0,a1=0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,ba=0,bb=0,bc=0,bd=0,be=0,bf=0,bg=0,bh=0,bi=0,bj=0,bl=0,bm=0,bn=0,bo=0,bp=0,bq=0,br=0,bs=0,bt=0,bu=0,bv=0,bw=0,bx=0,by=0,bz=0,bA=0,bB=0,bC=0,bD=0,bE=0,bF=0,bG=0,bH=0,bI=0,bJ=0,bK=0,bL=0,bM=0,bN=0,bO=0,bP=0,bQ=0,bR=0,bS=0,bT=0,bU=0,bV=0,bX=0,bY=0,bZ=0,b_=0,b$=0,b0=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0,ca=0,cb=0,cc=0,cd=0,ce=0,cf=0,ch=0,ci=0,cj=0,ck=0,cl=0,cm=0,cn=0,co=0,cp=0,cq=0,cr=0,cs=0,ct=0,cv=0,cw=0,cx=0,cy=0,cz=0,cB=0,cC=0,cD=0,cE=0,cF=0,cG=0,cH=0,cI=0,cJ=0,cK=0,cL=0,cM=0,cN=0,cO=0,cP=0,cQ=0,cR=0,cS=0,cT=0,cU=0,cV=0,cW=0,cX=0,cY=0,cZ=0,c_=0,c$=0,c0=0,c1=0,c2=0,c3=0,c4=0,c5=0,c6=0,c7=0,c8=0,da=0,db=0,dc=0,dd=0,de=0,df=0,dg=0,dh=0,di=0,dj=0,dk=0,dm=0,dn=0;d=i;i=i+192|0;e=d|0;f=d+8|0;g=d+16|0;h=d+24|0;j=d+32|0;k=d+40|0;l=d+48|0;m=d+56|0;n=d+64|0;o=d+72|0;p=d+80|0;q=d+88|0;r=d+96|0;s=d+104|0;t=d+112|0;u=d+120|0;v=d+136|0;w=d+144|0;y=d+152|0;z=d+160|0;A=d+168|0;B=d+176|0;C=B;D=i;i=i+12|0;i=i+7&-8;E=i;i=i+12|0;i=i+7&-8;F=i;i=i+28|0;i=i+7&-8;G=i;i=i+12|0;i=i+7&-8;H=i;i=i+12|0;i=i+7&-8;I=i;i=i+12|0;i=i+7&-8;J=i;i=i+12|0;i=i+7&-8;L=J;M=i;i=i+188|0;i=i+7&-8;N=i;i=i+136|0;O=i;i=i+12|0;i=i+7&-8;P=i;i=i+12|0;i=i+7&-8;Q=i;i=i+4|0;i=i+7&-8;R=i;i=i+12|0;i=i+7&-8;S=i;i=i+12|0;i=i+7&-8;T=i;i=i+12|0;i=i+7&-8;U=i;i=i+12|0;i=i+7&-8;V=i;i=i+12|0;i=i+7&-8;W=i;i=i+12|0;i=i+7&-8;X=i;i=i+12|0;i=i+7&-8;Y=i;i=i+12|0;i=i+7&-8;Z=D|0;c[Z>>2]=0;_=D+4|0;c[_>>2]=0;c[D+8>>2]=0;x=0,as(104,D|0)|0;L1:do{if(!x){if((c[Z>>2]|0)==(c[_>>2]|0)){x=0;aJ(28,1864,2480,63);if(x){x=0;$=4;break}}D=(x=0,aH(8)|0);if(x){x=0;$=4;break}x=0;aJ(36,E|0,1424,13);if(x){x=0;$=4;break}aa=(x=0,aF(22,D|0,E|0)|0);L8:do{if(!x){c[aa>>2]=0;x=0;ap(384,E|0);if(x){x=0;$=4;break L1}D=F|0;c[D>>2]=8200;c[F+4>>2]=0;c[F+8>>2]=8202;c[F+12>>2]=0;c[F+16>>2]=4228;c[F+20>>2]=c[c[Z>>2]>>2];c[F+24>>2]=0;ab=b+4|0;ac=(x=0,ar(2,D|0,1,0,0,0,A|0)|0);do{if(!x){D=c[A>>2]|0;if((D|0)!=0){ad=c9(12)|0;c[ad>>2]=7384;c[ad+4>>2]=D;c[ad+8>>2]=1488;x=0;aJ(12,ad|0,12736,202);if(x){x=0}ad=cu(-1,-1)|0;D=K;if((D|0)>=0){ae=D;af=ad;ag=ac;break}x=0;ap(48,ad|0);if(x){x=0;ah=ac;$=17;break}}ad=ab|0;D=c[ad>>2]|0;do{if((D|0)==0){$=23}else{x=0,as(170,D|0)|0;if(!x){$=23;break}else{x=0}ai=cu(-1,-1)|0;aj=ai;ai=K;if((ac|0)==0){ak=ai;al=aj;break L1}else{am=aj;an=ai}}}while(0);L24:do{if(($|0)==23){c[ad>>2]=ac;do{if((ac|0)!=0){x=0,as(74,ac|0)|0;if(!x){x=0,as(170,ac|0)|0;if(!x){break}else{x=0;$=4;break L1}}else{x=0;D=cu(-1,-1)|0;am=D;an=K;break L24}}}while(0);D=G|0;c[D>>2]=0;ai=G+4|0;c[ai>>2]=0;c[G+8>>2]=0;c[z>>2]=24;c[z+4>>2]=ad;aj=(x=0,au(48,z|0,4225,G|0)|0);do{if(!x){if((aj|0)!=0){ao=c9(12)|0;c[ao>>2]=7384;c[ao+4>>2]=aj;c[ao+8>>2]=2248;x=0;aJ(12,ao|0,12736,202);if(x){x=0}ao=cu(-1,-1)|0;at=K;if((at|0)>=0){av=at;aw=ao;break}x=0;ap(48,ao|0);if(x){x=0;$=34;break}}if((c[D>>2]|0)==(c[ai>>2]|0)){x=0;aJ(28,1272,2480,87);if(!x){$=45}else{x=0;$=44}}else{$=45}L44:do{if(($|0)==45){ao=(x=0,aH(8)|0);if(x){x=0;$=44;break}x=0;aJ(36,I|0,872,14);if(x){x=0;$=44;break}n0(L|0,0,12);ez(y,ao+60|0,I);ao=c[y>>2]|0;if((ao|0)==0){x=0;aq(94,H|0,J|0);if(!x){$=50}else{x=0;$=71}}else{x=0;aq(94,H|0,ao+20|0);if(!x){$=50}else{x=0;$=71}}do{if(($|0)==50){x=0;ap(384,J|0);if(x){x=0;ao=cu(-1,-1)|0;ax=K;ay=ao;break}x=0;ap(384,I|0);if(x){x=0;$=44;break L44}ao=M;at=M+108|0;az=M|0;aA=M;aB=M+8|0;aC=aB|0;aD=M;c[az>>2]=13068;aE=M+108|0;c[aE>>2]=13088;c[M+4>>2]=0;x=0;aq(78,M+108|0,aB|0);L57:do{if(!x){c[M+180>>2]=0;c[M+184>>2]=-1;c[az>>2]=6500;c[at>>2]=6520;x=0;ap(4,aB|0);L59:do{if(!x){if((a[H]&1)==0){aI=H+1|0}else{aI=c[H+8>>2]|0}aL=M+72|0;do{if((c[aL>>2]|0)==0){aM=cg(aI|0,2584)|0;c[aL>>2]=aM;if((aM|0)==0){$=60;break}c[M+96>>2]=8;$=77}else{$=60}}while(0);do{if(($|0)==60){aM=c[(c[aD>>2]|0)-12>>2]|0;x=0;aq(100,ao+aM|0,c[ao+(aM+16)>>2]|4|0);if(!x){if((c[aL>>2]|0)!=0){$=77;break}x=0;aJ(28,576,2480,95);if(!x){$=77;break}else{x=0;$=75;break}}else{x=0;aM=cu(-1,-1)|0;aO=K;x=0;ap(208,aB|0);if(!x){aP=aM;aQ=aO;break L59}else{x=0}aR=cu(-1,-1,0)|0;aT=K;cA()}}}while(0);L75:do{if(($|0)==77){aO=N+56|0;aM=N|0;aU=N;aV=N+4|0;aW=aV|0;c[aM>>2]=12884;aX=N+56|0;c[aX>>2]=12904;x=0;aq(78,N+56|0,aV|0);do{if(!x){c[N+128>>2]=0;c[N+132>>2]=-1;c[aM>>2]=5956;c[aO>>2]=5976;x=0;ap(62,aW|0);do{if(!x){aY=aV|0;c[aY>>2]=6232;aZ=N+36|0;n0(N+36|0,0,16);c[N+52>>2]=16;n0(C|0,0,12);x=0;aq(116,aV|0,B|0);do{if(!x){x=0;ap(384,B|0);if(x){x=0;a_=cu(-1,-1)|0;a$=a_;a0=K;break}x=0,aF(16,aU|0,aC|0)|0;L86:do{if(!x){a_=c[aL>>2]|0;do{if((a_|0)==0){$=99}else{a1=(x=0,as(c[(c[aB>>2]|0)+24>>2]|0,aB|0)|0);if(x){x=0;a2=cu(-1,-1)|0;a3=K;aS(a_|0)|0;a4=a3;a5=a2;$=121;break L86}if((aS(a_|0)|0)!=0){$=99;break}c[aL>>2]=0;if((a1|0)!=0){$=99}}}while(0);if(($|0)==99){a_=c[(c[aD>>2]|0)-12>>2]|0;x=0;aq(100,ao+a_|0,c[ao+(a_+16)>>2]|4|0);if(x){x=0;$=120;break}}x=0;aq(30,O|0,aV|0);if(x){x=0;$=120;break}if((a[O]&1)==0){a6=O+1|0}else{a6=c[O+8>>2]|0}a_=P|0;c[a_>>2]=0;a1=P+4|0;c[a1>>2]=0;a2=P+8|0;c[a2>>2]=0;a3=(x=0,as(154,8)|0);do{if(!x){a7=a3;c[a1>>2]=a7;c[a_>>2]=a7;c[a2>>2]=a3+8;if((a3|0)==0){a8=0}else{c[a3>>2]=a6;c[a3+4>>2]=0;a8=a7}c[a1>>2]=a8+8;x=0;aN(16,Q|0,ab|0,P|0,0);L107:do{if(!x){a7=b+8|0;a9=c[a7>>2]|0;if((a9|0)==0){$=110}else{x=0,as(40,a9|0)|0;if(!x){$=110}else{x=0}}do{if(($|0)==110){a9=c[Q>>2]|0;c[a7>>2]=a9;if((a9|0)!=0){x=0,as(172,a9|0)|0;if(x){x=0;break}x=0,as(40,a9|0)|0;if(x){x=0;$=123;break L107}}a9=c[D>>2]|0;ba=(x=0,ar(6,c[a7>>2]|0,(c[ai>>2]|0)-a9>>2|0,a9|0,0,0,0)|0);do{if(!x){if((ba|0)!=0){a9=c9(12)|0;c[a9>>2]=7384;c[a9+4>>2]=ba;c[a9+8>>2]=1576;x=0;aJ(12,a9|0,12736,202);if(x){x=0}a9=cu(-1,-1,12736)|0;bb=K;if((bb|0)>=0){bc=bb;bd=a9;break}x=0;ap(48,a9|0);if(x){x=0;$=127;break}}a9=(x=0,au(60,c[a7>>2]|0,136,s|0)|0);do{if(!x){bb=c[s>>2]|0;if((bb|0)!=0){be=c9(12)|0;c[be>>2]=7384;c[be+4>>2]=bb;c[be+8>>2]=1592;x=0;aJ(12,be|0,12736,202);if(x){x=0}be=cu(-1,-1)|0;bb=K;if((bb|0)>=0){bf=bb;bg=be;bh=a9;break}x=0;ap(48,be|0);if(x){x=0;bi=a9;$=171;break}}be=b+12|0;bb=c[be>>2]|0;do{if((bb|0)==0){$=177}else{x=0,as(94,bb|0)|0;if(!x){$=177;break}else{x=0}bj=cu(-1,-1)|0;bl=bj;bj=K;if((a9|0)==0){bm=bj;bn=bl;break L107}else{bo=bl;bp=bj}}}while(0);L140:do{if(($|0)==177){c[be>>2]=a9;do{if((a9|0)!=0){x=0,as(136,a9|0)|0;if(!x){x=0,as(94,a9|0)|0;if(!x){break}else{x=0;$=123;break L107}}else{x=0;bb=cu(-1,-1)|0;bo=bb;bp=K;break L140}}}while(0);bb=(x=0,aG(6,c[ad>>2]|0,c[c[D>>2]>>2]|0,0,0,r|0)|0);do{if(!x){bj=c[r>>2]|0;if((bj|0)!=0){bl=c9(12)|0;c[bl>>2]=7384;c[bl+4>>2]=bj;c[bl+8>>2]=1608;x=0;aJ(12,bl|0,12736,202);if(x){x=0}bl=cu(-1,-1)|0;bj=K;if((bj|0)>=0){bq=bj;br=bl;bs=bb;break}x=0;ap(48,bl|0);if(x){x=0;bt=bb;$=188;break}}bl=b+16|0;bj=c[bl>>2]|0;do{if((bj|0)==0){$=194}else{x=0,as(102,bj|0)|0;if(!x){$=194;break}else{x=0}bu=cu(-1,-1)|0;bv=bu;bu=K;if((bb|0)==0){bm=bu;bn=bv;break L107}else{bw=bv;bx=bu}}}while(0);L161:do{if(($|0)==194){c[bl>>2]=bb;do{if((bb|0)!=0){x=0,as(28,bb|0)|0;if(!x){x=0,as(102,bb|0)|0;if(!x){break}else{x=0;$=123;break L107}}else{x=0;bj=cu(-1,-1)|0;bw=bj;bx=K;break L161}}}while(0);bj=(x=0,aH(8)|0);if(x){x=0;$=123;break L107}x=0;aJ(36,S|0,3704,10);if(x){x=0;$=123;break L107}eA(q,bj|0,S);bj=c[q>>2]|0;if((bj|0)==0){by=0}else{by=c[bj+20>>2]|0}x=0;ap(384,S|0);if(x){x=0;$=123;break L107}bj=(x=0,aH(8)|0);if(x){x=0;$=123;break L107}x=0;aJ(36,T|0,1424,13);if(x){x=0;$=123;break L107}eA(p,bj|0,T);bj=c[p>>2]|0;if((bj|0)==0){bz=0}else{bz=(c[bj+20>>2]|0)!=0}x=0;ap(384,T|0);if(x){x=0;$=123;break L107}L181:do{if(bz){bj=b+20|0;bu=(x=0,aH(8)|0);if(x){x=0;$=123;break L107}x=0;aJ(36,U|0,3344,6);if(x){x=0;$=123;break L107}fl(o,bu+20|0,U);bu=c[o>>2]|0;if((bu|0)==0){bA=0}else{bA=c[bu+20>>2]|0}bu=(x=0,aG(4,c[ad>>2]|0,1,0,bA|0,n|0)|0);L188:do{if(!x){bv=c[n>>2]|0;if((bv|0)!=0){bB=c9(12)|0;c[bB>>2]=7384;c[bB+4>>2]=bv;c[bB+8>>2]=1696;x=0;aJ(12,bB|0,12736,202);if(x){x=0}bB=cu(-1,-1)|0;bv=K;if((bv|0)>=0){bC=bv;bD=bB;bE=bu;$=221;break}x=0;ap(48,bB|0);if(x){x=0;bF=bu;$=220;break}}bB=bj|0;bv=c[bB>>2]|0;do{if((bv|0)==0){$=226}else{x=0,as(32,bv|0)|0;if(!x){$=226;break}else{x=0}bG=cu(-1,-1)|0;bH=bG;bG=K;if((bu|0)==0){bI=bG;bJ=bH;break L188}else{bK=bH;bL=bG}}}while(0);L201:do{if(($|0)==226){c[bB>>2]=bu;do{if((bu|0)!=0){x=0,as(176,bu|0)|0;if(x){x=0;bv=cu(-1,-1)|0;bK=bv;bL=K;break L201}x=0,as(32,bu|0)|0;if(!x){break}else{x=0}bv=cu(-1,-1)|0;bM=K;bN=bv;$=272;break L188}}while(0);x=0;ap(384,U|0);if(x){x=0;$=123;break L107}bv=b+24|0;bG=(x=0,aH(8)|0);if(x){x=0;$=123;break L107}x=0;aJ(36,V|0,3168,8);if(x){x=0;$=123;break L107}fl(m,bG+20|0,V);bG=c[m>>2]|0;if((bG|0)==0){bO=0}else{bO=c[bG+20>>2]|0}bG=(x=0,aG(4,c[ad>>2]|0,1,0,bO|0,l|0)|0);L216:do{if(!x){bH=c[l>>2]|0;if((bH|0)!=0){bP=c9(12)|0;c[bP>>2]=7384;c[bP+4>>2]=bH;c[bP+8>>2]=1696;x=0;aJ(12,bP|0,12736,202);if(x){x=0}bP=cu(-1,-1)|0;bH=K;if((bH|0)>=0){bQ=bH;bR=bP;bS=bG;$=243;break}x=0;ap(48,bP|0);if(x){x=0;bT=bG;$=242;break}}bP=bv|0;bH=c[bP>>2]|0;do{if((bH|0)==0){$=248}else{x=0,as(32,bH|0)|0;if(!x){$=248;break}else{x=0}bU=cu(-1,-1)|0;bV=bU;bU=K;if((bG|0)==0){bX=bU;bY=bV;break L216}else{bZ=bV;b_=bU}}}while(0);L229:do{if(($|0)==248){c[bP>>2]=bG;do{if((bG|0)!=0){x=0,as(176,bG|0)|0;if(x){x=0;bH=cu(-1,-1)|0;bZ=bH;b_=K;break L229}x=0,as(32,bG|0)|0;if(!x){break}else{x=0}bH=cu(-1,-1)|0;b$=K;b0=bH;$=277;break L216}}while(0);x=0;ap(384,V|0);if(x){x=0;$=123;break L107}bH=b+32|0;x=0;aq(118,bH|0,2);if(x){x=0;$=123;break L107}bU=b+36|0;bV=c[bU>>2]|0;b1=b+40|0;if((bV|0)==(c[b1>>2]|0)){x=0;aq(18,bH|0,bj|0);if(x){x=0;$=123;break L107}b2=c[bU>>2]|0}else{do{if((bV|0)!=0){b3=c[bB>>2]|0;c[bV>>2]=b3;if((b3|0)==0){break}x=0,as(176,b3|0)|0;if(x){x=0;$=123;break L107}}}while(0);bV=(c[bU>>2]|0)+4|0;c[bU>>2]=bV;b2=bV}if((b2|0)==(c[b1>>2]|0)){x=0;aq(18,bH|0,bv|0);if(!x){break L181}else{x=0;$=123;break L107}}do{if((b2|0)!=0){bV=c[bP>>2]|0;c[b2>>2]=bV;if((bV|0)==0){break}x=0,as(176,bV|0)|0;if(x){x=0;$=123;break L107}}}while(0);c[bU>>2]=(c[bU>>2]|0)+4;break L181}}while(0);x=0,as(32,bG|0)|0;if(!x){bX=b_;bY=bZ}else{x=0;break L8}}else{x=0;bT=0;$=242}}while(0);if(($|0)==242){bG=cu(-1,-1)|0;bQ=K;bR=bG;bS=bT;$=243}do{if(($|0)==243){if((bS|0)==0){b$=bQ;b0=bR;$=277;break}x=0,as(32,bS|0)|0;if(!x){b$=bQ;b0=bR;$=277;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if(($|0)==277){bX=b$;bY=b0}x=0;ap(384,V|0);if(!x){bm=bX;bn=bY;break L107}else{x=0;break L8}}}while(0);x=0,as(32,bu|0)|0;if(!x){bI=bL;bJ=bK}else{x=0;break L8}}else{x=0;bF=0;$=220}}while(0);if(($|0)==220){bu=cu(-1,-1)|0;bC=K;bD=bu;bE=bF;$=221}do{if(($|0)==221){if((bE|0)==0){bM=bC;bN=bD;$=272;break}x=0,as(32,bE|0)|0;if(!x){bM=bC;bN=bD;$=272;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if(($|0)==272){bI=bM;bJ=bN}x=0;ap(384,U|0);if(!x){bm=bI;bn=bJ;break L107}else{x=0;break L8}}else{x=0,as(96,4318)|0;if(x){x=0;$=123;break L107}bu=by<<4;bj=(x=0,aH(8)|0);if(x){x=0;$=123;break L107}x=0;aJ(36,W|0,3032,3);if(x){x=0;$=123;break L107}fl(k,bj+80|0,W);bj=c[k>>2]|0;if((bj|0)==0){b4=0}else{b4=c[bj+20>>2]|0}bj=(x=0,ar(8,c[ad>>2]|0,33,0,bu|0,b4|0,j|0)|0);L283:do{if(!x){bB=c[j>>2]|0;if((bB|0)!=0){bG=c9(12)|0;c[bG>>2]=7384;c[bG+4>>2]=bB;c[bG+8>>2]=1720;x=0;aJ(12,bG|0,12736,202);if(x){x=0}bG=cu(-1,-1)|0;bB=K;if((bB|0)>=0){b5=bB;b6=bG;b7=bj;$=294;break}x=0;ap(48,bG|0);if(x){x=0;b8=bj;$=293;break}}bG=b+20|0;bB=c[bG>>2]|0;do{if((bB|0)==0){$=299}else{x=0,as(32,bB|0)|0;if(!x){$=299;break}else{x=0}bv=cu(-1,-1)|0;bP=bv;bv=K;if((bj|0)==0){b9=bv;ca=bP;break L283}else{cb=bP;cc=bv}}}while(0);L296:do{if(($|0)==299){c[bG>>2]=bj;do{if((bj|0)!=0){x=0,as(176,bj|0)|0;if(x){x=0;bB=cu(-1,-1)|0;cb=bB;cc=K;break L296}x=0,as(32,bj|0)|0;if(!x){break}else{x=0}bB=cu(-1,-1)|0;cd=K;ce=bB;$=328;break L283}}while(0);x=0;ap(384,W|0);if(x){x=0;$=123;break L107}x=0,as(96,4318)|0;if(x){x=0;$=123;break L107}bB=(x=0,aH(8)|0);if(x){x=0;$=123;break L107}x=0;aJ(36,X|0,2952,5);if(x){x=0;$=123;break L107}fl(h,bB+80|0,X);bB=c[h>>2]|0;if((bB|0)==0){cf=0}else{cf=c[bB+20>>2]|0}bB=(x=0,ar(8,c[ad>>2]|0,33,0,bu|0,cf|0,g|0)|0);L312:do{if(!x){bv=c[g>>2]|0;if((bv|0)!=0){bP=c9(12)|0;c[bP>>2]=7384;c[bP+4>>2]=bv;c[bP+8>>2]=1720;x=0;aJ(12,bP|0,12736,202);if(x){x=0}bP=cu(-1,-1)|0;bv=K;if((bv|0)>=0){ch=bv;ci=bP;cj=bB;$=317;break}x=0;ap(48,bP|0);if(x){x=0;ck=bB;$=316;break}}bP=b+24|0;bv=c[bP>>2]|0;do{if((bv|0)==0){$=322}else{x=0,as(32,bv|0)|0;if(!x){$=322;break}else{x=0}bH=cu(-1,-1)|0;b1=bH;bH=K;if((bB|0)==0){cl=bH;cm=b1;break L312}else{cn=b1;co=bH}}}while(0);L325:do{if(($|0)==322){c[bP>>2]=bB;do{if((bB|0)!=0){x=0,as(176,bB|0)|0;if(x){x=0;bv=cu(-1,-1)|0;cn=bv;co=K;break L325}x=0,as(32,bB|0)|0;if(!x){break}else{x=0}bv=cu(-1,-1)|0;cp=K;cq=bv;$=333;break L312}}while(0);x=0;ap(384,X|0);if(!x){break L181}else{x=0;$=123;break L107}}}while(0);x=0,as(32,bB|0)|0;if(!x){cl=co;cm=cn}else{x=0;break L8}}else{x=0;ck=0;$=316}}while(0);if(($|0)==316){bB=cu(-1,-1)|0;ch=K;ci=bB;cj=ck;$=317}do{if(($|0)==317){if((cj|0)==0){cp=ch;cq=ci;$=333;break}x=0,as(32,cj|0)|0;if(!x){cp=ch;cq=ci;$=333;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if(($|0)==333){cl=cp;cm=cq}x=0;ap(384,X|0);if(!x){bm=cl;bn=cm;break L107}else{x=0;break L8}}}while(0);x=0,as(32,bj|0)|0;if(!x){b9=cc;ca=cb}else{x=0;break L8}}else{x=0;b8=0;$=293}}while(0);if(($|0)==293){bj=cu(-1,-1)|0;b5=K;b6=bj;b7=b8;$=294}do{if(($|0)==294){if((b7|0)==0){cd=b5;ce=b6;$=328;break}x=0,as(32,b7|0)|0;if(!x){cd=b5;ce=b6;$=328;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if(($|0)==328){b9=cd;ca=ce}x=0;ap(384,W|0);if(!x){bm=b9;bn=ca;break L107}else{x=0;break L8}}}while(0);x=0,as(96,4318)|0;if(x){x=0;$=123;break L107}bj=(x=0,aH(8)|0);if(x){x=0;$=123;break L107}x=0;aJ(36,Y|0,2888,8);if(x){x=0;$=123;break L107}fl(f,bj+80|0,Y);bj=c[f>>2]|0;if((bj|0)==0){cr=0}else{cr=c[bj+20>>2]|0}bj=(x=0,ar(8,c[ad>>2]|0,33,0,by<<2|0,cr|0,e|0)|0);L361:do{if(!x){bu=c[e>>2]|0;if((bu|0)!=0){bG=c9(12)|0;c[bG>>2]=7384;c[bG+4>>2]=bu;c[bG+8>>2]=1720;x=0;aJ(12,bG|0,12736,202);if(x){x=0}bG=cu(-1,-1)|0;bu=K;if((bu|0)>=0){cs=bu;ct=bG;cv=bj;$=350;break}x=0;ap(48,bG|0);if(x){x=0;cw=bj;$=349;break}}bG=b+28|0;bu=c[bG>>2]|0;do{if((bu|0)==0){$=355}else{x=0,as(32,bu|0)|0;if(!x){$=355;break}else{x=0}bB=cu(-1,-1)|0;bP=bB;bB=K;if((bj|0)==0){cx=bB;cy=bP;break L361}else{cz=bP;cB=bB}}}while(0);L374:do{if(($|0)==355){c[bG>>2]=bj;do{if((bj|0)!=0){x=0,as(176,bj|0)|0;if(x){x=0;bu=cu(-1,-1)|0;cz=bu;cB=K;break L374}x=0,as(32,bj|0)|0;if(!x){break}else{x=0}bu=cu(-1,-1)|0;cC=K;cD=bu;$=396;break L361}}while(0);x=0;ap(384,Y|0);if(x){x=0;$=123;break L107}bu=c[a_>>2]|0;bB=bu;if((bu|0)!=0){bP=c[a1>>2]|0;if((bu|0)!=(bP|0)){c[a1>>2]=bP+(~((bP-8+(-bB|0)|0)>>>3)<<3)}nU(bu)}x=0;ap(384,O|0);if(x){x=0;$=120;break L86}c[aM>>2]=5956;c[aX>>2]=5976;c[aY>>2]=6232;x=0;ap(384,aZ|0);do{if(!x){x=0;ap(146,aW|0);if(x){x=0;bu=cu(-1,-1)|0;cE=K;cF=bu;$=371;break}x=0;aq(66,aU|0,7556);if(x){x=0;bu=cu(-1,-1)|0;cG=K;cH=bu;break}x=0;ap(54,aO|0);if(x){x=0;$=75;break L75}c[az>>2]=6500;c[aE>>2]=6520;x=0;ap(208,aB|0);do{if(!x){x=0;aq(88,aA|0,7612);if(x){x=0;bu=cu(-1,-1)|0;cI=K;cJ=bu;break}x=0;ap(54,at|0);if(x){x=0;bu=cu(-1,-1)|0;cK=K;cL=bu;$=74;break L57}x=0;ap(384,H|0);if(x){x=0;$=44;break L44}bu=c[D>>2]|0;bB=bu;if((bu|0)!=0){bP=c[ai>>2]|0;if((bu|0)!=(bP|0)){c[ai>>2]=bP+(~((bP-4+(-bB|0)|0)>>>2)<<2)}nU(bu)}bu=c[Z>>2]|0;if((bu|0)==0){i=d;return}bB=c[_>>2]|0;if((bu|0)!=(bB|0)){c[_>>2]=bB+(~((bB-4+(-bu|0)|0)>>>2)<<2)}nU(bu);i=d;return}else{x=0;bu=cu(-1,-1)|0;bB=K;x=0;aq(88,aA|0,7612);if(!x){cI=bB;cJ=bu;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,at|0);if(!x){cK=cI;cL=cJ;$=74;break L57}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;bu=cu(-1,-1)|0;bB=K;x=0;ap(146,aW|0);if(!x){cE=bB;cF=bu;$=371;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if(($|0)==371){x=0;aq(66,aU|0,7556);if(!x){cG=cE;cH=cF;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,aO|0);if(!x){cM=cG;cN=cH;$=76;break L75}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0,as(32,bj|0)|0;if(!x){cx=cB;cy=cz}else{x=0;break L8}}else{x=0;cw=0;$=349}}while(0);if(($|0)==349){bj=cu(-1,-1)|0;cs=K;ct=bj;cv=cw;$=350}do{if(($|0)==350){if((cv|0)==0){cC=cs;cD=ct;$=396;break}x=0,as(32,cv|0)|0;if(!x){cC=cs;cD=ct;$=396;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);if(($|0)==396){cx=cC;cy=cD}x=0;ap(384,Y|0);if(!x){bm=cx;bn=cy;break L107}else{x=0;break L8}}}while(0);x=0,as(102,bb|0)|0;if(!x){bm=bx;bn=bw;break L107}else{x=0;break L8}}else{x=0;bt=0;$=188}}while(0);if(($|0)==188){bb=cu(-1,-1)|0;bq=K;br=bb;bs=bt}if((bs|0)==0){cO=bq;cP=br;$=124;break L107}x=0,as(102,bs|0)|0;if(!x){cO=bq;cP=br;$=124;break L107}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0,as(94,a9|0)|0;if(!x){bm=bp;bn=bo;break L107}else{x=0;break L8}}else{x=0;bi=0;$=171}}while(0);if(($|0)==171){a9=cu(-1,-1)|0;bf=K;bg=a9;bh=bi}if((bh|0)==0){cO=bf;cP=bg;$=124;break L107}x=0,as(94,bh|0)|0;if(!x){cO=bf;cP=bg;$=124;break L107}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;$=127}}while(0);if(($|0)==127){ba=cu(-1,-1,12736)|0;bc=K;bd=ba}ba=bd;a9=bc;if((a9|0)!=(dl(12736)|0)){bm=a9;bn=ba;break L107}a9=bW(ba|0)|0;ba=(x=0,aF(40,17280,368)|0);L459:do{if(!x){x=0;aq(96,w|0,ba+(c[(c[ba>>2]|0)-12>>2]|0)|0);if(x){x=0;$=159;break}be=(x=0,aF(62,w|0,17008)|0);do{if(!x){bb=(x=0,aF(c[(c[be>>2]|0)+28>>2]|0,be|0,10)|0);if(x){x=0;break}x=0;ap(228,w|0);if(x){x=0;$=159;break L459}x=0,aF(6,ba|0,bb|0)|0;if(x){x=0;$=159;break L459}x=0,as(90,ba|0)|0;if(x){x=0;$=159;break L459}bb=c[D>>2]|0;n0(R|0,0,12);c[v>>2]=c[bb>>2];c[u>>2]=4;c[u+4>>2]=a7;c[u+8>>2]=v;bb=(x=0,au(50,u|0,4483,R|0)|0);do{if(!x){if((bb|0)!=0){bl=c9(12)|0;c[bl>>2]=7384;c[bl+4>>2]=bb;c[bl+8>>2]=2688;x=0;aJ(12,bl|0,12736,202);if(x){x=0}bl=cu(-1,-1)|0;bj=K;if((bj|0)>=0){cQ=bj;cR=bl;break}x=0;ap(48,bl|0);if(x){x=0;$=145;break}}bl=(x=0,aF(28,17280,R|0)|0);L478:do{if(!x){x=0;aq(96,t|0,bl+(c[(c[bl>>2]|0)-12>>2]|0)|0);if(x){x=0;$=161;break}bj=(x=0,aF(62,t|0,17008)|0);do{if(!x){bG=(x=0,aF(c[(c[bj>>2]|0)+28>>2]|0,bj|0,10)|0);if(x){x=0;break}x=0;ap(228,t|0);if(x){x=0;$=161;break L478}x=0,aF(6,bl|0,bG|0)|0;if(x){x=0;$=161;break L478}x=0,as(90,bl|0)|0;if(x){x=0;$=161;break L478}x=0;ap(384,R|0);if(x){x=0;$=159;break L459}bG=c9(12)|0;c[bG>>2]=7384;c[bG+4>>2]=c[a9+4>>2];c[bG+8>>2]=c[a9+8>>2];x=0;aJ(12,bG|0,12736,202);if(x){x=0;$=159;break L459}}else{x=0}}while(0);bj=cu(-1,-1)|0;bG=K;x=0;ap(228,t|0);if(!x){cS=bG;cT=bj;break}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;$=161}}while(0);if(($|0)==161){bl=cu(-1,-1)|0;cS=K;cT=bl}x=0;ap(384,R|0);if(!x){cU=cS;cV=cT;break L459}else{x=0;break L8}}else{x=0;$=145}}while(0);if(($|0)==145){bb=cu(-1,-1)|0;cQ=K;cR=bb}x=0;ap(384,R|0);if(!x){cW=cQ;cX=cR;$=160;break L459}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0}}while(0);be=cu(-1,-1)|0;bb=K;x=0;ap(228,w|0);if(!x){cW=bb;cX=be;$=160;break}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;$=159}}while(0);if(($|0)==159){a9=cu(-1,-1)|0;cW=K;cX=a9;$=160}if(($|0)==160){cU=cW;cV=cX}x=0;aK(8);if(!x){bm=cU;bn=cV;break L107}else{x=0;break L8}}}while(0);a7=cu(-1,-1)|0;a9=a7;a7=K;ba=c[Q>>2]|0;if((ba|0)==0){bm=a7;bn=a9;break}x=0,as(40,ba|0)|0;if(!x){bm=a7;bn=a9}else{x=0;break L8}}else{x=0;$=123}}while(0);if(($|0)==123){a9=cu(-1,-1)|0;cO=K;cP=a9;$=124}if(($|0)==124){bm=cO;bn=cP}a9=c[a_>>2]|0;if((a9|0)==0){cY=bm;cZ=bn;break}a7=c[a1>>2]|0;if((a9|0)!=(a7|0)){c[a1>>2]=a7+(~((a7-8+(-a9|0)|0)>>>3)<<3)}nU(a9);cY=bm;cZ=bn}else{x=0;a9=cu(-1,-1)|0;cY=K;cZ=a9}}while(0);x=0;ap(384,O|0);if(!x){c_=cY;c$=cZ}else{x=0;break L8}}else{x=0;$=120}}while(0);if(($|0)==120){a1=cu(-1,-1)|0;a4=K;a5=a1;$=121}if(($|0)==121){c_=a4;c$=a5}c[aM>>2]=5956;c[aX>>2]=5976;c[aY>>2]=6232;x=0;ap(384,aZ|0);do{if(!x){x=0;ap(146,aW|0);if(x){x=0;cu(-1,-1,0)|0;$=411;break}x=0;aq(66,aU|0,7556);if(!x){x=0;ap(54,aO|0);if(!x){c0=c_;c1=c$;break L75}else{x=0;break L8}}else{x=0;cu(-1,-1,0)|0;break}}else{x=0;cu(-1,-1,0)|0;x=0;ap(146,aW|0);if(!x){$=411;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if(($|0)==411){x=0;aq(66,aU|0,7556);if(!x){break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,aO|0);if(!x){cA()}else{x=0;cu(-1,-1,0)|0;cA()}}else{x=0;a1=cu(-1,-1)|0;a_=K;x=0;ap(384,B|0);if(!x){a$=a1;a0=a_;break}else{x=0}c2=cu(-1,-1,0)|0;c3=K;cA()}}while(0);x=0;ap(384,aZ|0);if(x){x=0;c2=cu(-1,-1,0)|0;c3=K;cA()}x=0;ap(146,aW|0);if(!x){c4=a0;c5=a$;break}else{x=0;c2=cu(-1,-1,0)|0;c3=K;cA()}}else{x=0;aY=cu(-1,-1)|0;c4=K;c5=aY}}while(0);x=0;aq(66,aU|0,7556);if(!x){c6=c5;c7=c4;break}else{x=0}c8=cu(-1,-1,0)|0;da=K;cA()}else{x=0;aY=cu(-1,-1)|0;c6=aY;c7=K}}while(0);x=0;ap(54,aO|0);if(!x){cM=c7;cN=c6;$=76;break}else{x=0;c8=cu(-1,-1,0)|0;da=K;cA()}}}while(0);if(($|0)==75){aL=cu(-1,-1)|0;cM=K;cN=aL;$=76}if(($|0)==76){c0=cM;c1=cN}c[az>>2]=6500;c[aE>>2]=6520;x=0;ap(208,aB|0);do{if(!x){x=0;aq(88,aA|0,7612);if(!x){x=0;ap(54,at|0);if(!x){db=c0;dc=c1;break L57}else{x=0;break L8}}else{x=0;cu(-1,-1,0)|0;break}}else{x=0;cu(-1,-1,0)|0;x=0;aq(88,aA|0,7612);if(!x){break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,at|0);if(!x){cA()}else{x=0;cu(-1,-1,0)|0;cA()}}else{x=0;aL=cu(-1,-1)|0;aP=aL;aQ=K}}while(0);x=0;aq(88,aA|0,7612);if(!x){dd=aP;de=aQ;$=65;break}else{x=0}aR=cu(-1,-1,0)|0;aT=K;cA()}else{x=0;aL=cu(-1,-1)|0;dd=aL;de=K;$=65}}while(0);do{if(($|0)==65){x=0;ap(54,at|0);if(!x){cK=de;cL=dd;$=74;break}else{x=0;aR=cu(-1,-1,0)|0;aT=K;cA()}}}while(0);if(($|0)==74){db=cK;dc=cL}x=0;ap(384,H|0);if(!x){df=db;dg=dc;break L44}else{x=0;break L8}}else if(($|0)==71){at=cu(-1,-1)|0;aA=K;x=0;ap(384,J|0);if(!x){ax=aA;ay=at}else{x=0;break L8}}}while(0);x=0;ap(384,I|0);if(!x){df=ax;dg=ay}else{x=0;break L8}}}while(0);if(($|0)==44){at=cu(-1,-1)|0;df=K;dg=at}at=c[D>>2]|0;if((at|0)==0){ak=df;al=dg;break L1}aA=c[ai>>2]|0;if((at|0)!=(aA|0)){c[ai>>2]=aA+(~((aA-4+(-at|0)|0)>>>2)<<2)}nU(at);ak=df;al=dg;break L1}else{x=0;$=34}}while(0);if(($|0)==34){aj=cu(-1,-1)|0;av=K;aw=aj}aj=c[D>>2]|0;if((aj|0)==0){dh=av;di=aw;$=5;break L1}at=c[ai>>2]|0;if((aj|0)!=(at|0)){c[ai>>2]=at+(~((at-4+(-aj|0)|0)>>>2)<<2)}nU(aj);dh=av;di=aw;$=5;break L1}}while(0);x=0,as(170,ac|0)|0;if(!x){ak=an;al=am;break L1}else{x=0;break L8}}else{x=0;ah=0;$=17}}while(0);if(($|0)==17){ac=cu(-1,-1)|0;ae=K;af=ac;ag=ah}if((ag|0)==0){dh=ae;di=af;$=5;break L1}x=0,as(170,ag|0)|0;if(!x){dh=ae;di=af;$=5;break L1}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;ac=cu(-1,-1)|0;ab=K;x=0;ap(384,E|0);if(!x){ak=ab;al=ac;break L1}else{x=0}}}while(0);cu(-1,-1,0)|0;cA()}else{x=0;$=4}}while(0);if(($|0)==4){E=cu(-1,-1)|0;dh=K;di=E;$=5}if(($|0)==5){ak=dh;al=di}di=c[Z>>2]|0;if((di|0)==0){dj=al;dk=0;dm=dj;dn=ak;bk(dm|0)}Z=c[_>>2]|0;if((di|0)!=(Z|0)){c[_>>2]=Z+(~((Z-4+(-di|0)|0)>>>2)<<2)}nU(di);dj=al;dk=0;dm=dj;dn=ak;bk(dm|0)}function fr(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=i;i=i+8|0;d=b|0;c[d>>2]=0;e=a_(0,0,d|0)|0;if((e|0)!=0){f=c9(12)|0;c[f>>2]=7384;c[f+4>>2]=e;c[f+8>>2]=1440;x=0;aJ(12,f|0,12736,202);if(!x){return 0}else{x=0}f=cu(-1,-1)|0;if((K|0)<0){b2(f|0);return 0}else{bk(f|0)}}f=c[d>>2]|0;e=i;i=i+(f<<2)|0;i=i+7&-8;g=e;e=a_(f|0,g|0,0)|0;if((e|0)==0){fI(a,g,g+(c[d>>2]<<2)|0);i=b;return 0}b=c9(12)|0;c[b>>2]=7384;c[b+4>>2]=e;c[b+8>>2]=1440;x=0;aJ(12,b|0,12736,202);if(!x){return 0}else{x=0}b=cu(-1,-1)|0;if((K|0)<0){b2(b|0);return 0}else{bk(b|0)}return 0}function fs(a){a=a|0;return}function ft(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;d=a+8|0;e=a|0;f=c[e>>2]|0;g=f;if((c[d>>2]|0)-g>>2>>>0>=b>>>0){return}h=a+4|0;a=c[h>>2]|0;if((b|0)==0){i=0}else{i=nS(b<<2)|0}j=i+(a-g>>2<<2)|0;g=i+(b<<2)|0;L649:do{if((a|0)==(f|0)){c[e>>2]=j;c[h>>2]=j;c[d>>2]=g;k=f}else{b=a;l=j;L651:while(1){m=l-4|0;n=b-4|0;do{if((m|0)!=0){o=c[n>>2]|0;c[m>>2]=o;if((o|0)==0){break}x=0,as(176,o|0)|0;if(x){x=0;break L651}}}while(0);if((n|0)==(f|0)){p=476;break}else{b=n;l=m}}if((p|0)==476){b=c[e>>2]|0;o=c[h>>2]|0;c[e>>2]=m;c[h>>2]=j;c[d>>2]=g;if((b|0)==(o|0)){k=b;break}else{q=o}while(1){o=q-4|0;r=c[o>>2]|0;if((r|0)!=0){x=0,as(32,r|0)|0;if(x){x=0;break}}if((b|0)==(o|0)){k=b;break L649}else{q=o}}b=cu(-1,-1)|0;b2(b|0)}b=cu(-1,-1)|0;L666:do{if((l|0)!=(j|0)){o=j;while(1){o=o-4|0;r=c[o>>2]|0;if((r|0)!=0){x=0,as(32,r|0)|0;if(x){x=0;break}}if((l|0)==(o|0)){break L666}}o=cu(-1,-1)|0;b2(o|0)}}while(0);if((i|0)==0){bk(b|0)}nU(i);bk(b|0)}}while(0);if((k|0)==0){return}nU(k);return}function fu(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c[a>>2]=5956;c[a+56>>2]=5976;b=a+4|0;c[b>>2]=6232;x=0;ap(384,a+36|0);do{if(!x){x=0;ap(146,b|0);if(x){x=0;d=cu(-1,-1)|0;e=K;f=d;g=503;break}x=0;aq(66,a|0,7556);if(!x){g2(a+56|0);return}else{x=0;d=cu(-1,-1)|0;h=K;i=d;break}}else{x=0;d=cu(-1,-1)|0;j=K;x=0;ap(146,b|0);if(!x){e=j;f=d;g=503;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((g|0)==503){x=0;aq(66,a|0,7556);if(!x){h=e;i=f;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a+56|0);if(!x){bk(i|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function fv(b,d,e){b=b|0;d=+d;e=+e;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0;f=i;i=i+24|0;g=f|0;h=f+8|0;j=h;k=i;i=i+144|0;l=i;i=i+12|0;i=i+7&-8;x=0;ax(4,b|0,+d,+e);if(!x){i=f;return}else{x=0}b=cu(-1,-1,12736)|0;m=b;b=K;if((b|0)!=(dl(12736)|0)){n=b;o=m;p=o;q=0;r=p;s=n;bk(r|0)}b=bW(m|0)|0;m=b;t=k+64|0;u=k|0;v=k+8|0;w=v|0;c[w>>2]=6072;y=k;z=k+12|0;A=z|0;c[u>>2]=13028;B=k+64|0;c[B>>2]=13048;c[k+4>>2]=0;x=0;aq(78,k+64|0,z|0);L708:do{if(!x){c[k+136>>2]=0;c[k+140>>2]=-1;C=k+8|0;c[u>>2]=6052;c[t>>2]=6092;c[w>>2]=6072;x=0;ap(62,A|0);do{if(!x){D=z|0;c[D>>2]=6232;E=k+44|0;n0(k+44|0,0,16);c[k+60>>2]=24;n0(j|0,0,12);x=0;aq(116,z|0,h|0);do{if(!x){x=0;ap(384,h|0);if(x){x=0;F=cu(-1,-1)|0;G=F;H=K;break}F=(x=0,aF(40,v|0,1080)|0);L717:do{if(!x){I=dz[c[(c[b>>2]|0)+8>>2]&255](m)|0;J=(x=0,aF(40,F|0,I|0)|0);if(x){x=0;L=562;break}I=(x=0,aF(40,J|0,2864)|0);if(x){x=0;L=562;break}J=(x=0,aF(46,I|0,c[b+4>>2]|0)|0);if(x){x=0;L=562;break}x=0;aq(96,g|0,J+(c[(c[J>>2]|0)-12>>2]|0)|0);if(x){x=0;L=562;break}I=(x=0,aF(62,g|0,17008)|0);do{if(!x){M=(x=0,aF(c[(c[I>>2]|0)+28>>2]|0,I|0,10)|0);if(x){x=0;break}x=0;ap(228,g|0);if(x){x=0;L=562;break L717}x=0,aF(6,J|0,M|0)|0;if(x){x=0;L=562;break L717}x=0,as(90,J|0)|0;if(x){x=0;L=562;break L717}x=0;aq(30,l|0,z|0);if(x){x=0;L=562;break L717}if((a[l]&1)==0){N=l+1|0}else{N=c[l+8>>2]|0}x=0;aJ(28,N|0,2480,164);if(x){x=0;M=cu(-1,-1)|0;O=K;x=0;ap(384,l|0);if(!x){P=O;Q=M;break L717}else{x=0;break L708}}x=0;ap(384,l|0);if(x){x=0;L=562;break L717}c[u>>2]=6052;c[B>>2]=6092;c[C>>2]=6072;c[D>>2]=6232;x=0;ap(384,E|0);do{if(!x){x=0;ap(146,A|0);if(x){x=0;M=cu(-1,-1)|0;R=K;S=M;L=552;break}x=0;aq(16,y|0,7572);if(x){x=0;M=cu(-1,-1)|0;T=K;U=M;break}x=0;ap(54,t|0);if(x){x=0;M=cu(-1,-1)|0;V=K;W=M;L=561;break L708}aU();i=f;return}else{x=0;M=cu(-1,-1)|0;O=K;x=0;ap(146,A|0);if(!x){R=O;S=M;L=552;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((L|0)==552){x=0;aq(16,y|0,7572);if(!x){T=R;U=S;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,t|0);if(!x){V=T;W=U;L=561;break L708}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0}}while(0);J=cu(-1,-1)|0;I=K;x=0;ap(228,g|0);if(!x){X=I;Y=J;L=563;break}else{x=0}cu(-1,-1,0)|0;cA()}else{x=0;L=562}}while(0);if((L|0)==562){F=cu(-1,-1)|0;X=K;Y=F;L=563}if((L|0)==563){P=X;Q=Y}c[u>>2]=6052;c[B>>2]=6092;c[C>>2]=6072;c[D>>2]=6232;x=0;ap(384,E|0);do{if(!x){x=0;ap(146,A|0);if(x){x=0;cu(-1,-1,0)|0;L=571;break}x=0;aq(16,y|0,7572);if(!x){x=0;ap(54,t|0);if(!x){Z=P;_=Q;L=577;break L708}else{x=0;break L708}}else{x=0;cu(-1,-1,0)|0;break}}else{x=0;cu(-1,-1,0)|0;x=0;ap(146,A|0);if(!x){L=571;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((L|0)==571){x=0;aq(16,y|0,7572);if(!x){break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,t|0);if(!x){cA()}else{x=0;cu(-1,-1,0)|0;cA()}}else{x=0;F=cu(-1,-1)|0;J=K;x=0;ap(384,h|0);if(!x){G=F;H=J;break}else{x=0}$=cu(-1,-1,0)|0;aa=K;cA()}}while(0);x=0;ap(384,E|0);if(x){x=0;$=cu(-1,-1,0)|0;aa=K;cA()}x=0;ap(146,A|0);if(!x){ab=H;ac=G;break}else{x=0;$=cu(-1,-1,0)|0;aa=K;cA()}}else{x=0;D=cu(-1,-1)|0;ab=K;ac=D}}while(0);x=0;aq(16,y|0,7572);if(!x){ad=ab;ae=ac;L=525;break}else{x=0}af=cu(-1,-1,0)|0;ag=K;cA()}else{x=0;C=cu(-1,-1)|0;ad=K;ae=C;L=525}}while(0);do{if((L|0)==525){x=0;ap(54,t|0);if(!x){V=ad;W=ae;L=561;break}else{x=0;af=cu(-1,-1,0)|0;ag=K;cA()}}}while(0);if((L|0)==561){Z=V;_=W;L=577}do{if((L|0)==577){x=0;aK(8);if(!x){n=Z;o=_}else{x=0;break}p=o;q=0;r=p;s=n;bk(r|0)}}while(0);cu(-1,-1,0)|0;cA()}function fw(b,d,e){b=b|0;d=+d;e=+e;var f=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,_=0,$=0,aa=0,ab=0,ac=0,ad=0,ae=0,af=0,ag=0,ah=0,ai=0,aj=0,ak=0,al=0,am=0,an=0,ao=0,aq=0;f=i;i=i+192|0;h=f|0;j=f+8|0;k=f+16|0;l=f+24|0;m=f+32|0;n=f+40|0;o=f+48|0;p=f+64|0;q=f+80|0;r=f+96|0;s=f+104|0;t=f+112|0;u=f+120|0;v=f+136|0;w=f+160|0;y=f+176|0;z=d*.10999999940395355;g[o>>2]=+Z(+z)*.20000000298023224+.5;g[o+4>>2]=+Z(+(d*.14000000059604645))*.20000000298023224+.5;g[o+8>>2]=+Y(+(d*.1899999976158142))*.20000000298023224+.5;g[o+12>>2]=.029999999329447746;A=+Z(+(d*.10000000149011612))*10.0;g[p>>2]=A*+Y(+(d*.27000001072883606))+15.0;A=+Z(+(d*.12999999523162842))*2.0;g[p+4>>2]=A*+Y(+(d*.23000000417232513))+2.6666667461395264;A=+Z(+(d*.17000000178813934))*5.0;g[p+8>>2]=A*+Y(+z)+28.0;g[p+12>>2]=.10000000149011612;B=eT()|0;gG(q,1424,13);eA(n,B|0,q);B=c[n>>2]|0;do{if((B|0)==0){gI(q);C=0}else{n=(c[B+20>>2]|0)==0;gI(q);if(n){C=0;break}n=b+32|0;if((n|0)==0){D=0;E=0}else{F=c[n>>2]|0;D=F|0;E=(c[b+36>>2]|0)-F>>2}F=bB(c[b+16>>2]|0,E|0,D|0,0,0,0)|0;if((F|0)==0){C=1;break}n=c9(12)|0;c[n>>2]=7384;c[n+4>>2]=F;c[n+8>>2]=1832;x=0;aJ(12,n|0,12736,202);if(x){x=0}n=cu(-1,-1)|0;if((K|0)<0){b2(n|0)}else{bk(n|0)}}}while(0);D=b+20|0;E=c[D>>2]|0;q=r|0;c[q>>2]=E;if((E|0)!=0){c6(E|0)|0}E=b+12|0;B=(x=0,aM(2,c[E>>2]|0,0,4,r|0)|0);do{if(!x){if((B|0)!=0){r=c9(12)|0;c[r>>2]=7384;c[r+4>>2]=B;c[r+8>>2]=2824;x=0;aJ(12,r|0,12736,202);if(x){x=0}r=cu(-1,-1)|0;n=K;if((n|0)>=0){G=n;H=r;break}x=0;ap(48,r|0);if(x){x=0;I=684;break}}r=c[q>>2]|0;if((r|0)!=0){cG(r|0)|0}r=b+24|0;n=c[r>>2]|0;F=s|0;c[F>>2]=n;if((n|0)!=0){c6(n|0)|0}n=(x=0,aM(2,c[E>>2]|0,1,4,s|0)|0);do{if(!x){if((n|0)!=0){J=c9(12)|0;c[J>>2]=7384;c[J+4>>2]=n;c[J+8>>2]=2824;x=0;aJ(12,J|0,12736,202);if(x){x=0}J=cu(-1,-1)|0;L=K;if((L|0)>=0){M=L;N=J;break}x=0;ap(48,J|0);if(x){x=0;I=687;break}}J=c[F>>2]|0;if((J|0)!=0){cG(J|0)|0}J=c[b+28>>2]|0;L=t|0;c[L>>2]=J;if((J|0)!=0){c6(J|0)|0}J=(x=0,aM(2,c[E>>2]|0,2,4,t|0)|0);do{if(!x){if((J|0)!=0){O=c9(12)|0;c[O>>2]=7384;c[O+4>>2]=J;c[O+8>>2]=2824;x=0;aJ(12,O|0,12736,202);if(x){x=0}O=cu(-1,-1)|0;P=K;if((P|0)>=0){Q=P;R=O;break}x=0;ap(48,O|0);if(x){x=0;I=690;break}}O=c[L>>2]|0;if((O|0)!=0){cG(O|0)|0}O=cV(c[E>>2]|0,3,16,o|0)|0;if((O|0)!=0){P=c9(12)|0;c[P>>2]=7384;c[P+4>>2]=O;c[P+8>>2]=2824;x=0;aJ(12,P|0,12736,202);if(x){x=0}P=cu(-1,-1)|0;if((K|0)<0){b2(P|0)}else{bk(P|0)}}P=cV(c[E>>2]|0,4,16,p|0)|0;if((P|0)!=0){O=c9(12)|0;c[O>>2]=7384;c[O+4>>2]=P;c[O+8>>2]=2824;x=0;aJ(12,O|0,12736,202);if(x){x=0}O=cu(-1,-1)|0;if((K|0)<0){b2(O|0)}else{bk(O|0)}}g[m>>2]=d;O=cV(c[E>>2]|0,5,4,m|0)|0;if((O|0)!=0){P=c9(12)|0;c[P>>2]=7384;c[P+4>>2]=O;c[P+8>>2]=2824;x=0;aJ(12,P|0,12736,202);if(x){x=0}P=cu(-1,-1)|0;if((K|0)<0){b2(P|0)}else{bk(P|0)}}g[l>>2]=e;P=cV(c[E>>2]|0,6,4,l|0)|0;if((P|0)!=0){O=c9(12)|0;c[O>>2]=7384;c[O+4>>2]=P;c[O+8>>2]=2824;x=0;aJ(12,O|0,12736,202);if(x){x=0}O=cu(-1,-1)|0;if((K|0)<0){b2(O|0)}else{bk(O|0)}}O=eT()|0;gG(u,3704,10);eA(k,O|0,u);O=c[k>>2]|0;if((O|0)==0){S=0}else{S=c[O+20>>2]|0}gI(u);c[v+20>>2]=1;c[v+12>>2]=0;O=v|0;c[O>>2]=S;a[v+16|0]=0;P=b+16|0;T=(c[3385]|0)==0?0:13520;U=(x=0,aI(2,c[P>>2]|0,c[E>>2]|0,1,T|0,O|0,T|0,0,0,0)|0);do{if(!x){if((U|0)!=0){T=c9(12)|0;c[T>>2]=7384;c[T+4>>2]=U;c[T+8>>2]=1912;x=0;aJ(12,T|0,12736,202);if(x){x=0}T=cu(-1,-1)|0;O=K;if((O|0)>=0){V=O;W=T;break}x=0;ap(48,T|0);if(x){x=0;I=693;break}}if(C){T=b+32|0;if((T|0)==0){X=0;_=0}else{O=c[T>>2]|0;X=O|0;_=(c[b+36>>2]|0)-O>>2}O=bq(c[P>>2]|0,_|0,X|0,0,0,0)|0;if((O|0)!=0){T=c9(12)|0;c[T>>2]=7384;c[T+4>>2]=O;c[T+8>>2]=2040;x=0;aJ(12,T|0,12736,202);if(x){x=0}T=cu(-1,-1)|0;if((K|0)<0){b2(T|0)}else{bk(T|0)}}T=b3(c[P>>2]|0)|0;if((T|0)==0){i=f;return}O=c9(12)|0;c[O>>2]=7384;c[O+4>>2]=T;c[O+8>>2]=2128;x=0;aJ(12,O|0,12736,202);if(x){x=0}O=cu(-1,-1)|0;if((K|0)<0){b2(O|0)}else{bk(O|0)}}O=b3(c[P>>2]|0)|0;if((O|0)!=0){T=c9(12)|0;c[T>>2]=7384;c[T+4>>2]=O;c[T+8>>2]=2128;x=0;aJ(12,T|0,12736,202);if(x){x=0}T=cu(-1,-1)|0;if((K|0)<0){b2(T|0)}else{bk(T|0)}}b1(4318)|0;T=S<<4;O=eT()|0;gG(w,3032,3);fl(j,O+80|0,w);O=c[j>>2]|0;if((O|0)==0){$=0}else{$=c[O+20>>2]|0}O=(x=0,aI(6,c[P>>2]|0,c[D>>2]|0,1,0,T|0,$|0,0,0,0)|0);do{if(!x){if((O|0)!=0){aa=c9(12)|0;c[aa>>2]=7384;c[aa+4>>2]=O;c[aa+8>>2]=2224;x=0;aJ(12,aa|0,12736,202);if(x){x=0}aa=cu(-1,-1)|0;ab=K;if((ab|0)>=0){ac=ab;ad=aa;break}x=0;ap(48,aa|0);if(x){x=0;I=720;break}}gI(w);b1(4318)|0;aa=eT()|0;gG(y,2952,5);fl(h,aa+80|0,y);aa=c[h>>2]|0;if((aa|0)==0){ae=0}else{ae=c[aa+20>>2]|0}aa=(x=0,aI(6,c[P>>2]|0,c[r>>2]|0,1,0,T|0,ae|0,0,0,0)|0);do{if(!x){if((aa|0)==0){gI(y);i=f;return}ab=c9(12)|0;c[ab>>2]=7384;c[ab+4>>2]=aa;c[ab+8>>2]=2224;x=0;aJ(12,ab|0,12736,202);if(x){x=0}ab=cu(-1,-1)|0;af=K;if((af|0)>=0){ag=af;ah=ab;break}x=0;ap(48,ab|0);if(x){x=0;I=722;break}}else{x=0;I=722}}while(0);if((I|0)==722){aa=cu(-1,-1)|0;ag=K;ah=aa}x=0;ap(384,y|0);if(!x){ai=ah;aj=ag;ak=ai;al=0;am=ak;an=aj;bk(am|0)}else{x=0;ao=cu(-1,-1,0)|0;aq=K;cA()}}else{x=0;I=720}}while(0);if((I|0)==720){T=cu(-1,-1)|0;ac=K;ad=T}x=0;ap(384,w|0);if(!x){ai=ad;aj=ac;ak=ai;al=0;am=ak;an=aj;bk(am|0)}else{x=0;ao=cu(-1,-1,0)|0;aq=K;cA()}}else{x=0;I=693}}while(0);if((I|0)==693){P=cu(-1,-1)|0;V=K;W=P}ai=W;aj=V;ak=ai;al=0;am=ak;an=aj;bk(am|0)}else{x=0;I=690}}while(0);if((I|0)==690){J=cu(-1,-1)|0;Q=K;R=J}J=R;P=Q;U=c[L>>2]|0;if((U|0)==0){ai=J;aj=P;ak=ai;al=0;am=ak;an=aj;bk(am|0)}x=0,as(32,U|0)|0;if(!x){ai=J;aj=P;ak=ai;al=0;am=ak;an=aj;bk(am|0)}else{x=0;ao=cu(-1,-1,0)|0;aq=K;cA()}}else{x=0;I=687}}while(0);if((I|0)==687){r=cu(-1,-1)|0;M=K;N=r}r=N;n=M;P=c[F>>2]|0;if((P|0)==0){ai=r;aj=n;ak=ai;al=0;am=ak;an=aj;bk(am|0)}x=0,as(32,P|0)|0;if(!x){ai=r;aj=n;ak=ai;al=0;am=ak;an=aj;bk(am|0)}else{x=0;ao=cu(-1,-1,0)|0;aq=K;cA()}}else{x=0;I=684}}while(0);if((I|0)==684){I=cu(-1,-1)|0;G=K;H=I}I=H;H=G;G=c[q>>2]|0;if((G|0)==0){ai=I;aj=H;ak=ai;al=0;am=ak;an=aj;bk(am|0)}x=0,as(32,G|0)|0;if(!x){ai=I;aj=H;ak=ai;al=0;am=ak;an=aj;bk(am|0)}else{x=0;ao=cu(-1,-1,0)|0;aq=K;cA()}}function fx(a){a=a|0;nU(a);return}function fy(a){a=a|0;var b=0;b=c[a+8>>2]|0;return((b|0)==0?2784:b)|0}function fz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0;d=a+4|0;e=a|0;f=c[e>>2]|0;g=((c[d>>2]|0)-f>>2)+1|0;if(g>>>0>1073741823){lu(a);h=c[e>>2]|0}else{h=f}f=a+8|0;a=h;i=(c[f>>2]|0)-a|0;if(i>>2>>>0>536870910){j=c[d>>2]|0;k=1073741823;l=j;m=j-a>>2;n=750}else{j=i>>1;i=j>>>0<g>>>0?g:j;j=c[d>>2]|0;g=j-a>>2;if((i|0)==0){o=0;p=0;q=j;r=g}else{k=i;l=j;m=g;n=750}}if((n|0)==750){o=nS(k<<2)|0;p=k;q=l;r=m}m=o+(r<<2)|0;l=o+(p<<2)|0;do{if((m|0)==0){s=h;t=q;n=756}else{p=c[b>>2]|0;c[m>>2]=p;if((p|0)==0){s=h;t=q;n=756;break}x=0,as(176,p|0)|0;if(!x){s=c[e>>2]|0;t=c[d>>2]|0;n=756;break}else{x=0;p=cu(-1,-1)|0;u=K;v=p;break}}}while(0);L1040:do{if((n|0)==756){q=o+(r+1<<2)|0;L1042:do{if((t|0)==(s|0)){c[e>>2]=m;c[d>>2]=q;c[f>>2]=l;w=t}else{h=t;b=m;L1044:while(1){y=b-4|0;p=h-4|0;do{if((y|0)!=0){k=c[p>>2]|0;c[y>>2]=k;if((k|0)==0){break}x=0,as(176,k|0)|0;if(x){x=0;break L1044}}}while(0);if((p|0)==(s|0)){n=762;break}else{h=p;b=y}}if((n|0)==762){h=c[e>>2]|0;k=c[d>>2]|0;c[e>>2]=y;c[d>>2]=q;c[f>>2]=l;if((h|0)==(k|0)){w=h;break}else{z=k}while(1){k=z-4|0;g=c[k>>2]|0;if((g|0)!=0){x=0,as(32,g|0)|0;if(x){x=0;break}}if((h|0)==(k|0)){w=h;break L1042}else{z=k}}h=cu(-1,-1)|0;b2(h|0)}h=cu(-1,-1)|0;k=K;L1059:do{if((b|0)!=(q|0)){g=q;while(1){g=g-4|0;j=c[g>>2]|0;if((j|0)!=0){x=0,as(32,j|0)|0;if(x){x=0;break}}if((b|0)==(g|0)){break L1059}}g=cu(-1,-1)|0;b2(g|0)}}while(0);if((o|0)==0){A=k;B=h}else{u=k;v=h;break L1040}bk(B|0)}}while(0);if((w|0)==0){return}nU(w);return}}while(0);nU(o);A=u;B=v;bk(B|0)}function fA(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0;e=i;i=i+8|0;f=a;a=i;i=i+12|0;i=i+7&-8;c[a>>2]=c[f>>2];c[a+4>>2]=c[f+4>>2];c[a+8>>2]=c[f+8>>2];f=e|0;g=c[a>>2]|0;h=c[a+4>>2]|0;j=c[a+8>>2]|0;a=dy[g&15](c[h>>2]|0,c[j>>2]|0,b,0,0,f)|0;if((a|0)!=0){k=a;i=e;return k|0}a=c[f>>2]|0;f=i;i=i+a|0;i=i+7&-8;l=dy[g&15](c[h>>2]|0,c[j>>2]|0,b,a,f,0)|0;if((l|0)!=0){k=l;i=e;return k|0}gK(d,f)|0;k=0;i=e;return k|0}function fB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;e=b;f=c[d+48>>2]|0;if((f&16|0)!=0){g=d+44|0;h=c[g>>2]|0;i=c[d+24>>2]|0;if(h>>>0<i>>>0){c[g>>2]=i;j=i}else{j=h}h=c[d+20>>2]|0;i=h;g=j-i|0;do{if((g|0)==-1){gE(b);k=796}else{if(g>>>0>=11){k=796;break}a[e]=g<<1&255;l=b+1|0}}while(0);if((k|0)==796){m=g+16&-16;n=nS(m)|0;c[b+8>>2]=n;c[b>>2]=m|1;c[b+4>>2]=g;l=n}if((h|0)==(j|0)){o=l}else{n=j+(-i|0)|0;i=l;g=h;while(1){a[i]=a[g]|0;h=g+1|0;if((h|0)==(j|0)){break}else{i=i+1|0;g=h}}o=l+n|0}a[o]=0;return}if((f&8|0)==0){n0(e|0,0,12);return}f=c[d+8>>2]|0;o=c[d+16>>2]|0;d=f;n=o-d|0;do{if((n|0)==-1){gE(b);k=807}else{if(n>>>0>=11){k=807;break}a[e]=n<<1&255;p=b+1|0}}while(0);if((k|0)==807){k=n+16&-16;e=nS(k)|0;c[b+8>>2]=e;c[b>>2]=k|1;c[b+4>>2]=n;p=e}if((f|0)==(o|0)){q=p}else{e=o+(-d|0)|0;d=p;n=f;while(1){a[d]=a[n]|0;f=n+1|0;if((f|0)==(o|0)){break}else{d=d+1|0;n=f}}q=p+e|0}a[q]=0;return}function fC(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;c[a>>2]=5956;c[a+56>>2]=5976;b=a+4|0;c[b>>2]=6232;x=0;ap(384,a+36|0);do{if(!x){x=0;ap(146,b|0);if(x){x=0;d=cu(-1,-1)|0;e=K;f=d;g=824;break}x=0;aq(66,a|0,7556);if(x){x=0;d=cu(-1,-1)|0;h=K;i=d;break}x=0;ap(54,a+56|0);if(!x){nU(a);return}else{x=0}d=cu(-1,-1)|0;j=K;k=d;l=a;nU(l);bk(k|0)}else{x=0;d=cu(-1,-1)|0;m=K;x=0;ap(146,b|0);if(!x){e=m;f=d;g=824;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((g|0)==824){x=0;aq(66,a|0,7556);if(!x){h=e;i=f;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,a+56|0);if(!x){j=h;k=i;l=a;nU(l);bk(k|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function fD(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=5956;e=b+(d+56)|0;c[e>>2]=5976;f=b+(d+4)|0;c[f>>2]=6232;x=0;ap(384,b+(d+36)|0);do{if(!x){x=0;ap(146,f|0);if(x){x=0;d=cu(-1,-1)|0;g=K;h=d;i=841;break}x=0;aq(66,a|0,7556);if(!x){g2(e);return}else{x=0;d=cu(-1,-1)|0;j=K;k=d;break}}else{x=0;d=cu(-1,-1)|0;b=K;x=0;ap(146,f|0);if(!x){g=b;h=d;i=841;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((i|0)==841){x=0;aq(66,a|0,7556);if(!x){j=g;k=h;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,e|0);if(!x){bk(k|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function fE(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;b=a;d=c[(c[a>>2]|0)-12>>2]|0;a=b+d|0;c[a>>2]=5956;e=b+(d+56)|0;c[e>>2]=5976;f=b+(d+4)|0;c[f>>2]=6232;x=0;ap(384,b+(d+36)|0);do{if(!x){x=0;ap(146,f|0);if(x){x=0;d=cu(-1,-1)|0;g=K;h=d;i=854;break}x=0;aq(66,a|0,7556);if(x){x=0;d=cu(-1,-1)|0;j=K;k=d;break}x=0;ap(54,e|0);if(!x){nU(a);return}else{x=0}d=cu(-1,-1)|0;l=K;m=d;nU(a);bk(m|0)}else{x=0;d=cu(-1,-1)|0;b=K;x=0;ap(146,f|0);if(!x){g=b;h=d;i=854;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);do{if((i|0)==854){x=0;aq(66,a|0,7556);if(!x){j=g;k=h;break}else{x=0}cu(-1,-1,0)|0;cA()}}while(0);x=0;ap(54,e|0);if(!x){l=j;m=k;nU(a);bk(m|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function fF(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0;e=i;i=i+8|0;f=a;a=i;i=i+8|0;c[a>>2]=c[f>>2];c[a+4>>2]=c[f+4>>2];f=e|0;g=c[a>>2]|0;h=c[a+4>>2]|0;a=dN[g&63](c[h>>2]|0,b,0,0,f)|0;if((a|0)!=0){j=a;i=e;return j|0}a=c[f>>2]|0;k=i;i=i+a|0;i=i+7&-8;l=k;m=dN[g&63](c[h>>2]|0,b,a,k,0)|0;if((m|0)!=0){j=m;i=e;return j|0}fG(d,l,l+((c[f>>2]|0)>>>2<<2)|0);j=0;i=e;return j|0}function fG(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=b;f=d-e>>2;g=a+8|0;h=c[g>>2]|0;i=a|0;j=c[i>>2]|0;k=j;if(f>>>0>h-k>>2>>>0){if((j|0)==0){l=h}else{h=a+4|0;m=c[h>>2]|0;if((j|0)!=(m|0)){c[h>>2]=m+(~((m-4+(-k|0)|0)>>>2)<<2)}nU(j);c[g>>2]=0;c[h>>2]=0;c[i>>2]=0;l=0}if(f>>>0>1073741823){lu(a);n=c[g>>2]|0;o=c[i>>2]|0}else{n=l;o=0}l=n-o|0;do{if(l>>2>>>0>536870910){p=1073741823}else{o=l>>1;n=o>>>0<f>>>0?f:o;if(n>>>0<=1073741823){p=n;break}lu(a);p=n}}while(0);l=nS(p<<2)|0;n=a+4|0;c[n>>2]=l;c[i>>2]=l;c[g>>2]=l+(p<<2);if((b|0)==(d|0)){return}else{q=b;r=l}do{if((r|0)==0){s=0}else{c[r>>2]=c[q>>2];s=c[n>>2]|0}r=s+4|0;c[n>>2]=r;q=q+4|0;}while((q|0)!=(d|0));return}q=a+4|0;a=(c[q>>2]|0)-k>>2;if(f>>>0>a>>>0){t=1;u=b+(a<<2)|0}else{t=0;u=d}if((u|0)==(b|0)){v=j}else{a=((u-4+(-e|0)|0)>>>2)+1|0;e=j;f=b;while(1){if((e|0)!=(f|0)){c[e>>2]=c[f>>2]}b=f+4|0;if((b|0)==(u|0)){break}else{e=e+4|0;f=b}}v=j+(a<<2)|0}a=v;if(!t){t=c[q>>2]|0;if((v|0)==(t|0)){return}c[q>>2]=t+(~((t-4+(-a|0)|0)>>>2)<<2);return}if((u|0)==(d|0)){return}a=u;u=c[q>>2]|0;do{if((u|0)==0){w=0}else{c[u>>2]=c[a>>2];w=c[q>>2]|0}u=w+4|0;c[q>>2]=u;a=a+4|0;}while((a|0)!=(d|0));return}function fH(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0;f=i;i=i+8|0;g=f|0;h=a|0;c[h>>2]=0;a=c[d>>2]|0;j=(c[d+4>>2]|0)-a|0;d=j>>3;k=j>>1;j=i;i=i+k|0;i=i+7&-8;l=j;j=i;i=i+k|0;i=i+7&-8;k=j;if((d|0)!=0){j=0;do{c[k+(j<<2)>>2]=c[a+(j<<3)>>2];c[l+(j<<2)>>2]=c[a+(j<<3)+4>>2];j=j+1|0;}while(j>>>0<d>>>0)}j=(x=0,aG(2,c[b>>2]|0,d|0,k|0,l|0,g|0)|0);do{if(!x){c[h>>2]=j;l=c[g>>2]|0;if((l|0)==0){if((e|0)==0){i=f;return}c[e>>2]=0;i=f;return}k=c9(12)|0;c[k>>2]=7384;c[k+4>>2]=l;c[k+8>>2]=1544;x=0;aJ(12,k|0,12736,202);if(x){x=0}k=cu(-1,-1)|0;l=K;if((l|0)>=0){m=l;n=k;break}x=0;ap(48,k|0);if(x){x=0;o=911;break}}else{x=0;o=911}}while(0);if((o|0)==911){o=cu(-1,-1)|0;m=K;n=o}o=c[h>>2]|0;if((o|0)==0){bk(n|0)}x=0,as(40,o|0)|0;if(!x){bk(n|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function fI(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;f=b;g=i;i=i+4|0;i=i+7&-8;h=d-f>>2;j=a+8|0;k=c[j>>2]|0;l=a|0;m=c[l>>2]|0;n=m;if(h>>>0>k-n>>2>>>0){if((m|0)==0){o=k}else{k=a+4|0;p=c[k>>2]|0;if((m|0)!=(p|0)){c[k>>2]=p+(~((p-4+(-n|0)|0)>>>2)<<2)}nU(m);c[j>>2]=0;c[k>>2]=0;c[l>>2]=0;o=0}if(h>>>0>1073741823){lu(a);q=c[j>>2]|0;r=c[l>>2]|0}else{q=o;r=0}o=q-r|0;do{if(o>>2>>>0>536870910){s=1073741823}else{r=o>>1;q=r>>>0<h>>>0?h:r;if(q>>>0<=1073741823){s=q;break}lu(a);s=q}}while(0);o=nS(s<<2)|0;q=a+4|0;c[q>>2]=o;c[l>>2]=o;c[j>>2]=o+(s<<2);if((b|0)==(d|0)){i=e;return}else{t=b;u=o}do{if((u|0)==0){v=0}else{c[u>>2]=c[t>>2];v=c[q>>2]|0}u=v+4|0;c[q>>2]=u;t=t+4|0;}while((t|0)!=(d|0));i=e;return}t=a+4|0;a=(c[t>>2]|0)-n>>2;if(h>>>0>a>>>0){w=1;x=b+(a<<2)|0}else{w=0;x=d}if((x|0)==(b|0)){y=m}else{a=g|0;h=((x-4+(-f|0)|0)>>>2)+1|0;f=m;n=b;while(1){b=c[n>>2]|0;c[a>>2]=b;if((f|0)!=(g|0)){c[f>>2]=b}b=n+4|0;if((b|0)==(x|0)){break}else{f=f+4|0;n=b}}y=m+(h<<2)|0}h=y;if(!w){w=c[t>>2]|0;if((y|0)==(w|0)){i=e;return}c[t>>2]=w+(~((w-4+(-h|0)|0)>>>2)<<2);i=e;return}if((x|0)==(d|0)){i=e;return}h=x;x=c[t>>2]|0;do{if((x|0)==0){z=0}else{c[x>>2]=c[h>>2];z=c[t>>2]|0}x=z+4|0;c[t>>2]=x;h=h+4|0;}while((h|0)!=(d|0));i=e;return}function fJ(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;b=i;i=i+88|0;a=b|0;d=b+8|0;e=b+16|0;f=b+24|0;g=b+40|0;h=b+56|0;j=b+72|0;k=eT()|0;gG(f,464,12);l=(x=0,aF(22,k|0,f|0)|0);if(x){x=0;k=cu(-1,-1)|0;m=K;x=0;ap(384,f|0);if(!x){n=k;o=m;p=n;q=0;r=p;s=o;bk(r|0)}else{x=0;t=cu(-1,-1,0)|0;u=K;cA();return 0}}c[l>>2]=512;gI(f);f=eT()|0;gG(g,2736,11);l=(x=0,aF(22,f|0,g|0)|0);if(x){x=0;f=cu(-1,-1)|0;m=K;x=0;ap(384,g|0);if(!x){n=f;o=m;p=n;q=0;r=p;s=o;bk(r|0)}else{x=0;t=cu(-1,-1,0)|0;u=K;cA();return 0}}c[l>>2]=512;gI(g);g=eT()|0;gG(h,2408,11);x=0;aJ(36,j|0,1736,17);L1339:do{if(!x){l=(x=0,aF(14,g+60|0,h|0)|0);do{if(!x){x=0,aF(48,l|0,j|0)|0;if(x){x=0;break}x=0;ap(384,j|0);if(x){x=0;v=982;break L1339}gI(h);m=ea()|0;if((m|0)==0){f=ei(17280,1384)|0;g3(e,f+(c[(c[f>>2]|0)-12>>2]|0)|0);k=(x=0,aF(62,e|0,17008)|0);do{if(!x){w=(x=0,aF(c[(c[k>>2]|0)+28>>2]|0,k|0,10)|0);if(x){x=0;break}lC(e);hY(f,w)|0;hH(f)|0;bJ(1);return 0}else{x=0}}while(0);f=cu(-1,-1)|0;x=0;ap(228,e|0);if(!x){bk(f|0)}else{x=0;cu(-1,-1,0)|0;cA();return 0}}x=0;ap(58,m|0);if(!x){i=b;return 0}else{x=0}f=cu(-1,-1,11104,0)|0;k=K;w=(k|0)==(dl(11104)|0);k=bW(f|0)|0;if(!w){w=(x=0,aF(40,17280,1168)|0);L1360:do{if(!x){x=0;aq(96,a|0,w+(c[(c[w>>2]|0)-12>>2]|0)|0);if(x){x=0;v=1010;break}f=(x=0,aF(62,a|0,17008)|0);do{if(!x){y=(x=0,aF(c[(c[f>>2]|0)+28>>2]|0,f|0,10)|0);if(x){x=0;break}x=0;ap(228,a|0);if(x){x=0;v=1010;break L1360}x=0,aF(6,w|0,y|0)|0;if(x){x=0;v=1010;break L1360}x=0,as(90,w|0)|0;if(x){x=0;v=1010;break L1360}x=0;ap(126,1);if(x){x=0;v=1010;break L1360}return 0}else{x=0}}while(0);f=cu(-1,-1)|0;y=K;x=0;ap(228,a|0);if(!x){z=y;A=f;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}else{x=0;v=1010}}while(0);if((v|0)==1010){w=cu(-1,-1)|0;z=K;A=w}x=0;aK(8);if(!x){n=A;o=z;p=n;q=0;r=p;s=o;bk(r|0)}else{x=0;t=cu(-1,-1,0)|0;u=K;cA();return 0}}w=(x=0,aF(40,17280,784)|0);L1379:do{if(!x){m=dz[c[(c[k>>2]|0)+8>>2]&255](k)|0;f=(x=0,aF(40,w|0,m|0)|0);if(x){x=0;v=1012;break}x=0;aq(96,d|0,f+(c[(c[f>>2]|0)-12>>2]|0)|0);if(x){x=0;v=1012;break}m=(x=0,aF(62,d|0,17008)|0);do{if(!x){y=(x=0,aF(c[(c[m>>2]|0)+28>>2]|0,m|0,10)|0);if(x){x=0;break}x=0;ap(228,d|0);if(x){x=0;v=1012;break L1379}x=0,aF(6,f|0,y|0)|0;if(x){x=0;v=1012;break L1379}x=0,as(90,f|0)|0;if(x){x=0;v=1012;break L1379}x=0;ap(126,1);if(x){x=0;v=1012;break L1379}return 0}else{x=0}}while(0);f=cu(-1,-1)|0;m=K;x=0;ap(228,d|0);if(!x){B=m;C=f;break}else{x=0}cu(-1,-1,0)|0;cA();return 0}else{x=0;v=1012}}while(0);if((v|0)==1012){w=cu(-1,-1)|0;B=K;C=w}x=0;aK(8);if(!x){n=C;o=B;p=n;q=0;r=p;s=o;bk(r|0)}else{x=0;t=cu(-1,-1,0)|0;u=K;cA();return 0}}else{x=0}}while(0);l=cu(-1,-1)|0;w=K;x=0;ap(384,j|0);if(!x){D=l;E=w;break}else{x=0}t=cu(-1,-1,0)|0;u=K;cA();return 0}else{x=0;v=982}}while(0);if((v|0)==982){v=cu(-1,-1)|0;D=v;E=K}x=0;ap(384,h|0);if(!x){n=D;o=E;p=n;q=0;r=p;s=o;bk(r|0)}else{x=0;t=cu(-1,-1,0)|0;u=K;cA();return 0}return 0}function fK(){return c[4400]|0}function fL(a){a=a|0;var b=0,d=0,e=0,f=0;if((eB()|0)==0){eD(272,2392,33)}do{if((a|0)==0){b=nS(44)|0;x=0;ap(128,b|0);if(!x){d=b;c[4400]=d;e=d;break}else{x=0;d=cu(-1,-1)|0;nU(b);bk(d|0)}}else{e=c[4400]|0}}while(0);if((e|0)==0){eD(1648,2392,45);f=c[4400]|0}else{f=e}dw[c[(c[f>>2]|0)+8>>2]&511](f);return}function fM(b){b=b|0;var d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,p=0;b=i;i=i+32|0;d=b|0;e=b+8|0;f=b+16|0;g=b+24|0;h=c[o>>2]|0;f4(16376,h,16504);c[4342]=6692;c[4344]=6712;c[4343]=0;j=c[1670]|0;x=0;aq(78,17368+j|0,16376);if(x){x=0;k=cu(-1,-1)|0;g2(17376);bk(k|0)}c[j+17440>>2]=0;c[j+17444>>2]=-1;j=c[t>>2]|0;g9(16280);c[4070]=6912;c[4078]=j;lB(g,16284);k=(x=0,aF(62,g|0,16704)|0);if(x){x=0;l=cu(-1,-1)|0;lC(g);g8(16280);bk(l|0)}l=k;lC(g);c[4079]=l;c[4080]=16512;a[16324]=(dz[c[(c[k>>2]|0)+28>>2]&255](l)|0)&1;c[4276]=6596;c[4277]=6616;l=c[1646]|0;x=0;aq(78,17104+l|0,16280);if(x){x=0;k=cu(-1,-1)|0;g2(17108);bk(k|0)}k=l+72|0;c[17104+k>>2]=0;g=l+76|0;c[17104+g>>2]=-1;m=c[r>>2]|0;g9(16328);c[4082]=6912;c[4090]=m;lB(f,16332);n=(x=0,aF(62,f|0,16704)|0);if(x){x=0;p=cu(-1,-1)|0;lC(f);g8(16328);bk(p|0)}p=n;lC(f);c[4091]=p;c[4092]=16520;a[16372]=(dz[c[(c[n>>2]|0)+28>>2]&255](p)|0)&1;c[4320]=6596;c[4321]=6616;x=0;aq(78,17280+l|0,16328);if(x){x=0;p=cu(-1,-1)|0;g2(17284);bk(p|0)}c[17280+k>>2]=0;c[17280+g>>2]=-1;p=c[(c[(c[4320]|0)-12>>2]|0)+17304>>2]|0;c[4298]=6596;c[4299]=6616;x=0;aq(78,17192+l|0,p|0);if(x){x=0;p=cu(-1,-1)|0;g2(17196);bk(p|0)}c[17192+k>>2]=0;c[17192+g>>2]=-1;c[(c[(c[4342]|0)-12>>2]|0)+17440>>2]=17104;g=(c[(c[4320]|0)-12>>2]|0)+17284|0;c[g>>2]=c[g>>2]|8192;c[(c[(c[4320]|0)-12>>2]|0)+17352>>2]=17104;fT(16224,h,16528);c[4254]=6644;c[4256]=6664;c[4255]=0;h=c[1658]|0;x=0;aq(78,17016+h|0,16224);if(x){x=0;g=cu(-1,-1)|0;g5(17024);bk(g|0)}c[h+17088>>2]=0;c[h+17092>>2]=-1;hp(16128);c[4032]=6840;c[4040]=j;lB(e,16132);j=(x=0,aF(62,e|0,16696)|0);if(x){x=0;h=cu(-1,-1)|0;lC(e);ho(16128);bk(h|0)}h=j;lC(e);c[4041]=h;c[4042]=16536;a[16172]=(dz[c[(c[j>>2]|0)+28>>2]&255](h)|0)&1;c[4184]=6548;c[4185]=6568;h=c[1634]|0;x=0;aq(78,16736+h|0,16128);if(x){x=0;j=cu(-1,-1)|0;g5(16740);bk(j|0)}j=h+72|0;c[16736+j>>2]=0;e=h+76|0;c[16736+e>>2]=-1;hp(16176);c[4044]=6840;c[4052]=m;lB(d,16180);m=(x=0,aF(62,d|0,16696)|0);if(x){x=0;g=cu(-1,-1)|0;lC(d);ho(16176);bk(g|0)}g=m;lC(d);c[4053]=g;c[4054]=16544;a[16220]=(dz[c[(c[m>>2]|0)+28>>2]&255](g)|0)&1;c[4228]=6548;c[4229]=6568;x=0;aq(78,16912+h|0,16176);if(x){x=0;g=cu(-1,-1)|0;g5(16916);bk(g|0)}c[16912+j>>2]=0;c[16912+e>>2]=-1;g=c[(c[(c[4228]|0)-12>>2]|0)+16936>>2]|0;c[4206]=6548;c[4207]=6568;x=0;aq(78,16824+h|0,g|0);if(!x){c[16824+j>>2]=0;c[16824+e>>2]=-1;c[(c[(c[4254]|0)-12>>2]|0)+17088>>2]=16736;e=(c[(c[4228]|0)-12>>2]|0)+16916|0;c[e>>2]=c[e>>2]|8192;c[(c[(c[4228]|0)-12>>2]|0)+16984>>2]=16736;i=b;return}else{x=0;b=cu(-1,-1)|0;g5(16828);bk(b|0)}}function fN(a){a=a|0;x=0,as(90,17104)|0;do{if(!x){x=0,as(90,17192)|0;if(x){x=0;break}x=0,as(36,16736)|0;if(x){x=0;break}x=0,as(36,16824)|0;if(x){x=0;break}return}else{x=0}}while(0);cu(-1,-1,0)|0;cA()}function fO(a){a=a|0;ho(a|0);return}function fP(a){a=a|0;ho(a|0);nU(a);return}function fQ(b,d){b=b|0;d=d|0;var e=0;dz[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=lE(d,16696)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(dz[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function fR(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=dN[c[(c[a>>2]|0)+20>>2]&63](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((a0(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=1078;break}if((l|0)==2){m=-1;n=1079;break}else if((l|0)!=1){n=1076;break}}if((n|0)==1076){m=((aY(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==1078){i=b;return m|0}else if((n|0)==1079){i=b;return m|0}return 0}function fS(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L1478:do{if(!k){c[g>>2]=d;if((a[b+44|0]&1)!=0){if((a0(g|0,4,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+4|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=dS[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=1094;break}if((v|0)==3){w=1087;break}u=(v|0)==1;if(v>>>0>=2){l=-1;w=1096;break}v=(c[h>>2]|0)-r|0;if((a0(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=1097;break}if(u){t=u?c[j>>2]|0:t}else{break L1478}}if((w|0)==1087){if((a0(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==1094){i=e;return l|0}else if((w|0)==1096){i=e;return l|0}else if((w|0)==1097){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function fT(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b|0;hp(h);c[b>>2]=7240;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;lB(g,b+4|0);e=(x=0,aF(62,g|0,16696)|0);if(x){x=0;j=cu(-1,-1)|0;k=K;lC(g);ho(h);bk(j|0)}d=e;l=b+36|0;c[l>>2]=d;m=b+44|0;c[m>>2]=dz[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[l>>2]|0;a[b+53|0]=(dz[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[m>>2]|0)<=8){lC(g);i=f;return}x=0;ap(194,232);if(!x){lC(g);i=f;return}else{x=0;j=cu(-1,-1)|0;k=K;lC(g);ho(h);bk(j|0)}}function fU(a){a=a|0;ho(a|0);return}function fV(a){a=a|0;ho(a|0);nU(a);return}function fW(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=lE(d,16696)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=dz[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(dz[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}kX(232);return}function fX(a){a=a|0;return f_(a,0)|0}function fY(a){a=a|0;return f_(a,1)|0}function fZ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L1525:do{if(l){c[h>>2]=c[n>>2];o=c[b+36>>2]|0;p=f|0;q=dS[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+4|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2]&255;c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L1525}r=o-1|0;c[g>>2]=r;if((cO(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function f_(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;if((a[k]&1)!=0){l=b+48|0;m=c[l>>2]|0;if(!d){n=m;i=e;return n|0}c[l>>2]=-1;a[k]=0;n=m;i=e;return n|0}m=c[b+44>>2]|0;k=(m|0)>1?m:1;L1545:do{if((k|0)>0){m=b+32|0;l=0;while(1){o=cp(c[m>>2]|0)|0;if((o|0)==-1){n=-1;break}a[f+l|0]=o&255;l=l+1|0;if((l|0)>=(k|0)){break L1545}}i=e;return n|0}}while(0);L1552:do{if((a[b+53|0]&1)==0){l=b+40|0;m=b+36|0;o=f|0;p=g+4|0;q=b+32|0;r=k;while(1){s=c[l>>2]|0;t=s;u=c[t>>2]|0;v=c[t+4>>2]|0;t=c[m>>2]|0;w=f+r|0;x=dS[c[(c[t>>2]|0)+16>>2]&31](t,s,o,w,h,g,p,j)|0;if((x|0)==3){y=1146;break}else if((x|0)==2){n=-1;y=1158;break}else if((x|0)!=1){z=r;break L1552}x=c[l>>2]|0;c[x>>2]=u;c[x+4>>2]=v;if((r|0)==8){n=-1;y=1159;break}v=cp(c[q>>2]|0)|0;if((v|0)==-1){n=-1;y=1160;break}a[w]=v&255;r=r+1|0}if((y|0)==1146){c[g>>2]=a[o]|0;z=r;break}else if((y|0)==1158){i=e;return n|0}else if((y|0)==1159){i=e;return n|0}else if((y|0)==1160){i=e;return n|0}}else{c[g>>2]=a[f|0]|0;z=k}}while(0);if(d){d=c[g>>2]|0;c[b+48>>2]=d;n=d;i=e;return n|0}d=b+32|0;b=z;while(1){if((b|0)<=0){break}z=b-1|0;if((cO(a[f+z|0]|0,c[d>>2]|0)|0)==-1){n=-1;y=1161;break}else{b=z}}if((y|0)==1161){i=e;return n|0}n=c[g>>2]|0;i=e;return n|0}function f$(a){a=a|0;g8(a|0);return}function f0(a){a=a|0;g8(a|0);nU(a);return}function f1(b,d){b=b|0;d=d|0;var e=0;dz[c[(c[b>>2]|0)+24>>2]&255](b)|0;e=lE(d,16704)|0;d=e;c[b+36>>2]=d;a[b+44|0]=(dz[c[(c[e>>2]|0)+28>>2]&255](d)|0)&1;return}function f2(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;b=i;i=i+16|0;d=b|0;e=b+8|0;f=a+36|0;g=a+40|0;h=d|0;j=d+8|0;k=d;d=a+32|0;while(1){a=c[f>>2]|0;l=dN[c[(c[a>>2]|0)+20>>2]&63](a,c[g>>2]|0,h,j,e)|0;a=(c[e>>2]|0)-k|0;if((a0(h|0,1,a|0,c[d>>2]|0)|0)!=(a|0)){m=-1;n=1172;break}if((l|0)==2){m=-1;n=1173;break}else if((l|0)!=1){n=1170;break}}if((n|0)==1170){m=((aY(c[d>>2]|0)|0)!=0)<<31>>31;i=b;return m|0}else if((n|0)==1172){i=b;return m|0}else if((n|0)==1173){i=b;return m|0}return 0}function f3(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=(d|0)==-1;L1590:do{if(!k){a[g]=d&255;if((a[b+44|0]&1)!=0){if((a0(g|0,1,1,c[b+32>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}m=f|0;c[h>>2]=m;n=g+1|0;o=b+36|0;p=b+40|0;q=f+8|0;r=f;s=b+32|0;t=g;while(1){u=c[o>>2]|0;v=dS[c[(c[u>>2]|0)+12>>2]&31](u,c[p>>2]|0,t,n,j,m,q,h)|0;if((c[j>>2]|0)==(t|0)){l=-1;w=1188;break}if((v|0)==3){w=1181;break}u=(v|0)==1;if(v>>>0>=2){l=-1;w=1190;break}v=(c[h>>2]|0)-r|0;if((a0(m|0,1,v|0,c[s>>2]|0)|0)!=(v|0)){l=-1;w=1191;break}if(u){t=u?c[j>>2]|0:t}else{break L1590}}if((w|0)==1181){if((a0(t|0,1,1,c[s>>2]|0)|0)==1){break}else{l=-1}i=e;return l|0}else if((w|0)==1188){i=e;return l|0}else if((w|0)==1190){i=e;return l|0}else if((w|0)==1191){i=e;return l|0}}}while(0);l=k?0:d;i=e;return l|0}function f4(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b|0;g9(h);c[b>>2]=7312;c[b+32>>2]=d;c[b+40>>2]=e;c[b+48>>2]=-1;a[b+52|0]=0;lB(g,b+4|0);e=(x=0,aF(62,g|0,16704)|0);if(x){x=0;j=cu(-1,-1)|0;k=K;lC(g);g8(h);bk(j|0)}d=e;l=b+36|0;c[l>>2]=d;m=b+44|0;c[m>>2]=dz[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[l>>2]|0;a[b+53|0]=(dz[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[m>>2]|0)<=8){lC(g);i=f;return}x=0;ap(194,232);if(!x){lC(g);i=f;return}else{x=0;j=cu(-1,-1)|0;k=K;lC(g);g8(h);bk(j|0)}}function f5(a){a=a|0;g8(a|0);return}function f6(a){a=a|0;g8(a|0);nU(a);return}function f7(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;e=lE(d,16704)|0;d=e;f=b+36|0;c[f>>2]=d;g=b+44|0;c[g>>2]=dz[c[(c[e>>2]|0)+24>>2]&255](d)|0;d=c[f>>2]|0;a[b+53|0]=(dz[c[(c[d>>2]|0)+28>>2]&255](d)|0)&1;if((c[g>>2]|0)<=8){return}kX(232);return}function f8(a){a=a|0;return gb(a,0)|0}function f9(a){a=a|0;return gb(a,1)|0}function ga(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;e=i;i=i+32|0;f=e|0;g=e+8|0;h=e+16|0;j=e+24|0;k=b+52|0;l=(a[k]&1)!=0;if((d|0)==-1){if(l){m=-1;i=e;return m|0}n=c[b+48>>2]|0;a[k]=(n|0)!=-1|0;m=n;i=e;return m|0}n=b+48|0;L1637:do{if(l){a[h]=c[n>>2]&255;o=c[b+36>>2]|0;p=f|0;q=dS[c[(c[o>>2]|0)+12>>2]&31](o,c[b+40>>2]|0,h,h+1|0,j,p,f+8|0,g)|0;if((q|0)==3){a[p]=c[n>>2]&255;c[g>>2]=f+1}else if((q|0)==2|(q|0)==1){m=-1;i=e;return m|0}q=b+32|0;while(1){o=c[g>>2]|0;if(o>>>0<=p>>>0){break L1637}r=o-1|0;c[g>>2]=r;if((cO(a[r]|0,c[q>>2]|0)|0)==-1){m=-1;break}}i=e;return m|0}}while(0);c[n>>2]=d;a[k]=1;m=d;i=e;return m|0}function gb(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;f=i;i=i+32|0;g=f|0;h=f+8|0;j=f+16|0;k=f+24|0;l=b+52|0;if((a[l]&1)!=0){m=b+48|0;n=c[m>>2]|0;if(!e){o=n;i=f;return o|0}c[m>>2]=-1;a[l]=0;o=n;i=f;return o|0}n=c[b+44>>2]|0;l=(n|0)>1?n:1;L1657:do{if((l|0)>0){n=b+32|0;m=0;while(1){p=cp(c[n>>2]|0)|0;if((p|0)==-1){o=-1;break}a[g+m|0]=p&255;m=m+1|0;if((m|0)>=(l|0)){break L1657}}i=f;return o|0}}while(0);L1664:do{if((a[b+53|0]&1)==0){m=b+40|0;n=b+36|0;p=g|0;q=h+1|0;r=b+32|0;s=l;while(1){t=c[m>>2]|0;u=t;v=c[u>>2]|0;w=c[u+4>>2]|0;u=c[n>>2]|0;x=g+s|0;y=dS[c[(c[u>>2]|0)+16>>2]&31](u,t,p,x,j,h,q,k)|0;if((y|0)==3){z=1240;break}else if((y|0)==2){o=-1;z=1253;break}else if((y|0)!=1){A=s;break L1664}y=c[m>>2]|0;c[y>>2]=v;c[y+4>>2]=w;if((s|0)==8){o=-1;z=1254;break}w=cp(c[r>>2]|0)|0;if((w|0)==-1){o=-1;z=1255;break}a[x]=w&255;s=s+1|0}if((z|0)==1240){a[h]=a[p]|0;A=s;break}else if((z|0)==1253){i=f;return o|0}else if((z|0)==1254){i=f;return o|0}else if((z|0)==1255){i=f;return o|0}}else{a[h]=a[g|0]|0;A=l}}while(0);do{if(e){l=a[h]|0;c[b+48>>2]=l&255;B=l}else{l=b+32|0;k=A;while(1){if((k|0)<=0){z=1247;break}j=k-1|0;if((cO(d[g+j|0]|0|0,c[l>>2]|0)|0)==-1){o=-1;z=1256;break}else{k=j}}if((z|0)==1247){B=a[h]|0;break}else if((z|0)==1256){i=f;return o|0}}}while(0);o=B&255;i=f;return o|0}function gc(){fM(0);bx(220,17456|0,u|0)|0;return}function gd(a){a=a|0;return}function ge(a){a=a|0;var b=0;b=a+4|0;I=c[b>>2]|0,c[b>>2]=I+1,I;return}function gf(a){a=a|0;var b=0,d=0;b=a+4|0;if(((I=c[b>>2]|0,c[b>>2]=I+ -1,I)|0)!=0){d=0;return d|0}dw[c[(c[a>>2]|0)+8>>2]&511](a);d=1;return d|0}function gg(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=4488;d=a+4|0;if((d|0)==0){return}a=n1(b|0)|0;e=a+1|0;f=nT(a+13|0)|0;c[f+4>>2]=a;c[f>>2]=a;a=f+12|0;c[d>>2]=a;c[f+8>>2]=0;n4(a|0,b|0,e)|0;return}function gh(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=4488;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;nU(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;nU(e);return}nV(d);e=a;nU(e);return}function gi(a){a=a|0;var b=0;c[a>>2]=4488;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((I=c[a>>2]|0,c[a>>2]=I+ -1,I)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}nV(a);return}function gj(a){a=a|0;return c[a+4>>2]|0}function gk(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;c[b>>2]=4424;e=b+4|0;if((e|0)==0){return}if((a[d]&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}d=n1(f|0)|0;b=d+1|0;g=nT(d+13|0)|0;c[g+4>>2]=d;c[g>>2]=d;d=g+12|0;c[e>>2]=d;c[g+8>>2]=0;n4(d|0,f|0,b)|0;return}function gl(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;c[a>>2]=4424;d=a+4|0;if((d|0)==0){return}a=n1(b|0)|0;e=a+1|0;f=nT(a+13|0)|0;c[f+4>>2]=a;c[f>>2]=a;a=f+12|0;c[d>>2]=a;c[f+8>>2]=0;n4(a|0,b|0,e)|0;return}function gm(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=4424;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;nU(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;nU(e);return}nV(d);e=a;nU(e);return}function gn(a){a=a|0;var b=0;c[a>>2]=4424;b=a+4|0;a=(c[b>>2]|0)-4|0;if(((I=c[a>>2]|0,c[a>>2]=I+ -1,I)-1|0)>=0){return}a=(c[b>>2]|0)-12|0;if((a|0)==0){return}nV(a);return}function go(a){a=a|0;return c[a+4>>2]|0}function gp(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=4488;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;nU(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;nU(e);return}nV(d);e=a;nU(e);return}function gq(a){a=a|0;var b=0,d=0,e=0;c[a>>2]=4424;b=a+4|0;d=(c[b>>2]|0)-4|0;if(((I=c[d>>2]|0,c[d>>2]=I+ -1,I)-1|0)>=0){e=a;nU(e);return}d=(c[b>>2]|0)-12|0;if((d|0)==0){e=a;nU(e);return}nV(d);e=a;nU(e);return}function gr(a){a=a|0;c[a>>2]=6448;return}function gs(a){a=a|0;nU(a);return}function gt(a){a=a|0;return}function gu(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=d;c[a+4>>2]=b;return}function gv(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=i;i=i+8|0;f=e|0;dQ[c[(c[a>>2]|0)+12>>2]&63](f,a,b);if((c[f+4>>2]|0)!=(c[d+4>>2]|0)){g=0;i=e;return g|0}g=(c[f>>2]|0)==(c[d>>2]|0);i=e;return g|0}function gw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if((c[b+4>>2]|0)!=(a|0)){e=0;return e|0}e=(c[b>>2]|0)==(d|0);return e|0}function gx(a,b,c){a=a|0;b=b|0;c=c|0;b=cH(c|0)|0;gG(a,b,n1(b|0)|0);return}function gy(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;g=i;h=f;j=i;i=i+12|0;i=i+7&-8;k=e|0;l=c[k>>2]|0;if((l|0)==0){m=b;c[m>>2]=c[h>>2];c[m+4>>2]=c[h+4>>2];c[m+8>>2]=c[h+8>>2];n0(h|0,0,12);i=g;return}n=d[h]|0;if((n&1|0)==0){o=n>>>1}else{o=c[f+4>>2]|0}if((o|0)==0){p=l}else{gO(f,2576)|0;p=c[k>>2]|0}k=c[e+4>>2]|0;dQ[c[(c[k>>2]|0)+24>>2]&63](j,k,p);p=a[j]|0;if((p&1)==0){q=j+1|0}else{q=c[j+8>>2]|0}k=p&255;if((k&1|0)==0){r=k>>>1}else{r=c[j+4>>2]|0}x=0,au(42,f|0,q|0,r|0)|0;if(x){x=0;r=cu(-1,-1)|0;gI(j);bk(r|0)}gI(j);m=b;c[m>>2]=c[h>>2];c[m+4>>2]=c[h+4>>2];c[m+8>>2]=c[h+8>>2];n0(h|0,0,12);i=g;return}function gz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,k=0,l=0,m=0,n=0;e=i;i=i+32|0;f=b;b=i;i=i+8|0;c[b>>2]=c[f>>2];c[b+4>>2]=c[f+4>>2];f=e|0;g=e+16|0;gG(g,d,n1(d|0)|0);x=0;aJ(6,f|0,b|0,g|0);if(x){x=0;d=cu(-1,-1)|0;h=K;j=d;gI(g);k=j;l=0;m=k;n=h;bk(m|0)}x=0;aq(60,a|0,f|0);if(!x){gI(f);gI(g);c[a>>2]=6808;d=b;b=a+8|0;a=c[d+4>>2]|0;c[b>>2]=c[d>>2];c[b+4>>2]=a;i=e;return}else{x=0}e=cu(-1,-1)|0;a=K;gI(f);h=a;j=e;gI(g);k=j;l=0;m=k;n=h;bk(m|0)}function gA(a){a=a|0;gn(a|0);nU(a);return}function gB(a){a=a|0;gn(a|0);return}function gC(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if(a>>>0<212){b=13328;d=48;L1817:while(1){e=d;while(1){if((e|0)==0){break L1817}f=(e|0)/2|0;if((c[b+(f<<2)>>2]|0)>>>0<a>>>0){break}else{e=f}}b=b+(f+1<<2)|0;d=e-1-f|0}g=c[b>>2]|0;return g|0}if(a>>>0>4294967291){b=c9(8)|0;x=0;aq(76,b|0,1144);if(!x){c[b>>2]=4392;ca(b|0,11144,60);return 0}else{x=0;f=cu(-1,-1)|0;by(b|0);bk(f|0)}}f=(a>>>0)/210|0;b=f*210|0;d=a-b|0;a=13136;h=48;L1832:while(1){i=h;while(1){if((i|0)==0){break L1832}j=(i|0)/2|0;if((c[a+(j<<2)>>2]|0)>>>0<d>>>0){break}else{i=j}}a=a+(j+1<<2)|0;h=i-1-j|0}j=a-13136>>2;a=f;f=j;h=(c[13136+(j<<2)>>2]|0)+b|0;L1839:while(1){b=5;while(1){if(b>>>0>=47){k=211;l=1391;break}j=c[13328+(b<<2)>>2]|0;d=(h>>>0)/(j>>>0)|0;if(d>>>0<j>>>0){g=h;l=1490;break L1839}if((h|0)==(ag(d,j)|0)){break}else{b=b+1|0}}L1845:do{if((l|0)==1391){while(1){l=0;b=(h>>>0)/(k>>>0)|0;if(b>>>0<k>>>0){g=h;l=1491;break L1839}if((h|0)==(ag(b,k)|0)){break L1845}b=k+10|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1492;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+12|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1493;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+16|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1494;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+18|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1495;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+22|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1496;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+28|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1497;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+30|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1498;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+36|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1499;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+40|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1500;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+42|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1501;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+46|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1502;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+52|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1503;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+58|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1504;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+60|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1505;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+66|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1506;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+70|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1507;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+72|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1508;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+78|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1509;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+82|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1510;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+88|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1511;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+96|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1512;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+100|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1513;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+102|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1514;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+106|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1515;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+108|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1516;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+112|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1517;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+120|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1518;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+126|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1519;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+130|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1520;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+136|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1521;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+138|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1522;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+142|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1523;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+148|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1524;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+150|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1525;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+156|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1526;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+162|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1527;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+166|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1528;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+168|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1529;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+172|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1530;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+178|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1531;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+180|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1532;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+186|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1533;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+190|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1534;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+192|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1535;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+196|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1536;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+198|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1537;break L1839}if((h|0)==(ag(i,b)|0)){break L1845}b=k+208|0;i=(h>>>0)/(b>>>0)|0;if(i>>>0<b>>>0){g=h;l=1538;break L1839}if((h|0)==(ag(i,b)|0)){break}else{k=k+210|0;l=1391}}}}while(0);b=f+1|0;i=(b|0)==48;j=i?0:b;b=(i&1)+a|0;a=b;f=j;h=(c[13136+(j<<2)>>2]|0)+(b*210|0)|0}if((l|0)==1491){return g|0}else if((l|0)==1492){return g|0}else if((l|0)==1493){return g|0}else if((l|0)==1530){return g|0}else if((l|0)==1531){return g|0}else if((l|0)==1532){return g|0}else if((l|0)==1533){return g|0}else if((l|0)==1534){return g|0}else if((l|0)==1514){return g|0}else if((l|0)==1515){return g|0}else if((l|0)==1516){return g|0}else if((l|0)==1517){return g|0}else if((l|0)==1535){return g|0}else if((l|0)==1536){return g|0}else if((l|0)==1537){return g|0}else if((l|0)==1538){return g|0}else if((l|0)==1500){return g|0}else if((l|0)==1501){return g|0}else if((l|0)==1502){return g|0}else if((l|0)==1494){return g|0}else if((l|0)==1495){return g|0}else if((l|0)==1496){return g|0}else if((l|0)==1497){return g|0}else if((l|0)==1498){return g|0}else if((l|0)==1499){return g|0}else if((l|0)==1503){return g|0}else if((l|0)==1504){return g|0}else if((l|0)==1505){return g|0}else if((l|0)==1521){return g|0}else if((l|0)==1522){return g|0}else if((l|0)==1523){return g|0}else if((l|0)==1524){return g|0}else if((l|0)==1506){return g|0}else if((l|0)==1507){return g|0}else if((l|0)==1508){return g|0}else if((l|0)==1509){return g|0}else if((l|0)==1490){return g|0}else if((l|0)==1525){return g|0}else if((l|0)==1526){return g|0}else if((l|0)==1527){return g|0}else if((l|0)==1528){return g|0}else if((l|0)==1529){return g|0}else if((l|0)==1510){return g|0}else if((l|0)==1511){return g|0}else if((l|0)==1512){return g|0}else if((l|0)==1513){return g|0}else if((l|0)==1518){return g|0}else if((l|0)==1519){return g|0}else if((l|0)==1520){return g|0}return 0}function gD(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e;if((c[a>>2]|0)==1){do{bi(16456,16432)|0;}while((c[a>>2]|0)==1)}if((c[a>>2]|0)!=0){f;return}c[a>>2]=1;x=0,as(178,16432)|0;do{if(!x){x=0;ap(d|0,b|0);if(x){x=0;break}x=0,as(116,16432)|0;if(x){x=0;break}c[a>>2]=-1;x=0,as(178,16432)|0;if(x){x=0;break}x=0,as(166,16456)|0;if(x){x=0;break}return}else{x=0}}while(0);b=cu(-1,-1,0)|0;bW(b|0)|0;x=0,as(116,16432)|0;do{if(!x){c[a>>2]=0;x=0,as(178,16432)|0;if(x){x=0;break}x=0,as(166,16456)|0;if(x){x=0;break}x=0;aK(2);if(x){x=0;break}}else{x=0}}while(0);a=cu(-1,-1)|0;x=0;aK(8);if(!x){bk(a|0)}else{x=0;cu(-1,-1,0)|0;cA()}}function gE(a){a=a|0;var b=0;a=c9(8)|0;x=0;aq(58,a|0,560|0);if(!x){c[a>>2]=4456;ca(a|0,11176,50)}else{x=0;b=cu(-1,-1)|0;by(a|0);bk(b|0)}}function gF(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=d;if((a[e]&1)==0){f=b;c[f>>2]=c[e>>2];c[f+4>>2]=c[e+4>>2];c[f+8>>2]=c[e+8>>2];return}e=c[d+8>>2]|0;f=c[d+4>>2]|0;if((f|0)==-1){gE(0)}if(f>>>0<11){a[b]=f<<1&255;g=b+1|0}else{d=f+16&-16;h=nS(d)|0;c[b+8>>2]=h;c[b>>2]=d|1;c[b+4>>2]=f;g=h}n4(g|0,e|0,f)|0;a[g+f|0]=0;return}function gG(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if((e|0)==-1){gE(0)}if(e>>>0<11){a[b]=e<<1&255;f=b+1|0;n4(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}else{h=e+16&-16;i=nS(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=e;f=i;n4(f|0,d|0,e)|0;g=f+e|0;a[g]=0;return}}function gH(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if((d|0)==-1){gE(0)}if(d>>>0<11){a[b]=d<<1&255;f=b+1|0;n0(f|0,e|0,d|0);g=f+d|0;a[g]=0;return}else{h=d+16&-16;i=nS(h)|0;c[b+8>>2]=i;c[b>>2]=h|1;c[b+4>>2]=d;f=i;n0(f|0,e|0,d|0);g=f+d|0;a[g]=0;return}}function gI(b){b=b|0;if((a[b]&1)==0){return}nU(c[b+8>>2]|0);return}function gJ(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if((b|0)==(d|0)){return b|0}e=a[d]|0;if((e&1)==0){f=d+1|0}else{f=c[d+8>>2]|0}g=e&255;if((g&1|0)==0){h=g>>>1}else{h=c[d+4>>2]|0}d=b;g=b;e=a[g]|0;if((e&1)==0){i=10;j=e}else{e=c[b>>2]|0;i=(e&-2)-1|0;j=e&255}if(i>>>0<h>>>0){e=j&255;if((e&1|0)==0){k=e>>>1}else{k=c[b+4>>2]|0}gR(b,i,h-i|0,k,0,k,h,f);return b|0}if((j&1)==0){l=d+1|0}else{l=c[b+8>>2]|0}n5(l|0,f|0,h|0);a[l+h|0]=0;if((a[g]&1)==0){a[g]=h<<1&255;return b|0}else{c[b+4>>2]=h;return b|0}return 0}function gK(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;e=n1(d|0)|0;f=b;g=b;h=a[g]|0;if((h&1)==0){i=10;j=h}else{h=c[b>>2]|0;i=(h&-2)-1|0;j=h&255}if(i>>>0<e>>>0){h=j&255;if((h&1|0)==0){k=h>>>1}else{k=c[b+4>>2]|0}gR(b,i,e-i|0,k,0,k,e,d);return b|0}if((j&1)==0){l=f+1|0}else{l=c[b+8>>2]|0}n5(l|0,d|0,e|0);a[l+e|0]=0;if((a[g]&1)==0){a[g]=e<<1&255;return b|0}else{c[b+4>>2]=e;return b|0}return 0}function gL(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;f=b;g=a[f]|0;h=g&255;if((h&1|0)==0){i=h>>>1}else{i=c[b+4>>2]|0}if(i>>>0<d>>>0){h=d-i|0;gM(b,h,e)|0;return}if((g&1)==0){a[b+1+d|0]=0;a[f]=d<<1&255;return}else{a[(c[b+8>>2]|0)+d|0]=0;c[b+4>>2]=d;return}}
function nR(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;d=a;e=d+b|0;f=e;g=c[a+4>>2]|0;L1:do{if((g&1|0)==0){h=c[a>>2]|0;if((g&3|0)==0){return}i=d+(-h|0)|0;j=i;k=h+b|0;l=c[3400]|0;if(i>>>0<l>>>0){cX()}if((j|0)==(c[3401]|0)){m=d+(b+4)|0;if((c[m>>2]&3|0)!=3){n=j;o=k;break}c[3398]=k;c[m>>2]=c[m>>2]&-2;c[d+(4-h)>>2]=k|1;c[e>>2]=k;return}m=h>>>3;if(h>>>0<256){p=c[d+(8-h)>>2]|0;q=c[d+(12-h)>>2]|0;r=13624+(m<<1<<2)|0;do{if((p|0)!=(r|0)){if(p>>>0<l>>>0){cX()}if((c[p+12>>2]|0)==(j|0)){break}cX()}}while(0);if((q|0)==(p|0)){c[3396]=c[3396]&~(1<<m);n=j;o=k;break}do{if((q|0)==(r|0)){s=q+8|0}else{if(q>>>0<l>>>0){cX()}t=q+8|0;if((c[t>>2]|0)==(j|0)){s=t;break}cX()}}while(0);c[p+12>>2]=q;c[s>>2]=p;n=j;o=k;break}r=i;m=c[d+(24-h)>>2]|0;t=c[d+(12-h)>>2]|0;do{if((t|0)==(r|0)){u=16-h|0;v=d+(u+4)|0;w=c[v>>2]|0;if((w|0)==0){x=d+u|0;u=c[x>>2]|0;if((u|0)==0){y=0;break}else{z=u;A=x}}else{z=w;A=v}while(1){v=z+20|0;w=c[v>>2]|0;if((w|0)!=0){z=w;A=v;continue}v=z+16|0;w=c[v>>2]|0;if((w|0)==0){break}else{z=w;A=v}}if(A>>>0<l>>>0){cX()}else{c[A>>2]=0;y=z;break}}else{v=c[d+(8-h)>>2]|0;if(v>>>0<l>>>0){cX()}w=v+12|0;if((c[w>>2]|0)!=(r|0)){cX()}x=t+8|0;if((c[x>>2]|0)==(r|0)){c[w>>2]=t;c[x>>2]=v;y=t;break}else{cX()}}}while(0);if((m|0)==0){n=j;o=k;break}t=d+(28-h)|0;l=13888+(c[t>>2]<<2)|0;do{if((r|0)==(c[l>>2]|0)){c[l>>2]=y;if((y|0)!=0){break}c[3397]=c[3397]&~(1<<c[t>>2]);n=j;o=k;break L1}else{if(m>>>0<(c[3400]|0)>>>0){cX()}i=m+16|0;if((c[i>>2]|0)==(r|0)){c[i>>2]=y}else{c[m+20>>2]=y}if((y|0)==0){n=j;o=k;break L1}}}while(0);if(y>>>0<(c[3400]|0)>>>0){cX()}c[y+24>>2]=m;r=16-h|0;t=c[d+r>>2]|0;do{if((t|0)!=0){if(t>>>0<(c[3400]|0)>>>0){cX()}else{c[y+16>>2]=t;c[t+24>>2]=y;break}}}while(0);t=c[d+(r+4)>>2]|0;if((t|0)==0){n=j;o=k;break}if(t>>>0<(c[3400]|0)>>>0){cX()}else{c[y+20>>2]=t;c[t+24>>2]=y;n=j;o=k;break}}else{n=a;o=b}}while(0);a=c[3400]|0;if(e>>>0<a>>>0){cX()}y=d+(b+4)|0;z=c[y>>2]|0;do{if((z&2|0)==0){if((f|0)==(c[3402]|0)){A=(c[3399]|0)+o|0;c[3399]=A;c[3402]=n;c[n+4>>2]=A|1;if((n|0)!=(c[3401]|0)){return}c[3401]=0;c[3398]=0;return}if((f|0)==(c[3401]|0)){A=(c[3398]|0)+o|0;c[3398]=A;c[3401]=n;c[n+4>>2]=A|1;c[n+A>>2]=A;return}A=(z&-8)+o|0;s=z>>>3;L100:do{if(z>>>0<256){g=c[d+(b+8)>>2]|0;t=c[d+(b+12)>>2]|0;h=13624+(s<<1<<2)|0;do{if((g|0)!=(h|0)){if(g>>>0<a>>>0){cX()}if((c[g+12>>2]|0)==(f|0)){break}cX()}}while(0);if((t|0)==(g|0)){c[3396]=c[3396]&~(1<<s);break}do{if((t|0)==(h|0)){B=t+8|0}else{if(t>>>0<a>>>0){cX()}m=t+8|0;if((c[m>>2]|0)==(f|0)){B=m;break}cX()}}while(0);c[g+12>>2]=t;c[B>>2]=g}else{h=e;m=c[d+(b+24)>>2]|0;l=c[d+(b+12)>>2]|0;do{if((l|0)==(h|0)){i=d+(b+20)|0;p=c[i>>2]|0;if((p|0)==0){q=d+(b+16)|0;v=c[q>>2]|0;if((v|0)==0){C=0;break}else{D=v;E=q}}else{D=p;E=i}while(1){i=D+20|0;p=c[i>>2]|0;if((p|0)!=0){D=p;E=i;continue}i=D+16|0;p=c[i>>2]|0;if((p|0)==0){break}else{D=p;E=i}}if(E>>>0<a>>>0){cX()}else{c[E>>2]=0;C=D;break}}else{i=c[d+(b+8)>>2]|0;if(i>>>0<a>>>0){cX()}p=i+12|0;if((c[p>>2]|0)!=(h|0)){cX()}q=l+8|0;if((c[q>>2]|0)==(h|0)){c[p>>2]=l;c[q>>2]=i;C=l;break}else{cX()}}}while(0);if((m|0)==0){break}l=d+(b+28)|0;g=13888+(c[l>>2]<<2)|0;do{if((h|0)==(c[g>>2]|0)){c[g>>2]=C;if((C|0)!=0){break}c[3397]=c[3397]&~(1<<c[l>>2]);break L100}else{if(m>>>0<(c[3400]|0)>>>0){cX()}t=m+16|0;if((c[t>>2]|0)==(h|0)){c[t>>2]=C}else{c[m+20>>2]=C}if((C|0)==0){break L100}}}while(0);if(C>>>0<(c[3400]|0)>>>0){cX()}c[C+24>>2]=m;h=c[d+(b+16)>>2]|0;do{if((h|0)!=0){if(h>>>0<(c[3400]|0)>>>0){cX()}else{c[C+16>>2]=h;c[h+24>>2]=C;break}}}while(0);h=c[d+(b+20)>>2]|0;if((h|0)==0){break}if(h>>>0<(c[3400]|0)>>>0){cX()}else{c[C+20>>2]=h;c[h+24>>2]=C;break}}}while(0);c[n+4>>2]=A|1;c[n+A>>2]=A;if((n|0)!=(c[3401]|0)){F=A;break}c[3398]=A;return}else{c[y>>2]=z&-2;c[n+4>>2]=o|1;c[n+o>>2]=o;F=o}}while(0);o=F>>>3;if(F>>>0<256){z=o<<1;y=13624+(z<<2)|0;C=c[3396]|0;b=1<<o;do{if((C&b|0)==0){c[3396]=C|b;G=y;H=13624+(z+2<<2)|0}else{o=13624+(z+2<<2)|0;d=c[o>>2]|0;if(d>>>0>=(c[3400]|0)>>>0){G=d;H=o;break}cX()}}while(0);c[H>>2]=n;c[G+12>>2]=n;c[n+8>>2]=G;c[n+12>>2]=y;return}y=n;G=F>>>8;do{if((G|0)==0){I=0}else{if(F>>>0>16777215){I=31;break}H=(G+1048320|0)>>>16&8;z=G<<H;b=(z+520192|0)>>>16&4;C=z<<b;z=(C+245760|0)>>>16&2;o=14-(b|H|z)+(C<<z>>>15)|0;I=F>>>((o+7|0)>>>0)&1|o<<1}}while(0);G=13888+(I<<2)|0;c[n+28>>2]=I;c[n+20>>2]=0;c[n+16>>2]=0;o=c[3397]|0;z=1<<I;if((o&z|0)==0){c[3397]=o|z;c[G>>2]=y;c[n+24>>2]=G;c[n+12>>2]=n;c[n+8>>2]=n;return}if((I|0)==31){J=0}else{J=25-(I>>>1)|0}I=F<<J;J=c[G>>2]|0;while(1){if((c[J+4>>2]&-8|0)==(F|0)){break}K=J+16+(I>>>31<<2)|0;G=c[K>>2]|0;if((G|0)==0){L=126;break}else{I=I<<1;J=G}}if((L|0)==126){if(K>>>0<(c[3400]|0)>>>0){cX()}c[K>>2]=y;c[n+24>>2]=J;c[n+12>>2]=n;c[n+8>>2]=n;return}K=J+8|0;L=c[K>>2]|0;I=c[3400]|0;if(J>>>0<I>>>0){cX()}if(L>>>0<I>>>0){cX()}c[L+12>>2]=y;c[K>>2]=y;c[n+8>>2]=L;c[n+12>>2]=J;c[n+24>>2]=0;return}function nS(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;b=(a|0)==0?1:a;while(1){d=nN(b)|0;if((d|0)!=0){e=170;break}a=(I=c[4406]|0,c[4406]=I+0,I);if((a|0)==0){e=169;break}x=0;aK(a|0);if(x){x=0;e=165;break}}do{if((e|0)==169){b=c9(4)|0;c[b>>2]=4328;x=0;aJ(12,b|0,11112,44);if(!x){return 0}else{x=0;b=cu(-1,-1)|0;f=K;g=b;break}}else if((e|0)==165){b=cu(-1,-1)|0;f=K;g=b}else if((e|0)==170){return d|0}}while(0);if((f|0)<0){b2(g|0);return 0}else{bk(g|0)}return 0}function nT(a){a=a|0;var b=0;b=(x=0,as(154,a|0)|0);if(!x){return b|0}else{x=0}b=cu(-1,-1)|0;if((K|0)<0){b2(b|0);return 0}else{bk(b|0)}return 0}function nU(a){a=a|0;if((a|0)!=0){nO(a)}return}function nV(a){a=a|0;nU(a);return}function nW(a){a=a|0;nU(a);return}function nX(a){a=a|0;return}function nY(a){a=a|0;return 2144|0}function nZ(){var a=0;a=c9(4)|0;c[a>>2]=4328;ca(a|0,11112,44)}function n_(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0,Q=0.0,R=0.0,S=0.0;e=b;while(1){f=e+1|0;if((a5(a[e]|0)|0)==0){break}else{e=f}}g=a[e]|0;if((g<<24>>24|0)==45){i=f;j=1}else if((g<<24>>24|0)==43){i=f;j=0}else{i=e;j=0}e=-1;f=0;g=i;while(1){k=a[g]|0;if(((k<<24>>24)-48|0)>>>0<10){l=e}else{if(k<<24>>24!=46|(e|0)>-1){break}else{l=f}}e=l;f=f+1|0;g=g+1|0}l=g+(-f|0)|0;i=(e|0)<0;m=((i^1)<<31>>31)+f|0;n=(m|0)>18;o=(n?-18:-m|0)+(i?f:e)|0;e=n?18:m;do{if((e|0)==0){p=b;q=0.0}else{if((e|0)>9){m=l;n=e;f=0;while(1){i=a[m]|0;r=m+1|0;if(i<<24>>24==46){s=a[r]|0;t=m+2|0}else{s=i;t=r}u=(f*10|0)-48+(s<<24>>24)|0;r=n-1|0;if((r|0)>9){m=t;n=r;f=u}else{break}}v=+(u|0)*1.0e9;w=9;x=t;y=199}else{if((e|0)>0){v=0.0;w=e;x=l;y=199}else{z=0.0;A=0.0}}if((y|0)==199){f=x;n=w;m=0;while(1){r=a[f]|0;i=f+1|0;if(r<<24>>24==46){B=a[i]|0;C=f+2|0}else{B=r;C=i}D=(m*10|0)-48+(B<<24>>24)|0;i=n-1|0;if((i|0)>0){f=C;n=i;m=D}else{break}}z=+(D|0);A=v}E=A+z;do{if((k<<24>>24|0)==69|(k<<24>>24|0)==101){m=g+1|0;n=a[m]|0;if((n<<24>>24|0)==45){F=g+2|0;G=1}else if((n<<24>>24|0)==43){F=g+2|0;G=0}else{F=m;G=0}m=a[F]|0;if((m-48|0)>>>0<10){H=F;I=0;J=m}else{K=0;L=F;M=G;break}while(1){m=(I*10|0)-48+J|0;n=H+1|0;f=a[n]|0;if((f-48|0)>>>0<10){H=n;I=m;J=f}else{K=m;L=n;M=G;break}}}else{K=0;L=g;M=0}}while(0);n=o+((M|0)==0?K:-K|0)|0;m=(n|0)<0?-n|0:n;if((m|0)>511){c[(bt()|0)>>2]=34;N=1.0;O=40;P=511;y=216}else{if((m|0)==0){Q=1.0}else{N=1.0;O=40;P=m;y=216}}if((y|0)==216){while(1){y=0;if((P&1|0)==0){R=N}else{R=N*+h[O>>3]}m=P>>1;if((m|0)==0){Q=R;break}else{N=R;O=O+8|0;P=m;y=216}}}if((n|0)>-1){p=L;q=E*Q;break}else{p=L;q=E/Q;break}}}while(0);if((d|0)!=0){c[d>>2]=p}if((j|0)==0){S=q;return+S}S=-0.0-q;return+S}function n$(a,b,c){a=a|0;b=b|0;c=c|0;return+(+n_(a,b))}function n0(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;f=b+e|0;if((e|0)>=20){d=d&255;e=b&3;g=d|d<<8|d<<16|d<<24;h=f&~3;if(e){e=b+4-e|0;while((b|0)<(e|0)){a[b]=d;b=b+1|0}}while((b|0)<(h|0)){c[b>>2]=g;b=b+4|0}}while((b|0)<(f|0)){a[b]=d;b=b+1|0}}function n1(b){b=b|0;var c=0;c=b;while(a[c]|0){c=c+1|0}return c-b|0}function n2(b){b=b|0;var c=0;c=a[n+(b>>>24)|0]|0;if((c|0)<8)return c|0;c=a[n+(b>>16&255)|0]|0;if((c|0)<8)return c+8|0;c=a[n+(b>>8&255)|0]|0;if((c|0)<8)return c+16|0;return(a[n+(b&255)|0]|0)+24|0}function n3(a,b,c){a=a|0;b=b|0;c=c|0;var e=0,f=0,g=0;while((e|0)<(c|0)){f=d[a+e|0]|0;g=d[b+e|0]|0;if((f|0)!=(g|0))return((f|0)>(g|0)?1:-1)|0;e=e+1|0}return 0}function n4(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;f=b|0;if((b&3)==(d&3)){while(b&3){if((e|0)==0)return f|0;a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}while((e|0)>=4){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;e=e-4|0}}while((e|0)>0){a[b]=a[d]|0;b=b+1|0;d=d+1|0;e=e-1|0}return f|0}function n5(b,c,d){b=b|0;c=c|0;d=d|0;if((c|0)<(b|0)&(b|0)<(c+d|0)){c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b]=a[c]|0}}else{n4(b,c,d)|0}}function n6(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=a+c>>>0;return(K=b+d+(e>>>0<a>>>0|0)>>>0,e|0)|0}function n7(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=b-d>>>0;e=b-d-(c>>>0>a>>>0|0)>>>0;return(K=e,a-c>>>0|0)|0}function n8(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}K=a<<c-32;return 0}function n9(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=0;return b>>>c-32|0}function oa(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){K=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}K=(b|0)<0?-1:0;return b>>c-32|0}function ob(b){b=b|0;var c=0;c=a[m+(b&255)|0]|0;if((c|0)<8)return c|0;c=a[m+(b>>8&255)|0]|0;if((c|0)<8)return c+8|0;c=a[m+(b>>16&255)|0]|0;if((c|0)<8)return c+16|0;return(a[m+(b>>>24)|0]|0)+24|0}function oc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=a&65535;d=b&65535;e=ag(d,c)|0;f=a>>>16;a=(e>>>16)+(ag(d,f)|0)|0;d=b>>>16;b=ag(d,c)|0;return(K=(a>>>16)+(ag(d,f)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|e&65535|0)|0}function od(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;g=d>>31|((d|0)<0?-1:0)<<1;h=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;i=n7(e^a,f^b,e,f)|0;b=K;a=g^e;e=h^f;f=n7((oi(i,b,n7(g^c,h^d,g,h)|0,K,0)|0)^a,K^e,a,e)|0;return(K=K,f)|0}function oe(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,k=0,l=0,m=0;f=i;i=i+8|0;g=f|0;h=b>>31|((b|0)<0?-1:0)<<1;j=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;k=e>>31|((e|0)<0?-1:0)<<1;l=((e|0)<0?-1:0)>>31|((e|0)<0?-1:0)<<1;m=n7(h^a,j^b,h,j)|0;b=K;a=n7(k^d,l^e,k,l)|0;oi(m,b,a,K,g)|0;a=n7(c[g>>2]^h,c[g+4>>2]^j,h,j)|0;j=K;i=f;return(K=j,a)|0}function of(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;a=c;c=oc(e,a)|0;f=K;return(K=(ag(b,a)|0)+(ag(d,e)|0)+f|f&0,c|0|0)|0}function og(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=oi(a,b,c,d,0)|0;return(K=K,e)|0}function oh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=i;i=i+8|0;g=f|0;oi(a,b,d,e,g)|0;i=f;return(K=c[g+4>>2]|0,c[g>>2]|0)|0}function oi(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,L=0,M=0;g=a;h=b;i=h;j=d;k=e;l=k;if((i|0)==0){m=(f|0)!=0;if((l|0)==0){if(m){c[f>>2]=(g>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(g>>>0)/(j>>>0)>>>0;return(K=n,o)|0}else{if(!m){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;o=0;return(K=n,o)|0}}m=(l|0)==0;do{if((j|0)==0){if(m){if((f|0)!=0){c[f>>2]=(i>>>0)%(j>>>0);c[f+4>>2]=0}n=0;o=(i>>>0)/(j>>>0)>>>0;return(K=n,o)|0}if((g|0)==0){if((f|0)!=0){c[f>>2]=0;c[f+4>>2]=(i>>>0)%(l>>>0)}n=0;o=(i>>>0)/(l>>>0)>>>0;return(K=n,o)|0}p=l-1|0;if((p&l|0)==0){if((f|0)!=0){c[f>>2]=a|0;c[f+4>>2]=p&i|b&0}n=0;o=i>>>((ob(l|0)|0)>>>0);return(K=n,o)|0}p=(n2(l|0)|0)-(n2(i|0)|0)|0;if(p>>>0<=30){q=p+1|0;r=31-p|0;s=q;t=i<<r|g>>>(q>>>0);u=i>>>(q>>>0);v=0;w=g<<r;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}else{if(!m){r=(n2(l|0)|0)-(n2(i|0)|0)|0;if(r>>>0<=31){q=r+1|0;p=31-r|0;x=r-31>>31;s=q;t=g>>>(q>>>0)&x|i<<p;u=i>>>(q>>>0)&x;v=0;w=g<<p;break}if((f|0)==0){n=0;o=0;return(K=n,o)|0}c[f>>2]=a|0;c[f+4>>2]=h|b&0;n=0;o=0;return(K=n,o)|0}p=j-1|0;if((p&j|0)!=0){x=(n2(j|0)|0)+33-(n2(i|0)|0)|0;q=64-x|0;r=32-x|0;y=r>>31;z=x-32|0;A=z>>31;s=x;t=r-1>>31&i>>>(z>>>0)|(i<<r|g>>>(x>>>0))&A;u=A&i>>>(x>>>0);v=g<<q&y;w=(i<<q|g>>>(z>>>0))&y|g<<r&x-33>>31;break}if((f|0)!=0){c[f>>2]=p&g;c[f+4>>2]=0}if((j|0)==1){n=h|b&0;o=a|0|0;return(K=n,o)|0}else{p=ob(j|0)|0;n=i>>>(p>>>0)|0;o=i<<32-p|g>>>(p>>>0)|0;return(K=n,o)|0}}}while(0);if((s|0)==0){B=w;C=v;D=u;E=t;F=0;G=0}else{g=d|0|0;d=k|e&0;e=n6(g,d,-1,-1)|0;k=K;i=w;w=v;v=u;u=t;t=s;s=0;while(1){H=w>>>31|i<<1;I=s|w<<1;j=u<<1|i>>>31|0;a=u>>>31|v<<1|0;n7(e,k,j,a)|0;b=K;h=b>>31|((b|0)<0?-1:0)<<1;J=h&1;L=n7(j,a,h&g,(((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1)&d)|0;M=K;b=t-1|0;if((b|0)==0){break}else{i=H;w=I;v=M;u=L;t=b;s=J}}B=H;C=I;D=M;E=L;F=0;G=J}J=C;C=0;if((f|0)!=0){c[f>>2]=E;c[f+4>>2]=D}n=(J|0)>>>31|(B|C)<<1|(C<<1|J>>>31)&0|F;o=(J<<1|0>>>31)&-2|G;return(K=n,o)|0}function oj(a,b){a=a|0;b=+b;bj(a|0,+b)}function ok(a){a=a|0;b2(a|0)}function ol(a){a=a|0;cs(a|0)}function om(a){a=a|0;cW(a|0)}function on(a){a=a|0;aV(a|0)}function oo(a){a=a|0;ba(a|0)}function op(a){a=a|0;cR(a|0)}function oq(a){a=a|0;bJ(a|0)}function or(a){a=a|0;bI(a|0)}function os(a){a=a|0;c1(a|0)}function ot(a){a=a|0;bN(a|0)}function ou(a){a=a|0;a4(a|0)}function ov(a){a=a|0;da(a|0)}function ow(a){a=a|0;dq(a|0)}function ox(a,b){a=a|0;b=b|0;bO(a|0,b|0)}function oy(a,b){a=a|0;b=b|0;ct(a|0,b|0)}function oz(a,b){a=a|0;b=b|0;c7(a|0,b|0)}function oA(a,b){a=a|0;b=b|0;b_(a|0,b|0)}function oB(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return bF(a|0,b|0,c|0,d|0,e|0,f|0)|0}function oC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return cL(a|0,b|0,c|0,d|0,e|0,f|0)|0}function oD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return c2(a|0,b|0,c|0,d|0,e|0,f|0)|0}function oE(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return bD(a|0,b|0,c|0,d|0,e|0,f|0)|0}function oF(a){a=a|0;return bc(a|0)|0}function oG(a){a=a|0;return cG(a|0)|0}function oH(a){a=a|0;return co(a|0)|0}function oI(a){a=a|0;return cP(a|0)|0}function oJ(a){a=a|0;return a7(a|0)|0}function oK(a){a=a|0;return bl(a|0)|0}function oL(a){a=a|0;return cB(a|0)|0}function oM(a){a=a|0;return cb(a|0)|0}function oN(a){a=a|0;return b1(a|0)|0}function oO(a){a=a|0;return a8(a|0)|0}function oP(a){a=a|0;return aT(a|0)|0}function oQ(a){a=a|0;return bV(a|0)|0}function oR(a){a=a|0;return cy(a|0)|0}function oS(a){a=a|0;return bu(a|0)|0}function oT(a){a=a|0;return bK(a|0)|0}function oU(a){a=a|0;return c6(a|0)|0}function oV(a){a=a|0;return cC(a|0)|0}function oW(a,b,c){a=a|0;b=b|0;c=c|0;return bg(a|0,b|0,c|0)|0}function oX(a,b,c){a=a|0;b=b|0;c=c|0;return de(a|0,b|0,c|0)|0}function oY(a,b,c){a=a|0;b=b|0;c=c|0;return df(a|0,b|0,c|0)|0}function oZ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;bw(a|0,b|0,c|0,d|0,e|0,f|0)}function o_(a,b){a=a|0;b=b|0;return cZ(a|0,b|0)|0}function o$(a,b){a=a|0;b=b|0;return bz(a|0,b|0)|0}function o0(a,b){a=a|0;b=b|0;return aZ(a|0,b|0)|0}function o1(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return bL(a|0,b|0,c|0,d|0,e|0)|0}function o2(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cq(a|0,b|0,c|0,d|0,e|0)|0}function o3(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return c0(a|0,b|0,c|0,d|0,e|0)|0}function o4(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return bb(a|0,b|0,c|0,d|0,e|0)|0}function o5(){return dk()|0}function o6(){return bM()|0}function o7(){return dj()|0}function o8(){return bo()|0}function o9(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return cn(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function pa(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return cv(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function pb(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return cz(a|0,b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function pc(a,b,c){a=a|0;b=b|0;c=c|0;ca(a|0,b|0,c|0)}function pd(a,b,c){a=a|0;b=b|0;c=c|0;bv(a|0,b|0,c|0)}function pe(a,b,c){a=a|0;b=b|0;c=c|0;b4(a|0,b|0,c|0)}function pf(a,b,c){a=a|0;b=b|0;c=c|0;bU(a|0,b|0,c|0)}function pg(){bd()}function ph(){dd()}function pi(){aU()}function pj(){br()}function pk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return cV(a|0,b|0,c|0,d|0)|0}function pl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return bP(a|0,b|0,c|0,d|0)|0}function pm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;dg(a|0,b|0,c|0,d|0)}function pn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b0(a|0,b|0,c|0,d|0)}function po(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;bs(a|0,b|0,c|0,d|0)}function pp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ce(a|0,b|0,c|0,d|0)}function pq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;cw(a|0,b|0,c|0,d|0)}function pr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;cD(a|0,b|0,c|0,d|0)}function ps(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;cT(a|0,b|0,c|0,d|0)}function pt(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return dt[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0}function pu(a,b,c){a=a|0;b=b|0;c=+c;du[a&7](b|0,+c)}function pv(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;dv[a&7](b|0,c|0,d|0,e|0,f|0)}function pw(a,b){a=a|0;b=b|0;dw[a&511](b|0)}function px(a,b,c){a=a|0;b=b|0;c=c|0;dx[a&255](b|0,c|0)}function py(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return dy[a&15](b|0,c|0,d|0,e|0,f|0,g|0)|0}function pz(a,b){a=a|0;b=b|0;return dz[a&255](b|0)|0}function pA(a,b,c,d,e,f,g,h,i,j,k,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;return dA[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0)|0}function pB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return dB[a&127](b|0,c|0,d|0)|0}function pC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;dC[a&15](b|0,c|0,d|0,e|0,f|0,+g)}function pD(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;dD[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0,l|0,m|0,n|0,o|0,p|0)}function pE(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;dE[a&7](b|0,+c,+d)}function pF(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;dF[a&63](b|0,c|0,d|0,e|0,f|0,g|0)}function pG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return+dG[a&7](b|0,c|0,d|0)}function pH(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;dH[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)}function pI(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;dI[a&127](b|0,c|0,d|0,e|0,f|0,g|0,h|0)}function pJ(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;dJ[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function pK(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;dK[a&7](b|0,c|0,d|0,e|0,f|0,g|0,+h)}function pL(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;dL[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)}function pM(a,b,c){a=a|0;b=b|0;c=c|0;return dM[a&127](b|0,c|0)|0}function pN(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return dN[a&63](b|0,c|0,d|0,e|0,f|0)|0}function pO(a){a=a|0;return dO[a&15]()|0}function pP(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return dP[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)|0}function pQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;dQ[a&63](b|0,c|0,d|0)}function pR(a){a=a|0;dR[a&15]()}function pS(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return dS[a&31](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0}function pT(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return dT[a&63](b|0,c|0,d|0,e|0)|0}function pU(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;dU[a&63](b|0,c|0,d|0,e|0)}function pV(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ah(0);return 0}function pW(a,b){a=a|0;b=+b;ah(1)}function pX(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ah(2)}function pY(a){a=a|0;ah(3)}function pZ(a,b){a=a|0;b=b|0;ah(4)}function p_(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ah(5);return 0}function p$(a){a=a|0;ah(6);return 0}function p0(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;ah(7);return 0}function p1(a,b,c){a=a|0;b=b|0;c=c|0;ah(8);return 0}function p2(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;ah(9)}function p3(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;ah(10)}function p4(a,b,c){a=a|0;b=+b;c=+c;ah(11)}function p5(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ah(12)}function p6(a,b,c){a=a|0;b=b|0;c=c|0;ah(13);return 0.0}function p7(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ah(14)}function p8(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;ah(15)}function p9(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ah(16)}function qa(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;ah(17)}function qb(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ah(18)}function qc(a,b){a=a|0;b=b|0;ah(19);return 0}function qd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ah(20);return 0}function qe(){ah(21);return 0}function qf(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ah(22);return 0}function qg(a,b,c){a=a|0;b=b|0;c=c|0;ah(23)}function qh(){ah(24)}function qi(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;ah(25);return 0}function qj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ah(26);return 0}function qk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ah(27)}
// EMSCRIPTEN_END_FUNCS
var dt=[pV,pV,iZ,pV,iw,pV,pV,pV];var du=[pW,pW,fh,pW,oj,pW,pW,pW];var dv=[pX,pX,nI,pX,nJ,pX,nH,pX];var dw=[pY,pY,lo,pY,fc,pY,it,pY,jr,pY,gp,pY,g7,pY,lt,pY,lH,pY,f5,pY,fV,pY,jc,pY,fj,pY,gh,pY,gq,pY,gn,pY,iW,pY,ec,pY,ii,pY,eZ,pY,id,pY,e1,pY,nX,pY,fD,pY,ok,pY,gi,pY,lF,pY,g2,pY,lV,pY,ef,pY,gn,pY,g9,pY,jT,pY,iX,pY,ns,pY,h_,pY,lk,pY,eG,pY,fq,pY,lG,pY,eK,pY,fd,pY,hE,pY,iu,pY,ol,pY,om,pY,kw,pY,ly,pY,on,pY,eH,pY,mI,pY,nx,pY,e3,pY,kI,pY,mH,pY,oo,pY,ib,pY,op,pY,gn,pY,gE,pY,ip,pY,kb,pY,mK,pY,oq,pY,fm,pY,lI,pY,nO,pY,mj,pY,nz,pY,ld,pY,mG,pY,hK,pY,fU,pY,g8,pY,io,pY,j6,pY,gi,pY,m7,pY,jd,pY,gt,pY,mu,pY,fE,pY,h5,pY,e0,pY,eS,pY,kx,pY,fe,pY,hD,pY,hS,pY,j3,pY,jS,pY,ie,pY,kl,pY,nW,pY,g6,pY,na,pY,nb,pY,kX,pY,lx,pY,h$,pY,hn,pY,fs,pY,l3,pY,or,pY,e2,pY,nu,pY,hG,pY,ic,pY,kS,pY,h8,pY,fN,pY,kH,pY,hI,pY,h0,pY,lC,pY,fx,pY,nd,pY,ny,pY,f$,pY,eY,pY,os,pY,j4,pY,k0,pY,nt,pY,mF,pY,le,pY,nc,pY,ka,pY,jq,pY,ih,pY,e$,pY,ij,pY,hM,pY,gA,pY,h2,pY,mb,pY,k7,pY,k$,pY,kV,pY,mJ,pY,gV,pY,fC,pY,nu,pY,nB,pY,hQ,pY,eI,pY,eE,pY,fn,pY,eJ,pY,gB,pY,hC,pY,fu,pY,f0,pY,hZ,pY,lj,pY,e_,pY,ot,pY,fg,pY,eL,pY,g1,pY,hP,pY,f6,pY,lA,pY,ig,pY,h4,pY,jE,pY,km,pY,fP,pY,fo,pY,hU,pY,hL,pY,hm,pY,hO,pY,gs,pY,ou,pY,h7,pY,ov,pY,m9,pY,jF,pY,nA,pY,lp,pY,fO,pY,ed,pY,ff,pY,fp,pY,nw,pY,j7,pY,h3,pY,k8,pY,kT,pY,eF,pY,ow,pY,gI,pY,lW,pY,gm,pY,hJ,pY,ne,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY,pY];var dx=[pZ,pZ,mT,pZ,gN,pZ,kN,pZ,kp,pZ,ox,pZ,mQ,pZ,kG,pZ,h6,pZ,fz,pZ,gZ,pZ,mP,pZ,kv,pZ,fQ,pZ,fk,pZ,fB,pZ,ln,pZ,oy,pZ,hq,pZ,kh,pZ,oz,pZ,kQ,pZ,kD,pZ,kg,pZ,ke,pZ,kO,pZ,lB,pZ,kL,pZ,f1,pZ,gg,pZ,gk,pZ,fW,pZ,kR,pZ,hR,pZ,mS,pZ,gY,pZ,e4,pZ,kq,pZ,gl,pZ,g4,pZ,mU,pZ,kF,pZ,ks,pZ,mR,pZ,hF,pZ,ku,pZ,lv,pZ,gF,pZ,g3,pZ,ha,pZ,g0,pZ,ls,pZ,f7,pZ,kA,pZ,kk,pZ,kj,pZ,ee,pZ,kf,pZ,eR,pZ,ft,pZ,gP,pZ,kB,pZ,m8,pZ,kC,pZ,oA,pZ,hT,pZ,kM,pZ,kr,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ,pZ];var dy=[p_,p_,oB,p_,oC,p_,oD,p_,oE,p_,p_,p_,p_,p_,p_,p_];var dz=[p$,p$,m6,p$,kz,p$,hh,p$,l8,p$,mY,p$,hi,p$,m4,p$,kn,p$,jG,p$,mW,p$,f9,p$,hy,p$,hx,p$,oF,p$,mA,p$,oG,p$,m0,p$,hN,p$,m_,p$,oH,p$,nv,p$,go,p$,mO,p$,oI,p$,mL,p$,m$,p$,e8,p$,mM,p$,he,p$,l7,p$,kP,p$,m1,p$,fy,p$,fR,p$,ko,p$,mq,p$,oJ,p$,kJ,p$,mV,p$,oK,p$,fX,p$,nn,p$,oL,p$,mB,p$,hH,p$,nY,p$,oM,p$,oN,p$,h9,p$,ki,p$,oO,p$,fr,p$,fY,p$,mN,p$,hf,p$,hu,p$,f2,p$,oP,p$,e9,p$,ma,p$,kt,p$,m5,p$,f8,p$,mp,p$,mg,p$,hv,p$,kc,p$,oQ,p$,mX,p$,kd,p$,gj,p$,ky,p$,mi,p$,kE,p$,mZ,p$,kK,p$,nS,p$,mf,p$,jU,p$,eO,p$,m3,p$,m2,p$,oR,p$,mt,p$,oS,p$,oT,p$,mE,p$,oU,p$,oV,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$,p$];var dA=[p0,p0,kW,p0,k2,p0,p0,p0];var dB=[p1,p1,nf,p1,hA,p1,im,p1,lY,p1,lQ,p1,oW,p1,k4,p1,nC,p1,ll,p1,lT,p1,nj,p1,is,p1,nk,p1,gv,p1,hk,p1,hg,p1,lJ,p1,hr,p1,lq,p1,l1,p1,gQ,p1,e5,p1,lO,p1,fF,p1,fA,p1,kZ,p1,hw,p1,gw,p1,l_,p1,oX,p1,hb,p1,oY,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1,p1];var dC=[p2,p2,jB,p2,jz,p2,jo,p2,jl,p2,p2,p2,p2,p2,p2,p2];var dD=[p3,p3,lh,p3,lb,p3,p3,p3];var dE=[p4,p4,fv,p4,fw,p4,p4,p4];var dF=[p5,p5,nK,p5,jx,p5,jt,p5,js,p5,nL,p5,jC,p5,lm,p5,hs,p5,e6,p5,oZ,p5,jp,p5,je,p5,jj,p5,jf,p5,eM,p5,nM,p5,hc,p5,lr,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5,p5];var dG=[p6,p6,iT,p6,iR,p6,iP,p6];var dH=[p7,p7,j8,p7,j5,p7,kU,p7,k1,p7,kY,p7,k3,p7,p7,p7];var dI=[p8,p8,jL,p8,jV,p8,jX,p8,jh,p8,li,p8,jy,p8,jw,p8,lc,p8,jH,p8,ju,p8,jK,p8,jY,p8,jA,p8,ej,p8,jb,p8,jJ,p8,jv,p8,jn,p8,i3,p8,jW,p8,jk,p8,ji,p8,i5,p8,i1,p8,i2,p8,iU,p8,i4,p8,i_,p8,iY,p8,ja,p8,i9,p8,i6,p8,jZ,p8,iv,p8,iG,p8,jI,p8,iK,p8,iC,p8,iE,p8,iI,p8,ix,p8,iS,p8,iQ,p8,iM,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8,p8];var dJ=[p9,p9,j_,p9,jM,p9,p9,p9];var dK=[qa,qa,lf,qa,k9,qa,qa,qa];var dL=[qb,qb,k_,qb,k5,qb,lg,qb,la,qb,qb,qb,qb,qb,qb,qb];var dM=[qc,qc,ga,qc,ek,qc,hY,qc,eW,qc,lR,qc,hz,qc,ep,qc,hX,qc,l$,qc,lX,qc,eu,qc,fZ,qc,o_,qc,eX,qc,f3,qc,lN,qc,eQ,qc,gK,qc,fa,qc,ei,qc,lZ,qc,gW,qc,hW,qc,gJ,qc,hl,qc,hB,qc,lD,qc,lP,qc,o$,qc,eP,qc,lE,qc,fb,qc,hj,qc,fS,qc,o0,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc,qc];var dN=[qd,qd,o1,qd,o2,qd,o3,qd,lU,qd,mo,qd,nh,qd,iq,qd,mC,qd,mr,qd,l2,qd,me,qd,o4,qd,ik,qd,nl,qd,l6,qd,l9,qd,mz,qd,mh,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd,qd];var dO=[qe,qe,o5,qe,lz,qe,o6,qe,eT,qe,o7,qe,o8,qe,qe,qe];var dP=[qf,qf,o9,qf,pa,qf,pb,qf];var dQ=[qg,qg,gD,qg,k6,qg,gy,qg,lw,qg,el,qg,pc,qg,ev,qg,pd,qg,pe,qg,gz,qg,pf,qg,gT,qg,eq,qg,eD,qg,gu,qg,ia,qg,gL,qg,gG,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg,qg];var dR=[qh,qh,pg,qh,nZ,qh,ph,qh,pi,qh,pj,qh,qh,qh,qh,qh];var dS=[qi,qi,mc,qi,mm,qi,mk,qi,mv,qi,mx,qi,md,qi,l4,qi,l5,qi,qi,qi,qi,qi,qi,qi,qi,qi,qi,qi,qi,qi,qi,qi];var dT=[qj,qj,pk,qj,lK,qj,jm,qj,iH,qj,iD,qj,pl,qj,iF,qj,lL,qj,iA,qj,l0,qj,iJ,qj,lS,qj,ng,qj,iL,qj,iV,qj,ni,qj,lM,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj,qj];var dU=[qk,qk,pm,qk,eN,qk,e7,qk,pn,qk,nE,qk,nF,qk,po,qk,fH,qk,pp,qk,nD,qk,pq,qk,hd,qk,ir,qk,ht,qk,pr,qk,ps,qk,il,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk,qk];return{_memcmp:n3,_strlen:n1,_free:nO,_main:fJ,_realloc:nP,_memmove:n5,__GLOBAL__I_a:eV,_memset:n0,_malloc:nN,_memcpy:n4,_llvm_ctlz_i32:n2,__GLOBAL__I_a162:gc,runPostSets:d9,stackAlloc:dV,stackSave:dW,stackRestore:dX,setThrew:dY,setTempRet0:d$,setTempRet1:d0,setTempRet2:d1,setTempRet3:d2,setTempRet4:d3,setTempRet5:d4,setTempRet6:d5,setTempRet7:d6,setTempRet8:d7,setTempRet9:d8,dynCall_iiiiiiii:pt,dynCall_vif:pu,dynCall_viiiii:pv,dynCall_vi:pw,dynCall_vii:px,dynCall_iiiiiii:py,dynCall_ii:pz,dynCall_iiiiiiiiiiii:pA,dynCall_iiii:pB,dynCall_viiiiif:pC,dynCall_viiiiiiiiiiiiiii:pD,dynCall_viff:pE,dynCall_viiiiii:pF,dynCall_fiii:pG,dynCall_viiiiiiii:pH,dynCall_viiiiiii:pI,dynCall_viiiiiiiii:pJ,dynCall_viiiiiif:pK,dynCall_viiiiiiiiii:pL,dynCall_iii:pM,dynCall_iiiiii:pN,dynCall_i:pO,dynCall_iiiiiiiiii:pP,dynCall_viii:pQ,dynCall_v:pR,dynCall_iiiiiiiii:pS,dynCall_iiiii:pT,dynCall_viiii:pU}})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_vif": invoke_vif, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiif": invoke_viiiiif, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viff": invoke_viff, "invoke_viiiiii": invoke_viiiiii, "invoke_fiii": invoke_fiii, "invoke_viiiiiiii": invoke_viiiiiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiif": invoke_viiiiiif, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_i": invoke_i, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "_lseek": _lseek, "_sysconf": _sysconf, "__scanString": __scanString, "_fclose": _fclose, "_pthread_mutex_lock": _pthread_mutex_lock, "___cxa_end_catch": ___cxa_end_catch, "_glLinkProgram": _glLinkProgram, "__isFloat": __isFloat, "_glBindTexture": _glBindTexture, "_fflush": _fflush, "_isxdigit": _isxdigit, "_clGetPlatformIDs": _clGetPlatformIDs, "_fputc": _fputc, "_fwrite": _fwrite, "_send": _send, "_fputs": _fputs, "_glfwGetTime": _glfwGetTime, "_glCompileShader": _glCompileShader, "_isspace": _isspace, "_sprintf": _sprintf, "_clRetainContext": _clRetainContext, "_clReleaseCommandQueue": _clReleaseCommandQueue, "_read": _read, "_glfwSetWindowTitle": _glfwSetWindowTitle, "_clGetContextInfo": _clGetContextInfo, "_clRetainCommandQueue": _clRetainCommandQueue, "___cxa_rethrow": ___cxa_rethrow, "_fsync": _fsync, "___cxa_guard_abort": ___cxa_guard_abort, "_newlocale": _newlocale, "___gxx_personality_v0": ___gxx_personality_v0, "_pthread_cond_wait": _pthread_cond_wait, "_glUniform1f": _glUniform1f, "___resumeException": ___resumeException, "_glCreateShader": _glCreateShader, "_glUniform1i": _glUniform1i, "_llvm_va_end": _llvm_va_end, "_glCreateProgram": _glCreateProgram, "_vsscanf": _vsscanf, "_clEnqueueReleaseGLObjects": _clEnqueueReleaseGLObjects, "_glfwCloseWindow": _glfwCloseWindow, "_glBlendFuncSeparate": _glBlendFuncSeparate, "___errno_location": ___errno_location, "_clReleaseContext": _clReleaseContext, "_glGetProgramiv": _glGetProgramiv, "_glVertexAttribPointer": _glVertexAttribPointer, "_atexit": _atexit, "___cxa_free_exception": ___cxa_free_exception, "_glGetUniformLocation": _glGetUniformLocation, "_close": _close, "_clEnqueueAcquireGLObjects": _clEnqueueAcquireGLObjects, "_glBindFramebuffer": _glBindFramebuffer, "_clCreateBuffer": _clCreateBuffer, "___setErrNo": ___setErrNo, "_clCreateContextFromType": _clCreateContextFromType, "_sqrtf": _sqrtf, "_ftell": _ftell, "_glDeleteProgram": _glDeleteProgram, "_exit": _exit, "_clRetainProgram": _clRetainProgram, "_clCreateProgramWithSource": _clCreateProgramWithSource, "___ctype_b_loc": ___ctype_b_loc, "_freelocale": _freelocale, "_glAttachShader": _glAttachShader, "_catgets": _catgets, "_asprintf": _asprintf, "___cxa_is_number_type": ___cxa_is_number_type, "___cxa_does_inherit": ___cxa_does_inherit, "___cxa_guard_acquire": ___cxa_guard_acquire, "_glBindAttribLocation": _glBindAttribLocation, "_clRetainKernel": _clRetainKernel, "___cxa_begin_catch": ___cxa_begin_catch, "_glfwTerminate": _glfwTerminate, "_recv": _recv, "__parseInt64": __parseInt64, "_glGenVertexArrays": _glGenVertexArrays, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_glBufferSubData": _glBufferSubData, "_clSetTypePointer": _clSetTypePointer, "___cxa_call_unexpected": ___cxa_call_unexpected, "_clFinish": _clFinish, "_glGetShaderiv": _glGetShaderiv, "__exit": __exit, "_strftime": _strftime, "_rand": _rand, "_strtoull": _strtoull, "_cosf": _cosf, "___cxa_throw": ___cxa_throw, "_clReleaseKernel": _clReleaseKernel, "_sinf": _sinf, "_llvm_eh_exception": _llvm_eh_exception, "_glShaderSource": _glShaderSource, "_pread": _pread, "_fopen": _fopen, "_open": _open, "_glDrawArrays": _glDrawArrays, "__arraySum": __arraySum, "_snprintf": _snprintf, "_puts": _puts, "_glClear": _glClear, "_clEnqueueNDRangeKernel": _clEnqueueNDRangeKernel, "_clReleaseProgram": _clReleaseProgram, "_fgetc": _fgetc, "_clCreateFromGLBuffer": _clCreateFromGLBuffer, "_glActiveTexture": _glActiveTexture, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_glBindBuffer": _glBindBuffer, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_glfwOpenWindow": _glfwOpenWindow, "_glBufferData": _glBufferData, "__formatString": __formatString, "_pthread_cond_broadcast": _pthread_cond_broadcast, "_clEnqueueReadBuffer": _clEnqueueReadBuffer, "__ZSt9terminatev": __ZSt9terminatev, "_isascii": _isascii, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_glGetShaderInfoLog": _glGetShaderInfoLog, "_sbrk": _sbrk, "_tanf": _tanf, "_clReleaseMemObject": _clReleaseMemObject, "_strerror": _strerror, "_glfwInit": _glfwInit, "_catclose": _catclose, "_llvm_lifetime_start": _llvm_lifetime_start, "_clGetProgramBuildInfo": _clGetProgramBuildInfo, "_glfwSwapBuffers": _glfwSwapBuffers, "___cxa_guard_release": ___cxa_guard_release, "_ungetc": _ungetc, "_uselocale": _uselocale, "_vsnprintf": _vsnprintf, "_glUseProgram": _glUseProgram, "_sscanf": _sscanf, "_glGetProgramInfoLog": _glGetProgramInfoLog, "_fread": _fread, "_clSetKernelArg": _clSetKernelArg, "_glBindVertexArray": _glBindVertexArray, "_abort": _abort, "_fprintf": _fprintf, "_isdigit": _isdigit, "_strtoll": _strtoll, "__reallyNegative": __reallyNegative, "_clCreateCommandQueue": _clCreateCommandQueue, "_glEnable": _glEnable, "_clBuildProgram": _clBuildProgram, "_fseek": _fseek, "__addDays": __addDays, "_write": _write, "_clRetainMemObject": _clRetainMemObject, "_glGenBuffers": _glGenBuffers, "_glFinish": _glFinish, "___cxa_allocate_exception": ___cxa_allocate_exception, "_glDeleteShader": _glDeleteShader, "_printf": _printf, "_ceilf": _ceilf, "___cxa_pure_virtual": ___cxa_pure_virtual, "_clCreateKernel": _clCreateKernel, "_vasprintf": _vasprintf, "_glViewport": _glViewport, "_glfwPollEvents": _glfwPollEvents, "_catopen": _catopen, "___ctype_toupper_loc": ___ctype_toupper_loc, "___ctype_tolower_loc": ___ctype_tolower_loc, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_glUniformMatrix4fv": _glUniformMatrix4fv, "_pwrite": _pwrite, "_strerror_r": _strerror_r, "_glfwSetKeyCallback": _glfwSetKeyCallback, "__isLeapYear": __isLeapYear, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdin": _stdin, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "___fsmu8": ___fsmu8, "_stdout": _stdout, "___dso_handle": ___dso_handle }, buffer);
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _llvm_ctlz_i32 = Module["_llvm_ctlz_i32"] = asm["_llvm_ctlz_i32"];
var __GLOBAL__I_a162 = Module["__GLOBAL__I_a162"] = asm["__GLOBAL__I_a162"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_vif = Module["dynCall_vif"] = asm["dynCall_vif"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiif = Module["dynCall_viiiiif"] = asm["dynCall_viiiiif"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viff = Module["dynCall_viff"] = asm["dynCall_viff"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_fiii = Module["dynCall_fiii"] = asm["dynCall_fiii"];
var dynCall_viiiiiiii = Module["dynCall_viiiiiiii"] = asm["dynCall_viiiiiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
var dynCall_viiiiiif = Module["dynCall_viiiiiif"] = asm["dynCall_viiiiiif"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
if (memoryInitializer) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    applyData(Module['readBinary'](memoryInitializer));
  } else {
    addRunDependency('memory initializer');
    Browser.asyncLoad(memoryInitializer, function(data) {
      applyData(data);
      removeRunDependency('memory initializer');
    }, function(data) {
      throw 'could not load memory initializer ' + memoryInitializer;
    });
  }
}
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;
var initialStackTop;
var preloadStartTime = null;
var calledMain = false;
var calledRun = false;
dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!calledRun && shouldRunNow) run();
  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
    Module.printErr('preload time: ' + (Date.now() - preloadStartTime) + ' ms');
  }
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  try {
    var ret = Module['_main'](argc, argv, 0);
    // if we're not running an evented main loop, it's time to exit
    if (!Module['noExitRuntime']) {
      exit(ret);
    }
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      throw e;
    }
  } finally {
    calledMain = true;
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (preloadStartTime === null) preloadStartTime = Date.now();
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    calledRun = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  EXITSTATUS = status;
  STACKTOP = initialStackTop;
  // exit the runtime
  exitRuntime();
  // TODO We should handle this differently based on environment.
  // In the browser, the best we can do is throw an exception
  // to halt execution, but in node we could process.exit and
  // I'd imagine SM shell would have something equivalent.
  // This would let us set a proper exit status (which
  // would be great for checking test exit statuses).
  // https://github.com/kripken/emscripten/issues/1371
  // throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
    Module.printErr(text);
  }
  ABORT = true;
  EXITSTATUS = 1;
  throw 'abort() at ' + (new Error().stack);
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
(function() {
function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
Module['FS_createPath']('/', 'kernel', true, true);
Module['FS_createPath']('/', 'shader', true, true);
    function DataRequest(start, end, crunched, audio) {
      this.start = start;
      this.end = end;
      this.crunched = crunched;
      this.audio = audio;
    }
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.name = name;
        this.requests[name] = this;
        Module['addRunDependency']('fp ' + this.name);
      },
      send: function() {},
      onload: function() {
        var byteArray = this.byteArray.subarray(this.start, this.end);
        if (this.crunched) {
          var ddsHeader = byteArray.subarray(0, 128);
          var that = this;
          requestDecrunch(this.name, byteArray.subarray(128), function(ddsData) {
            byteArray = new Uint8Array(ddsHeader.length + ddsData.length);
            byteArray.set(ddsHeader, 0);
            byteArray.set(ddsData, 128);
            that.finish(byteArray);
          });
        } else {
          this.finish(byteArray);
        }
      },
      finish: function(byteArray) {
        var that = this;
        Module['FS_createPreloadedFile'](this.name, null, byteArray, true, true, function() {
          Module['removeRunDependency']('fp ' + that.name);
        }, function() {
          if (that.audio) {
            Module['removeRunDependency']('fp ' + that.name); // workaround for chromium bug 124926 (still no audio with this, but at least we don't hang)
          } else {
            Runtime.warn('Preloading file ' + that.name + ' failed');
          }
        }, false, true); // canOwn this data in the filesystem, it is a slide into the heap that will never change
        this.requests[this.name] = null;
      },
    };
      new DataRequest(0, 1646, 0, 0).open('GET', '/kernel/lorenz.cl');
    new DataRequest(1646, 2844, 0, 0).open('GET', '/shader/lorenz.frag');
    new DataRequest(2844, 4169, 0, 0).open('GET', '/shader/lorenz.vert');
    if (!Module.expectedDataFileDownloads) {
      Module.expectedDataFileDownloads = 0;
      Module.finishedDataFileDownloads = 0;
    }
    Module.expectedDataFileDownloads++;
    var PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    var PACKAGE_NAME = '../build/latest/attractor.data';
    var REMOTE_PACKAGE_NAME = 'attractor.data';
    var PACKAGE_UUID = '9e2999c5-a3fd-4f78-979b-a09fc47ad423';
    function fetchRemotePackage(packageName, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        if (event.loaded && event.total) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: event.total
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };
    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
      // copy the entire loaded file into a spot in the heap. Files will refer to slices in that. They cannot be freed though.
      var ptr = Module['_malloc'](byteArray.length);
      Module['HEAPU8'].set(byteArray, ptr);
      DataRequest.prototype.byteArray = Module['HEAPU8'].subarray(ptr, ptr+byteArray.length);
          DataRequest.prototype.requests["/kernel/lorenz.cl"].onload();
          DataRequest.prototype.requests["/shader/lorenz.frag"].onload();
          DataRequest.prototype.requests["/shader/lorenz.vert"].onload();
          Module['removeRunDependency']('datafile_../build/latest/attractor.data');
    };
    Module['addRunDependency']('datafile_../build/latest/attractor.data');
    function handleError(error) {
      console.error('package error:', error);
    };
    if (!Module.preloadResults)
      Module.preloadResults = {};
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      fetchRemotePackage(REMOTE_PACKAGE_NAME, processPackageData, handleError);
})();
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
// {{MODULE_ADDITIONS}}
